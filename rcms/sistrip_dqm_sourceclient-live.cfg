process SiStrpDQMLive = {
    source = EventStreamHttpReader { 
        untracked string SelectHLTOutput = 'out4DQM'
        string sourceURL = 'http://srv-c2d05-14.cms:22100/urn:xdaq-application:lid=30'
        untracked string consumerPriority = 'normal'
        int32 max_event_size = 7000000
        untracked string consumerName = 'SiStrip DQM Consumer'
        int32 max_queue_depth = 5
        untracked double maxEventRequestRate = 25.0
        untracked PSet SelectEvents = { 
            vstring SelectEvents = {
                'GlobalRunTrackerDQM'
            }

        }

        untracked int32 headerRetryInterval = 3
    }
    module ctfWithMaterialTracksP5 = TrackProducer { 
        InputTag src = ckfTrackCandidatesP5
        InputTag clusterRemovalInfo = ""
        InputTag beamSpot = offlineBeamSpot
        string Fitter = 'FittingSmootherRKP5'
        bool useHitsSplitting = False
        untracked string alias = 'ctfWithMaterialTracks'
        bool TrajectoryInEvent = True
        string TTRHBuilder = 'WithAngleAndTemplate'
        string AlgorithmName = 'undefAlgorithm'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    module siPixelClusters = SiPixelClusterProducer { 
        InputTag src = siPixelDigis
        int32 ChannelThreshold = 2500
        untracked bool MissCalibrate = True
        int32 VCaltoElectronGain = 65
        int32 VCaltoElectronOffset = 0
        string payloadType = 'Offline'
        int32 SeedThreshold = 3000
        double ClusterThreshold = 5050.0
    }
    module offlineBeamSpot = BeamSpotProducer { 
    }
    module siStripDigis = SiStripRawToDigiModule { 
        untracked string ProductLabel = 'source'
        untracked int32 AppendedBytes = 0
        untracked bool UseFedKey = False
        untracked bool CreateDigis = True
        untracked int32 FedBufferDumpFreq = 0
        untracked int32 TriggerFedId = 0
        untracked int32 FedEventDumpFreq = 0
    }
    module rsWithMaterialTracksP5 = TrackProducer { 
        InputTag src = rsTrackCandidatesP5
        InputTag beamSpot = offlineBeamSpot
        string Fitter = 'RKFittingSmoother'
        bool useHitsSplitting = False
        bool TrajectoryInEvent = True
        string TTRHBuilder = 'WithAngleAndTemplate'
        string AlgorithmName = 'rs'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    module rsWithMaterialTracks = TrackProducer { 
        InputTag src = rsTrackCandidates
        InputTag beamSpot = offlineBeamSpot
        string Fitter = 'RKFittingSmoother'
        bool useHitsSplitting = False
        bool TrajectoryInEvent = True
        string TTRHBuilder = 'WithAngleAndTemplate'
        string AlgorithmName = 'rs'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    module simpleCosmicBONSeeds = SimpleCosmicBONSeeder { 
        untracked uint32 helixDebugLevel = 0
        PSet RegionPSet = { 
            double originRadius = 150.0
            double ptMin = 0.9
            double originZPosition = 0.0
            double originHalfLength = 90.0
        }

        PSet ClusterCheckPSet = { 
            uint32 MaxNumberOfCosmicClusters = 300
            InputTag ClusterCollectionLabel = siStripClusters
            bool doClusterCheck = True
        }

        PSet TripletsPSet = { 
            PSet TOB5 = { 
                string TTRHBuilder = 'WithTrackAngle'
                InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
            }

            PSet TOB4 = { 
                string TTRHBuilder = 'WithTrackAngle'
                InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
            }

            PSet TIB1 = { 
                InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                string TTRHBuilder = 'WithTrackAngle'
            }

            PSet TOB6 = { 
                string TTRHBuilder = 'WithTrackAngle'
                InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
            }

            PSet TOB1 = { 
                InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                string TTRHBuilder = 'WithTrackAngle'
            }

            PSet TOB3 = { 
                string TTRHBuilder = 'WithTrackAngle'
                InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
            }

            PSet TOB2 = { 
                InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                string TTRHBuilder = 'WithTrackAngle'
            }

            PSet TEC = { 
                untracked bool useSimpleRphiHitsCleaner = True
                int32 minRing = 5
                InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                untracked bool useRingSlector = False
                string TTRHBuilder = 'WithTrackAngle'
                InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                int32 maxRing = 7
            }

            PSet TIB2 = { 
                InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                string TTRHBuilder = 'WithTrackAngle'
            }

            PSet TIB3 = { 
                string TTRHBuilder = 'WithTrackAngle'
                InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
            }

            vstring layerList = {
                'TOB4+TOB5+TOB6'
                , 'TOB3+TOB5+TOB6'
                , 'TOB3+TOB4+TOB5'
                , 'TOB3+TOB4+TOB6'
                , 'TEC7_pos+TEC8_pos+TEC9_pos'
                , 'TEC6_pos+TEC7_pos+TEC8_pos'
                , 'TEC5_pos+TEC6_pos+TEC7_pos'
                , 'TEC4_pos+TEC5_pos+TEC6_pos'
                , 'TEC3_pos+TEC4_pos+TEC5_pos'
                , 'TEC2_pos+TEC3_pos+TEC4_pos'
                , 'TEC1_pos+TEC2_pos+TEC3_pos'
                , 'TEC7_neg+TEC8_neg+TEC9_neg'
                , 'TEC6_neg+TEC7_neg+TEC8_neg'
                , 'TEC5_neg+TEC6_neg+TEC7_neg'
                , 'TEC4_neg+TEC5_neg+TEC6_neg'
                , 'TEC3_neg+TEC4_neg+TEC5_neg'
                , 'TEC2_neg+TEC3_neg+TEC4_neg'
                , 'TEC1_neg+TEC2_neg+TEC3_neg'
                , 'TEC6_pos+TEC8_pos+TEC9_pos'
                , 'TEC5_pos+TEC7_pos+TEC8_pos'
                , 'TEC4_pos+TEC6_pos+TEC7_pos'
                , 'TEC3_pos+TEC5_pos+TEC6_pos'
                , 'TEC2_pos+TEC4_pos+TEC5_pos'
                , 'TEC1_pos+TEC3_pos+TEC4_pos'
                , 'TEC6_pos+TEC7_pos+TEC9_pos'
                , 'TEC5_pos+TEC6_pos+TEC8_pos'
                , 'TEC4_pos+TEC5_pos+TEC7_pos'
                , 'TEC3_pos+TEC4_pos+TEC6_pos'
                , 'TEC2_pos+TEC3_pos+TEC5_pos'
                , 'TEC1_pos+TEC2_pos+TEC4_pos'
                , 'TEC6_neg+TEC8_neg+TEC9_neg'
                , 'TEC5_neg+TEC7_neg+TEC8_neg'
                , 'TEC4_neg+TEC6_neg+TEC7_neg'
                , 'TEC3_neg+TEC5_neg+TEC6_neg'
                , 'TEC2_neg+TEC4_neg+TEC5_neg'
                , 'TEC1_neg+TEC3_neg+TEC4_neg'
                , 'TEC6_neg+TEC7_neg+TEC9_neg'
                , 'TEC5_neg+TEC6_neg+TEC8_neg'
                , 'TEC4_neg+TEC5_neg+TEC7_neg'
                , 'TEC3_neg+TEC4_neg+TEC6_neg'
                , 'TEC2_neg+TEC3_neg+TEC5_neg'
                , 'TEC1_neg+TEC2_neg+TEC4_neg'
                , 'TOB6+TEC1_pos+TEC2_pos'
                , 'TOB6+TEC1_neg+TEC2_neg'
                , 'TOB6+TOB5+TEC1_pos'
                , 'TOB6+TOB5+TEC1_neg'
            }

            untracked uint32 debugLevel = 0
        }

        untracked uint32 seedDebugLevel = 0
        string TTRHBuilder = 'WithTrackAngle'
        bool writeTriplets = False
    }
    module SiStripMonitorClusterSim = SiStripMonitorCluster { 
        bool CreateTrendMEs = False
        bool OutputMEsInRootFile = False
        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            double ymax = 10000.0
            int32 Steps = 10
            double xmax = 10.0
            double xmin = 0.0
            double ymin = 0.0
        }

        PSet TH1ClusterNoise = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 10.0
            bool layerswitchon = True
        }

        bool ResetMEsEachRun = False
        PSet ClusterConditions = { 
            double minWidth = 0.0
            bool On = True
            double maxStoN = 10000.0
            double minStoN = 0.0
            double maxWidth = 10000.0
        }

        PSet TH1NrOfClusterizedStrips = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 100.0
            bool layerswitchon = True
        }

        PSet TH1ClusterPos = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 768
            double xmax = 767.5
            bool layerswitchon = False
        }

        string OutputFileName = 'SiStripMonitorCluster.root'
        bool SelectAllDetectors = True
        bool ShowMechanicalStructureView = True
        PSet TH1ModuleLocalOccupancy = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 0.95
            bool layerswitchon = True
        }

        PSet TH1nClusters = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 11
            double xmax = 10.5
            bool layerswitchon = False
        }

        string ClusterLabel = ''
        PSet TH1ClusterStoN = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 60
            double xmax = 200.0
            bool layerswitchon = False
        }

        string StripQualityLabel = 'test1'
        string ClusterProducer = 'siStripClusters'
        PSet TH1ClusterCharge = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 100
            double xmax = 500.0
            bool layerswitchon = True
        }

        PSet detectorson = { 
            bool tobon = True
            bool tibon = True
            bool tecon = True
            bool tidon = True
        }

        PSet TH1ClusterWidth = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 19.5
            bool layerswitchon = True
        }

        bool ShowControlView = False
        bool ShowReadoutView = False
    }
    module cosmictrackfinder = CosmicTrackFinder { 
        bool TrajInEvents = True
        int32 MinHits = 4
        string HitProducer = 'siStripRecHits'
        InputTag pixelRecHits = siPixelRecHits
        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
        InputTag stereorecHits = siStripMatchedRecHits:stereoRecHit
        double Chi2Cut = 30.0
        string TTRHBuilder = 'WithTrackAngle'
        InputTag rphirecHits = siStripMatchedRecHits:rphiRecHit
        untracked bool debug = True
        untracked string GeometricStructure = 'MTCC'
        InputTag cosmicSeeds = cosmicseedfinder
    }
    module MonitorTrackResiduals_ckf = MonitorTrackResiduals { 
        bool OutputMEsInRootFile = False
        bool Mod_On = False
        PSet TH1NormResModules = { 
            double xmin = -3.0
            int32 Nbinx = 120
            double xmax = 3.0
        }

        string trajectoryInput = 'ctfWithMaterialTracksP5'
        string OutputFileName = 'test_monitortracks.root'
        bool ResetAfterRun = True
        InputTag Tracks = ctfWithMaterialTracksP5
        PSet TH1ResModules = { 
            double xmin = -2.0
            int32 Nbinx = 120
            double xmax = 2.0
        }

    }
    module TrackMon_cosmicTk = TrackingMonitor { 
        bool OutputMEsInRootFile = False
        double phiErrMax = 0.5
        string MeasurementState = 'default'
        int32 TrackPxBin = 100
        int32 VXBin = 200
        int32 RecHitBin = 35
        int32 VZBin = 200
        string FolderName = 'SiStrip/Tracks'
        double Chi2Max = 500.0
        int32 Chi2Bin = 100
        double pyErrMax = 1000.0
        double RecHitMax = 34.5
        double VYMin = -100.0
        double pErrMax = 1000.0
        double TrackPxMax = 50.0
        double TrackPzMax = 50.0
        double VYMax = 100.0
        double TrackPxMin = -50.0
        double RecHitMin = -0.5
        string OutputFileName = 'MonitorTrack.root'
        double pzErrMin = -1000.0
        double EtaMin = -3.0
        int32 pErrBin = 1000
        int32 TrackPyBin = 100
        double pyErrMin = -1000.0
        double VZMax = 200.0
        int32 phiErrBin = 500
        int32 PhiBin = 100
        double EtaMax = 3.0
        int32 etaErrBin = 500
        double PhiMax = 3.2
        double ThetaMin = 0.0
        double PhiMin = -3.2
        double TrackPtMax = 30.0
        int32 pxErrBin = 1000
        double VXMax = 100.0
        double ptErrMin = 0.0
        double TkSizeMin = -0.5
        int32 D0Bin = 200
        double VXMin = -100.0
        int32 TrackPzBin = 100
        double ThetaMax = 3.2
        double pzErrMax = 1000.0
        double etaErrMax = 0.5
        int32 EtaBin = 100
        double ptErrMax = 1000.0
        double VZMin = -200.0
        double etaErrMin = 0.0
        int32 VYBin = 200
        double pxErrMax = 1000.0
        int32 TkSizeBin = 25
        string AlgoName = 'CosmicTk'
        double TrackPyMin = -50.0
        double D0Max = 100.0
        InputTag TrackProducer = cosmictrackfinderP5
        double TkSizeMax = 24.5
        int32 TrackPtBin = 100
        int32 ThetaBin = 100
        double TrackPyMax = 50.0
        double D0Min = -100.0
        double phiErrMin = 0.0
        int32 pyErrBin = 1000
        double pxErrMin = -1000.0
        int32 pzErrBin = 1000
        double pErrMin = -1000.0
        double Chi2Min = -0.5
        double TrackPzMin = -50.0
        double TrackPtMin = -0.5
        int32 ptErrBin = 500
    }
    module combinatorialcosmicseedfinder = CtfSpecialSeedGenerator { 
        double ErrorRescaling = 50.0
        PSet RegionFactoryPSet = { 
            PSet RegionPSet = { 
                bool precise = True
                double originHalfLength = 15.9
                double originZPos = 0.0
                double originYPos = 0.0
                double ptMin = 0.9
                double originXPos = 0.0
                double originRadius = 0.2
            }

            string ComponentName = 'GlobalRegionProducer'
        }

        PSet UpperScintillatorParameters = { 
            double GlobalX = 0.0
            double GlobalY = 300.0
            double GlobalZ = 50.0
            double WidthInX = 100.0
            double LenghtInZ = 100.0
        }

        vint32 Charges = {
            -1
        }

        VPSet OrderedHitsFactoryPSets = {
            { 
                string ComponentName = 'GenericTripletGenerator'
                PSet LayerPSet = { 
                    PSet TOB5 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB4 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TIB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB6 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TEC = { 
                        untracked bool useSimpleRphiHitsCleaner = True
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = False
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                    PSet TIB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TIB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    vstring layerList = {
                        'TOB4+TOB5+TOB6'
                        , 'TOB3+TOB5+TOB6'
                        , 'TOB3+TOB4+TOB5'
                        , 'TOB2+TOB4+TOB5'
                        , 'TOB3+TOB4+TOB6'
                        , 'TOB2+TOB4+TOB6'
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'outsideIn'
            }

            , { 
                string ComponentName = 'GenericPairGenerator'
                PSet LayerPSet = { 
                    PSet TOB5 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB4 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TIB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB6 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TEC = { 
                        untracked bool useSimpleRphiHitsCleaner = True
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = False
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                    PSet TIB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TIB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    vstring layerList = {
                        'TEC1_pos+TEC2_pos'
                        , 'TEC2_pos+TEC3_pos'
                        , 'TEC3_pos+TEC4_pos'
                        , 'TEC4_pos+TEC5_pos'
                        , 'TEC5_pos+TEC6_pos'
                        , 'TEC6_pos+TEC7_pos'
                        , 'TEC7_pos+TEC8_pos'
                        , 'TEC8_pos+TEC9_pos'
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'outsideIn'
            }

            , { 
                string ComponentName = 'GenericTripletGenerator'
                PSet LayerPSet = { 
                    PSet TOB5 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB4 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TIB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB6 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TEC = { 
                        untracked bool useSimpleRphiHitsCleaner = True
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = False
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                    PSet TIB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TIB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    vstring layerList = {
                        'TIB1+TIB2+TIB3'
                    }

                }

                string PropagationDirection = 'oppositeToMomentum'
                string NavigationDirection = 'insideOut'
            }

        }

        uint32 MaxNumberOfCosmicClusters = 300
        bool UseScintillatorsConstraint = True
        bool SetMomentum = True
        string TTRHBuilder = 'WithTrackAngle'
        InputTag ClusterCollectionLabel = siStripClusters
        bool SeedsFromPositiveY = True
        bool doClusterCheck = True
        double SeedMomentum = 5.0
        bool CheckHitsAreOnDifferentLayers = False
        PSet LowerScintillatorParameters = { 
            double GlobalX = 0.0
            double GlobalY = -100.0
            double GlobalZ = 50.0
            double WidthInX = 100.0
            double LenghtInZ = 100.0
        }

    }
    module dqmSaver = DQMFileSaver { 
        untracked int32 saveByTime = 4
        untracked string producer = 'Playback'
        untracked int32 saveByEvent = -1
        untracked int32 forceRunNumber = -1
        untracked int32 saveByRun = -1
        untracked string workflow = ''
        untracked bool saveAtJobEnd = False
        untracked int32 referenceRequireStatus = 100
        untracked string convention = 'Online'
        untracked int32 saveByMinute = 16
        untracked string dirName = '/home/dqmprolocal/output'
        untracked int32 saveByLumiSection = -1
        untracked string referenceHandling = 'qtests'
    }
    module siStripMatchedRecHits = SiStripRecHitConverter { 
        string StripCPE = 'StripCPEfromTrackAngle'
        bool Regional = False
        string stereoRecHits = 'stereoRecHit'
        bool useSiStripQuality = False
        string matchedRecHits = 'matchedRecHit'
        string LazyGetterProducer = 'SiStripRawToClustersFacility'
        string ClusterProducer = 'siStripClusters'
        untracked int32 VerbosityLevel = 1
        string rphiRecHits = 'rphiRecHit'
        string Matcher = 'StandardMatcher'
        string siStripQualityLabel = ''
        bool MaskBadAPVFibers = False
    }
    module siPixelDigis = SiPixelRawToDigi { 
        untracked bool Timing = False
        untracked bool IncludeErrors = False
        untracked string InputLabel = 'source'
        untracked bool CheckPixelOrder = False
    }
    module SiStripMonitorClusterReal = SiStripMonitorCluster { 
        bool CreateTrendMEs = False
        bool OutputMEsInRootFile = False
        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            double ymax = 10000.0
            int32 Steps = 10
            double xmax = 10.0
            double xmin = 0.0
            double ymin = 0.0
        }

        PSet TH1ClusterNoise = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 10.0
            bool layerswitchon = True
        }

        bool ResetMEsEachRun = False
        PSet ClusterConditions = { 
            double minWidth = 0.0
            bool On = True
            double maxStoN = 10000.0
            double minStoN = 0.0
            double maxWidth = 10000.0
        }

        PSet TH1NrOfClusterizedStrips = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 100.0
            bool layerswitchon = True
        }

        PSet TH1ClusterPos = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 768
            double xmax = 767.5
            bool layerswitchon = False
        }

        string OutputFileName = 'SiStripMonitorCluster.root'
        bool SelectAllDetectors = True
        bool ShowMechanicalStructureView = True
        PSet TH1ModuleLocalOccupancy = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 0.95
            bool layerswitchon = True
        }

        PSet TH1nClusters = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 11
            double xmax = 10.5
            bool layerswitchon = False
        }

        string ClusterLabel = ''
        PSet TH1ClusterStoN = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 60
            double xmax = 200.0
            bool layerswitchon = False
        }

        string StripQualityLabel = ''
        string ClusterProducer = 'siStripClusters'
        PSet TH1ClusterCharge = { 
            double xmin = 0.0
            bool moduleswitchon = True
            int32 Nbinx = 100
            double xmax = 500.0
            bool layerswitchon = True
        }

        PSet detectorson = { 
            bool tobon = True
            bool tibon = True
            bool tecon = True
            bool tidon = True
        }

        PSet TH1ClusterWidth = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 20
            double xmax = 19.5
            bool layerswitchon = True
        }

        bool ShowControlView = False
        bool ShowReadoutView = False
    }
    module cosmictrackfinderP5 = CosmicTrackFinder { 
        bool TrajInEvents = True
        int32 MinHits = 4
        string HitProducer = 'siStripRecHits'
        InputTag pixelRecHits = siPixelRecHits
        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
        InputTag stereorecHits = siStripMatchedRecHits:stereoRecHit
        double Chi2Cut = 30.0
        string TTRHBuilder = 'WithTrackAngle'
        InputTag rphirecHits = siStripMatchedRecHits:rphiRecHit
        untracked bool debug = True
        untracked string GeometricStructure = 'STANDARD'
        InputTag cosmicSeeds = cosmicseedfinderP5
    }
    module SiStripClient = SiStripAnalyser { 
        PSet TkmapParameters = { 
            untracked bool loadFedCabling = True
            untracked string trackerdatPath = 'CommonTools/TrackerMap/data/'
            untracked string trackermaptxtPath = 'DQM/Integration/test/TkMap/'
        }

        untracked int32 StaticUpdateFrequency = -1
        untracked int32 SummaryCreationFrequency = 1
        untracked int32 TkMapCreationFrequency = -1
        untracked bool GlobalStatusFilling = True
    }
    module rsTrackCandidates = RoadSearchTrackCandidateMaker { 
        int32 NumHitCut = 5
        double InitialVertexErrorXY = 0.2
        double HitChi2Cut = 30.0
        bool StraightLineNoBeamSpotCloud = False
        int32 nFoundMin = 4
        int32 MinimumChunkLength = 7
        string TTRHBuilder = 'WithTrackAngle'
        bool CosmicTrackMerging = False
        string MeasurementTrackerName = ''
        InputTag CloudProducer = roadSearchClouds
        double CosmicSeedPt = 5.0
        bool SplitMatchedHits = False
    }
    module TrackMon_rs = TrackingMonitor { 
        bool OutputMEsInRootFile = False
        double phiErrMax = 0.5
        string MeasurementState = 'default'
        int32 TrackPxBin = 100
        int32 VXBin = 200
        int32 RecHitBin = 35
        int32 VZBin = 200
        string FolderName = 'SiStrip/Tracks'
        double Chi2Max = 500.0
        int32 Chi2Bin = 100
        double pyErrMax = 1000.0
        double RecHitMax = 34.5
        double VYMin = -100.0
        double pErrMax = 1000.0
        double TrackPxMax = 50.0
        double TrackPzMax = 50.0
        double VYMax = 100.0
        double TrackPxMin = -50.0
        double RecHitMin = -0.5
        string OutputFileName = 'MonitorTrack.root'
        double pzErrMin = -1000.0
        double EtaMin = -3.0
        int32 pErrBin = 1000
        int32 TrackPyBin = 100
        double pyErrMin = -1000.0
        double VZMax = 200.0
        int32 phiErrBin = 500
        int32 PhiBin = 100
        double EtaMax = 3.0
        int32 etaErrBin = 500
        double PhiMax = 3.2
        double ThetaMin = 0.0
        double PhiMin = -3.2
        double TrackPtMax = 30.0
        int32 pxErrBin = 1000
        double VXMax = 100.0
        double ptErrMin = 0.0
        double TkSizeMin = -0.5
        int32 D0Bin = 200
        double VXMin = -100.0
        int32 TrackPzBin = 100
        double ThetaMax = 3.2
        double pzErrMax = 1000.0
        double etaErrMax = 0.5
        int32 EtaBin = 100
        double ptErrMax = 1000.0
        double VZMin = -200.0
        double etaErrMin = 0.0
        int32 VYBin = 200
        double pxErrMax = 1000.0
        int32 TkSizeBin = 25
        string AlgoName = 'RSTk'
        double TrackPyMin = -50.0
        double D0Max = 100.0
        InputTag TrackProducer = rsWithMaterialTracksP5
        double TkSizeMax = 24.5
        int32 TrackPtBin = 100
        int32 ThetaBin = 100
        double TrackPyMax = 50.0
        double D0Min = -100.0
        double phiErrMin = 0.0
        int32 pyErrBin = 1000
        double pxErrMin = -1000.0
        int32 pzErrBin = 1000
        double pErrMin = -1000.0
        double Chi2Min = -0.5
        double TrackPzMin = -50.0
        double TrackPtMin = -0.5
        int32 ptErrBin = 500
    }
    module roadSearchClouds = RoadSearchCloudMaker { 
        double MinimalFractionOfUsedLayersPerCloud = 0.5
        InputTag pixelRecHits = siPixelRecHits
        double MergingFraction = 0.8
        uint32 MaxDetHitsInCloudPerDetId = 32
        InputTag SeedProducer = roadSearchSeeds
        bool DoCloudCleaning = True
        uint32 IncreaseMaxNumberOfConsecutiveMissedLayersPerCloud = 4
        InputTag rphiStripRecHits = siStripMatchedRecHits:rphiRecHit
        bool UseStereoRecHits = False
        double ZPhiRoadSize = 0.06
        double MaximalFractionOfConsecutiveMissedLayersPerCloud = 0.15
        InputTag stereoStripRecHits = siStripMatchedRecHits:stereoRecHit
        double MaximalFractionOfMissedLayersPerCloud = 0.3
        double scalefactorRoadSeedWindow = 1.5
        bool UsePixelsinRS = True
        uint32 IncreaseMaxNumberOfMissedLayersPerCloud = 3
        string RoadsLabel = ''
        int32 MaxRecHitsInCloud = 100
        bool UseRphiRecHits = False
        bool StraightLineNoBeamSpotCloud = False
        double RPhiRoadSize = 0.02
        InputTag matchedStripRecHits = siStripMatchedRecHits:matchedRecHit
        double MinimumHalfRoad = 0.55
    }
    module cosmicseedfinder = CosmicSeedGenerator { 
        double originHalfLength = 90.0
        double originZPosition = 0.0
        untracked string GeometricStructure = 'STANDARD'
        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
        uint32 MaxNumberOfCosmicClusters = 300
        double SeedPt = 5.0
        untracked string HitsForSeeds = 'pairs'
        string TTRHBuilder = 'WithTrackAngle'
        double ptMin = 0.9
        InputTag rphirecHits = siStripMatchedRecHits:rphiRecHit
        bool doClusterCheck = True
        double originRadius = 150.0
        InputTag ClusterCollectionLabel = siStripClusters
        InputTag stereorecHits = siStripMatchedRecHits:stereoRecHit
    }
    module roadSearchSeeds = RoadSearchSeedFinder { 
        string OuterSeedRecHitAccessMode = 'RPHI'
        InputTag pixelRecHits = siPixelRecHits
        double MaximalEndcapImpactParameter = 1.2
        uint32 MaxNumberOfCosmicClusters = 300
        double MergeSeedsCenterCut_B = 0.25
        double MergeSeedsCenterCut_A = 0.05
        uint32 MergeSeedsDifferentHitsCut = 1
        InputTag rphiStripRecHits = siStripMatchedRecHits:rphiRecHit
        double MaximalBarrelImpactParameter = 0.2
        bool doClusterCheck = False
        InputTag stereoStripRecHits = siStripMatchedRecHits:stereoRecHit
        InputTag ClusterCollectionLabel = siStripClusters
        bool OuterSeedRecHitAccessUseStereo = False
        double MergeSeedsCenterCut_C = 0.4
        double MinimalReconstructedTransverseMomentum = 1.5
        double PhiRangeForDetIdLookupInRings = 0.5
        string Mode = 'STANDARD'
        string RoadsLabel = ''
        string InnerSeedRecHitAccessMode = 'RPHI'
        bool InnerSeedRecHitAccessUseStereo = False
        bool OuterSeedRecHitAccessUseRPhi = False
        double MergeSeedsRadiusCut_B = 0.25
        double MergeSeedsRadiusCut_C = 0.4
        InputTag matchedStripRecHits = siStripMatchedRecHits:matchedRecHit
        double MergeSeedsRadiusCut_A = 0.05
        bool InnerSeedRecHitAccessUseRPhi = False
    }
    module MonitorTrackResiduals_rs = MonitorTrackResiduals { 
        bool OutputMEsInRootFile = False
        bool Mod_On = False
        PSet TH1NormResModules = { 
            double xmin = -3.0
            int32 Nbinx = 120
            double xmax = 3.0
        }

        string trajectoryInput = 'rsWithMaterialTracksP5'
        string OutputFileName = 'test_monitortracks.root'
        bool ResetAfterRun = True
        InputTag Tracks = rsWithMaterialTracksP5
        PSet TH1ResModules = { 
            double xmin = -2.0
            int32 Nbinx = 120
            double xmax = 2.0
        }

    }
    module ckfTrackCandidates = CkfTrackCandidateMaker { 
        PSet TransientInitialStateEstimatorParameters = { 
            string propagatorAlongTISE = 'PropagatorWithMaterial'
            string propagatorOppositeTISE = 'PropagatorWithMaterialOpposite'
        }

        string RedundantSeedCleaner = 'CachingSeedCleanerBySharedInput'
        string SeedLabel = ''
        bool useHitsSplitting = True
        bool doSeedingRegionRebuilding = True
        string SeedProducer = 'globalMixedSeeds'
        string NavigationSchool = 'SimpleNavigationSchool'
        string TrajectoryBuilder = 'GroupedCkfTrajectoryBuilder'
        string TrajectoryCleaner = 'TrajectoryCleanerBySharedHits'
    }
    module MonitorTrackResiduals_cosmicTk = MonitorTrackResiduals { 
        bool OutputMEsInRootFile = False
        bool Mod_On = False
        PSet TH1NormResModules = { 
            double xmin = -3.0
            int32 Nbinx = 120
            double xmax = 3.0
        }

        string trajectoryInput = 'cosmictrackfinderP5'
        string OutputFileName = 'test_monitortracks.root'
        bool ResetAfterRun = True
        InputTag Tracks = cosmictrackfinderP5
        PSet TH1ResModules = { 
            double xmin = -2.0
            int32 Nbinx = 120
            double xmax = 2.0
        }

    }
    module siStripClusters = SiStripClusterizer { 
        int32 MaxHolesInCluster = 0
        double ChannelThreshold = 2.0
        VPSet DigiProducersList = {
            { 
                string DigiLabel = 'ZeroSuppressed'
                string DigiProducer = 'siStripDigis'
            }

            , { 
                string DigiLabel = 'VirginRaw'
                string DigiProducer = 'siStripZeroSuppression'
            }

            , { 
                string DigiLabel = 'ProcessedRaw'
                string DigiProducer = 'siStripZeroSuppression'
            }

            , { 
                string DigiLabel = 'ScopeMode'
                string DigiProducer = 'siStripZeroSuppression'
            }

        }

        string ClusterMode = 'ThreeThresholdClusterizer'
        double SeedThreshold = 3.0
        string SiStripQualityLabel = ''
        double ClusterThreshold = 5.0
    }
    module TrackMon_ckf = TrackingMonitor { 
        bool OutputMEsInRootFile = False
        double phiErrMax = 0.5
        string MeasurementState = 'default'
        int32 TrackPxBin = 100
        int32 VXBin = 200
        int32 RecHitBin = 35
        int32 VZBin = 200
        string FolderName = 'SiStrip/Tracks'
        double Chi2Max = 500.0
        int32 Chi2Bin = 100
        double pyErrMax = 1000.0
        double RecHitMax = 34.5
        double VYMin = -100.0
        double pErrMax = 1000.0
        double TrackPxMax = 50.0
        double TrackPzMax = 50.0
        double VYMax = 100.0
        double TrackPxMin = -50.0
        double RecHitMin = -0.5
        string OutputFileName = 'MonitorTrack.root'
        double pzErrMin = -1000.0
        double EtaMin = -3.0
        int32 pErrBin = 1000
        int32 TrackPyBin = 100
        double pyErrMin = -1000.0
        double VZMax = 200.0
        int32 phiErrBin = 500
        int32 PhiBin = 100
        double EtaMax = 3.0
        int32 etaErrBin = 500
        double PhiMax = 3.2
        double ThetaMin = 0.0
        double PhiMin = -3.2
        double TrackPtMax = 30.0
        int32 pxErrBin = 1000
        double VXMax = 100.0
        double ptErrMin = 0.0
        double TkSizeMin = -0.5
        int32 D0Bin = 200
        double VXMin = -100.0
        int32 TrackPzBin = 100
        double ThetaMax = 3.2
        double pzErrMax = 1000.0
        double etaErrMax = 0.5
        int32 EtaBin = 100
        double ptErrMax = 1000.0
        double VZMin = -200.0
        double etaErrMin = 0.0
        int32 VYBin = 200
        double pxErrMax = 1000.0
        int32 TkSizeBin = 25
        string AlgoName = 'CKFTk'
        double TrackPyMin = -50.0
        double D0Max = 100.0
        InputTag TrackProducer = ctfWithMaterialTracksP5
        double TkSizeMax = 24.5
        int32 TrackPtBin = 100
        int32 ThetaBin = 100
        double TrackPyMax = 50.0
        double D0Min = -100.0
        double phiErrMin = 0.0
        int32 pyErrBin = 1000
        double pxErrMin = -1000.0
        int32 pzErrBin = 1000
        double pErrMin = -1000.0
        double Chi2Min = -0.5
        double TrackPzMin = -50.0
        double TrackPtMin = -0.5
        int32 ptErrBin = 500
    }
    module siStripZeroSuppression = SiStripZeroSuppression { 
        VPSet RawDigiProducersList = {
            { 
                string RawDigiProducer = 'siStripDigis'
                string RawDigiLabel = 'VirginRaw'
            }

            , { 
                string RawDigiProducer = 'siStripDigis'
                string RawDigiLabel = 'ProcessedRaw'
            }

            , { 
                string RawDigiProducer = 'siStripDigis'
                string RawDigiLabel = 'ScopeMode'
            }

        }

        uint32 FEDalgorithm = 4
        string CommonModeNoiseSubtractionMode = 'Median'
        double CutToAvoidSignal = 3.0
        string ZeroSuppressionMode = 'SiStripFedZeroSuppression'
    }
    module combinatorialcosmicseedfinderP5 = CtfSpecialSeedGenerator { 
        double ErrorRescaling = 50.0
        PSet RegionFactoryPSet = { 
            PSet RegionPSet = { 
                bool precise = True
                double originHalfLength = 15.9
                double originZPos = 0.0
                double originYPos = 0.0
                double ptMin = 0.9
                double originXPos = 0.0
                double originRadius = 0.2
            }

            string ComponentName = 'GlobalRegionProducer'
        }

        PSet UpperScintillatorParameters = { 
            double GlobalX = 0.0
            double GlobalY = 300.0
            double GlobalZ = 50.0
            double WidthInX = 100.0
            double LenghtInZ = 100.0
        }

        vint32 Charges = {
            -1
        }

        VPSet OrderedHitsFactoryPSets = {
            { 
                string ComponentName = 'GenericTripletGenerator'
                PSet LayerPSet = { 
                    PSet TOB5 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB4 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TIB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB6 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TEC = { 
                        untracked bool useSimpleRphiHitsCleaner = True
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = False
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                    PSet TIB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TIB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    vstring layerList = {
                        'TOB4+TOB5+TOB6'
                        , 'TOB3+TOB5+TOB6'
                        , 'TOB3+TOB4+TOB5'
                        , 'TOB2+TOB4+TOB5'
                        , 'TOB3+TOB4+TOB6'
                        , 'TOB2+TOB4+TOB6'
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'outsideIn'
            }

            , { 
                string ComponentName = 'GenericPairGenerator'
                PSet LayerPSet = { 
                    PSet TOB5 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB4 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TIB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB6 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB1 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TOB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    PSet TOB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TEC = { 
                        untracked bool useSimpleRphiHitsCleaner = True
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = False
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                    PSet TIB2 = { 
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        string TTRHBuilder = 'WithTrackAngle'
                    }

                    PSet TIB3 = { 
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                    }

                    vstring layerList = {
                        'TOB5+TOB6'
                        , 'TOB4+TOB5'
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'outsideIn'
            }

            , { 
                string ComponentName = 'GenericPairGenerator'
                PSet LayerPSet = { 
                    vstring layerList = {
                        'TEC1_pos+TEC2_pos'
                        , 'TEC2_pos+TEC3_pos'
                        , 'TEC3_pos+TEC4_pos'
                        , 'TEC4_pos+TEC5_pos'
                        , 'TEC5_pos+TEC6_pos'
                        , 'TEC6_pos+TEC7_pos'
                        , 'TEC7_pos+TEC8_pos'
                        , 'TEC8_pos+TEC9_pos'
                    }

                    PSet TEC = { 
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = True
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'outsideIn'
            }

            , { 
                string ComponentName = 'GenericPairGenerator'
                PSet LayerPSet = { 
                    vstring layerList = {
                        'TEC1_pos+TEC2_pos'
                        , 'TEC2_pos+TEC3_pos'
                        , 'TEC3_pos+TEC4_pos'
                        , 'TEC4_pos+TEC5_pos'
                        , 'TEC5_pos+TEC6_pos'
                        , 'TEC6_pos+TEC7_pos'
                        , 'TEC7_pos+TEC8_pos'
                        , 'TEC8_pos+TEC9_pos'
                    }

                    PSet TEC = { 
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = True
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'insideOut'
            }

            , { 
                string ComponentName = 'GenericPairGenerator'
                PSet LayerPSet = { 
                    vstring layerList = {
                        'TEC1_neg+TEC2_neg'
                        , 'TEC2_neg+TEC3_neg'
                        , 'TEC3_neg+TEC4_neg'
                        , 'TEC4_neg+TEC5_neg'
                        , 'TEC5_neg+TEC6_neg'
                        , 'TEC6_neg+TEC7_neg'
                        , 'TEC7_neg+TEC8_neg'
                        , 'TEC8_neg+TEC9_neg'
                    }

                    PSet TEC = { 
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = True
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'outsideIn'
            }

            , { 
                string ComponentName = 'GenericPairGenerator'
                PSet LayerPSet = { 
                    vstring layerList = {
                        'TEC1_neg+TEC2_neg'
                        , 'TEC2_neg+TEC3_neg'
                        , 'TEC3_neg+TEC4_neg'
                        , 'TEC4_neg+TEC5_neg'
                        , 'TEC5_neg+TEC6_neg'
                        , 'TEC6_neg+TEC7_neg'
                        , 'TEC7_neg+TEC8_neg'
                        , 'TEC8_neg+TEC9_neg'
                    }

                    PSet TEC = { 
                        int32 minRing = 5
                        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
                        untracked bool useRingSlector = True
                        string TTRHBuilder = 'WithTrackAngle'
                        InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
                        int32 maxRing = 7
                    }

                }

                string PropagationDirection = 'alongMomentum'
                string NavigationDirection = 'insideOut'
            }

        }

        uint32 MaxNumberOfCosmicClusters = 300
        bool UseScintillatorsConstraint = False
        bool SetMomentum = True
        string TTRHBuilder = 'WithTrackAngle'
        InputTag ClusterCollectionLabel = siStripClusters
        bool SeedsFromPositiveY = True
        bool doClusterCheck = True
        double SeedMomentum = 5.0
        bool CheckHitsAreOnDifferentLayers = False
        PSet LowerScintillatorParameters = { 
            double GlobalX = 0.0
            double GlobalY = -100.0
            double GlobalZ = 50.0
            double WidthInX = 100.0
            double LenghtInZ = 100.0
        }

    }
    module ckfTrackCandidatesP5 = CkfTrackCandidateMaker { 
        PSet TransientInitialStateEstimatorParameters = { 
            string propagatorAlongTISE = 'PropagatorWithMaterial'
            string propagatorOppositeTISE = 'PropagatorWithMaterialOpposite'
        }

        string RedundantSeedCleaner = 'CachingSeedCleanerBySharedInput'
        string SeedLabel = ''
        bool useHitsSplitting = True
        bool doSeedingRegionRebuilding = True
        string SeedProducer = 'combinedP5SeedsForCTF'
        string NavigationSchool = 'CosmicNavigationSchool'
        string TrajectoryBuilder = 'GroupedCkfTrajectoryBuilderP5'
        string TrajectoryCleaner = 'TrajectoryCleanerBySharedHits'
    }
    module SiStripMonitorTrack_p5 = SiStripMonitorTrack { 
        bool OutputMEsInRootFile = False
        bool Mod_On = True
        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            int32 Steps = 5
        }

        PSet TH1ClusterNoise = { 
            double xmin = 0.0
            int32 Nbinx = 20
            double xmax = 10.0
        }

        string FolderName = 'SiStrip/Tracks'
        InputTag Cluster_src = siStripClusters
        PSet TH1nTracks = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        PSet ClusterConditions = { 
            double minWidth = 0.0
            bool On = False
            double maxStoN = 2000.0
            double minStoN = 0.0
            double maxWidth = 200.0
        }

        PSet TH1ClusterSymmEtaCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterStoNCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 200.0
        }

        PSet TProfileClusterPGV = { 
            double ymax = 1.2
            int32 Nbinx = 20
            int32 Nbiny = 20
            double xmax = 10.0
            double xmin = -10.0
            double ymin = -0.1
        }

        PSet TH1ClusterWidthCC = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        bool MTCCData = False
        string OutputFileName = 'test_monitortrackparameters_rs.root'
        bool CCAnalysis_On = False
        string RawDigiLabel = 'VirginRaw'
        PSet TH1nClusters = { 
            double xmin = -0.5
            int32 Nbinx = 50
            double xmax = 99.5
        }

        bool RawDigis_On = False
        PSet TH1ClusterPos = { 
            double xmin = -0.5
            int32 Nbinx = 768
            double xmax = 767.5
        }

        PSet TH1ClusterStoN = { 
            double xmin = -10.0
            int32 Nbinx = 300
            double xmax = 600.0
        }

        bool OffHisto_On = True
        PSet TH1ClusterEstimatorCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterChargeCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 400.0
        }

        PSet TH1ClusterCharge = { 
            double xmin = -10.0
            int32 Nbinx = 400
            double xmax = 800.0
        }

        string AlgoName = 'GenTk'
        string RawDigiProducer = 'simSiStripDigis'
        PSet TH1nRecHits = { 
            double xmin = -0.5
            int32 Nbinx = 16
            double xmax = 15.5
        }

        string TrackProducer = 'trackCollectionP5'
        vuint32 ModulesToBeExcluded = {
        }

        PSet TH1ClusterWidth = { 
            double xmin = -0.5
            int32 Nbinx = 20
            double xmax = 19.5
        }

        string TrackLabel = ''
        bool Trend_On = False
    }
    module cosmicseedfinderP5 = CosmicSeedGenerator { 
        double originHalfLength = 90.0
        double originZPosition = 0.0
        untracked string GeometricStructure = 'STANDARD'
        InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
        uint32 MaxNumberOfCosmicClusters = 300
        double SeedPt = 5.0
        untracked string HitsForSeeds = 'pairs'
        string TTRHBuilder = 'WithTrackAngle'
        double ptMin = 0.9
        InputTag rphirecHits = siStripMatchedRecHits:rphiRecHit
        bool doClusterCheck = True
        double originRadius = 150.0
        InputTag ClusterCollectionLabel = siStripClusters
        InputTag stereorecHits = siStripMatchedRecHits:stereoRecHit
    }
    module SiStripMonitorTrack_ckf = SiStripMonitorTrack { 
        bool OutputMEsInRootFile = False
        bool Mod_On = True
        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            int32 Steps = 5
        }

        PSet TH1ClusterNoise = { 
            double xmin = 0.0
            int32 Nbinx = 20
            double xmax = 10.0
        }

        string FolderName = 'SiStrip/Tracks'
        InputTag Cluster_src = siStripClusters
        PSet TH1nTracks = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        PSet ClusterConditions = { 
            double minWidth = 0.0
            bool On = False
            double maxStoN = 2000.0
            double minStoN = 0.0
            double maxWidth = 200.0
        }

        PSet TH1ClusterSymmEtaCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterStoNCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 200.0
        }

        PSet TProfileClusterPGV = { 
            double ymax = 1.2
            int32 Nbinx = 20
            int32 Nbiny = 20
            double xmax = 10.0
            double xmin = -10.0
            double ymin = -0.1
        }

        PSet TH1ClusterWidthCC = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        bool MTCCData = False
        string OutputFileName = 'test_monitortrackparameters_rs.root'
        bool CCAnalysis_On = False
        string RawDigiLabel = 'VirginRaw'
        PSet TH1nClusters = { 
            double xmin = -0.5
            int32 Nbinx = 50
            double xmax = 99.5
        }

        bool RawDigis_On = False
        PSet TH1ClusterPos = { 
            double xmin = -0.5
            int32 Nbinx = 768
            double xmax = 767.5
        }

        PSet TH1ClusterStoN = { 
            double xmin = -10.0
            int32 Nbinx = 300
            double xmax = 600.0
        }

        bool OffHisto_On = True
        PSet TH1ClusterEstimatorCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterChargeCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 400.0
        }

        PSet TH1ClusterCharge = { 
            double xmin = -10.0
            int32 Nbinx = 400
            double xmax = 800.0
        }

        string AlgoName = 'GenTk'
        string RawDigiProducer = 'simSiStripDigis'
        PSet TH1nRecHits = { 
            double xmin = -0.5
            int32 Nbinx = 16
            double xmax = 15.5
        }

        string TrackProducer = 'ctfWithMaterialTracksP5'
        vuint32 ModulesToBeExcluded = {
        }

        PSet TH1ClusterWidth = { 
            double xmin = -0.5
            int32 Nbinx = 20
            double xmax = 19.5
        }

        string TrackLabel = ''
        bool Trend_On = False
    }
    module roadSearchCloudsP5 = RoadSearchCloudMaker { 
        double MinimalFractionOfUsedLayersPerCloud = 0.3
        InputTag pixelRecHits = siPixelRecHits
        double MergingFraction = 0.8
        uint32 MaxDetHitsInCloudPerDetId = 32
        InputTag SeedProducer = roadSearchSeedsP5
        bool DoCloudCleaning = True
        uint32 IncreaseMaxNumberOfConsecutiveMissedLayersPerCloud = 0
        InputTag rphiStripRecHits = siStripMatchedRecHits:rphiRecHit
        bool UseStereoRecHits = True
        double ZPhiRoadSize = 0.06
        double MaximalFractionOfConsecutiveMissedLayersPerCloud = 0.35
        InputTag stereoStripRecHits = siStripMatchedRecHits:stereoRecHit
        double MaximalFractionOfMissedLayersPerCloud = 0.8
        double scalefactorRoadSeedWindow = 150
        bool UsePixelsinRS = True
        uint32 IncreaseMaxNumberOfMissedLayersPerCloud = 0
        string RoadsLabel = 'P5'
        int32 MaxRecHitsInCloud = 100
        bool UseRphiRecHits = True
        bool StraightLineNoBeamSpotCloud = True
        double RPhiRoadSize = 5.0
        InputTag matchedStripRecHits = siStripMatchedRecHits:matchedRecHit
        double MinimumHalfRoad = 3.3
    }
    module siPixelRecHits = SiPixelRecHitConverter { 
        untracked double eff_charge_cut_lowY = 0.0
        untracked double eff_charge_cut_lowX = 0.0
        InputTag src = siPixelClusters
        untracked double eff_charge_cut_highX = 1.0
        untracked double eff_charge_cut_highY = 1.0
        untracked double size_cutY = 3.0
        untracked double size_cutX = 3.0
        string CPE = 'PixelCPEGeneric'
        untracked int32 VerboseLevel = 0
        double TanLorentzAnglePerTesla = 0.106
        bool Alpha2Order = True
        int32 speed = 0
    }
    module SiStripMonitorDigi = SiStripMonitorDigi { 
        bool OutputMEsInRootFile = False
        bool CreateTrendMEs = False
        PSet TH1ADCsCoolestStrip = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 60
            double xmax = 299.5
            bool layerswitchon = False
        }

        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            double ymax = 10000.0
            int32 Steps = 10
            double xmax = 10.0
            double xmin = 0.0
            double ymin = 0.0
        }

        PSet detectorson = { 
            bool tobon = True
            bool tibon = True
            bool tecon = True
            bool tidon = True
        }

        PSet TH1ADCsHottestStrip = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 60
            double xmax = 299.5
            bool layerswitchon = False
        }

        string OutputFileName = '/tmp/charaf/test_digi_sim.root'
        bool SelectAllDetectors = True
        bool CalculateStripOccupancy = False
        VPSet DigiProducersList = {
            { 
                string DigiLabel = 'ZeroSuppressed'
                string DigiProducer = 'siStripDigis'
            }

            , { 
                string DigiLabel = 'VirginRaw'
                string DigiProducer = 'siStripZeroSuppression'
            }

            , { 
                string DigiLabel = 'ProcessedRaw'
                string DigiProducer = 'siStripZeroSuppression'
            }

            , { 
                string DigiLabel = 'ScopeMode'
                string DigiProducer = 'siStripZeroSuppression'
            }

        }

        PSet TH1DigiADCs = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 100
            double xmax = 499.5
            bool layerswitchon = True
        }

        bool ShowControlView = False
        PSet TH1NumberOfDigis = { 
            double xmin = -0.5
            bool moduleswitchon = True
            int32 Nbinx = 50
            double xmax = 499.5
            bool layerswitchon = True
        }

        bool ResetMEsEachRun = False
        PSet TH1StripOccupancy = { 
            double xmin = -0.5
            int32 Nbinx = 100
            double xmax = 499.5
        }

        bool ShowReadoutView = False
        bool ShowMechanicalStructureView = True
    }
    module roadSearchSeedsP5 = RoadSearchSeedFinder { 
        string OuterSeedRecHitAccessMode = 'STANDARD'
        InputTag pixelRecHits = siPixelRecHits
        double MaximalEndcapImpactParameter = 1.2
        uint32 MaxNumberOfCosmicClusters = 300
        double MergeSeedsCenterCut_B = 0.25
        double MergeSeedsCenterCut_A = 0.05
        uint32 MergeSeedsDifferentHitsCut = 1
        InputTag rphiStripRecHits = siStripMatchedRecHits:rphiRecHit
        double MaximalBarrelImpactParameter = 0.2
        bool doClusterCheck = True
        InputTag stereoStripRecHits = siStripMatchedRecHits:stereoRecHit
        InputTag ClusterCollectionLabel = siStripClusters
        bool OuterSeedRecHitAccessUseStereo = True
        double MergeSeedsCenterCut_C = 0.4
        double MinimalReconstructedTransverseMomentum = 1.5
        double PhiRangeForDetIdLookupInRings = 0.5
        string Mode = 'STRAIGHT-LINE'
        string RoadsLabel = 'P5'
        string InnerSeedRecHitAccessMode = 'STANDARD'
        bool InnerSeedRecHitAccessUseStereo = True
        bool OuterSeedRecHitAccessUseRPhi = True
        double MergeSeedsRadiusCut_B = 0.25
        double MergeSeedsRadiusCut_C = 0.4
        InputTag matchedStripRecHits = siStripMatchedRecHits:matchedRecHit
        double MergeSeedsRadiusCut_A = 0.05
        bool InnerSeedRecHitAccessUseRPhi = True
    }
    module qTester = QualityTester { 
        untracked int32 prescaleFactor = 1
        untracked FileInPath qtList = 'DQM/SiStripMonitorClient/data/sistrip_qualitytest_config.xml'
        untracked bool getQualityTestsFromFile = True
    }
    module globalCombinedSeeds = SeedCombiner { 
        InputTag TripletCollection = globalSeedsFromTripletsWithVertices
        InputTag PairCollection = globalSeedsFromPairsWithVertices
    }
    module SiStripMonitorTrack_cosmicTk = SiStripMonitorTrack { 
        bool OutputMEsInRootFile = False
        bool Mod_On = True
        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            int32 Steps = 5
        }

        PSet TH1ClusterNoise = { 
            double xmin = 0.0
            int32 Nbinx = 20
            double xmax = 10.0
        }

        string FolderName = 'SiStrip/Tracks'
        InputTag Cluster_src = siStripClusters
        PSet TH1nTracks = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        PSet ClusterConditions = { 
            double minWidth = 0.0
            bool On = False
            double maxStoN = 2000.0
            double minStoN = 0.0
            double maxWidth = 200.0
        }

        PSet TH1ClusterSymmEtaCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterStoNCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 200.0
        }

        PSet TProfileClusterPGV = { 
            double ymax = 1.2
            int32 Nbinx = 20
            int32 Nbiny = 20
            double xmax = 10.0
            double xmin = -10.0
            double ymin = -0.1
        }

        PSet TH1ClusterWidthCC = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        bool MTCCData = False
        string OutputFileName = 'test_monitortrackparameters_rs.root'
        bool CCAnalysis_On = False
        string RawDigiLabel = 'VirginRaw'
        PSet TH1nClusters = { 
            double xmin = -0.5
            int32 Nbinx = 50
            double xmax = 99.5
        }

        bool RawDigis_On = False
        PSet TH1ClusterPos = { 
            double xmin = -0.5
            int32 Nbinx = 768
            double xmax = 767.5
        }

        PSet TH1ClusterStoN = { 
            double xmin = -10.0
            int32 Nbinx = 300
            double xmax = 600.0
        }

        bool OffHisto_On = True
        PSet TH1ClusterEstimatorCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterChargeCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 400.0
        }

        PSet TH1ClusterCharge = { 
            double xmin = -10.0
            int32 Nbinx = 400
            double xmax = 800.0
        }

        string AlgoName = 'GenTk'
        string RawDigiProducer = 'simSiStripDigis'
        PSet TH1nRecHits = { 
            double xmin = -0.5
            int32 Nbinx = 16
            double xmax = 15.5
        }

        string TrackProducer = 'cosmictrackfinderP5'
        vuint32 ModulesToBeExcluded = {
        }

        PSet TH1ClusterWidth = { 
            double xmin = -0.5
            int32 Nbinx = 20
            double xmax = 19.5
        }

        string TrackLabel = ''
        bool Trend_On = False
    }
    module MonitorTrackResiduals_p5 = MonitorTrackResiduals { 
        bool OutputMEsInRootFile = False
        bool Mod_On = False
        PSet TH1NormResModules = { 
            double xmin = -3.0
            int32 Nbinx = 120
            double xmax = 3.0
        }

        string trajectoryInput = 'trackCollectionP5'
        string OutputFileName = 'test_monitortracks.root'
        bool ResetAfterRun = True
        InputTag Tracks = trackCollectionP5
        PSet TH1ResModules = { 
            double xmin = -2.0
            int32 Nbinx = 120
            double xmax = 2.0
        }

    }
    module SiStripMonitorTrack_rs = SiStripMonitorTrack { 
        bool OutputMEsInRootFile = False
        bool Mod_On = True
        PSet Trending = { 
            int32 UpdateMode = 1
            int32 Nbins = 10
            int32 Steps = 5
        }

        PSet TH1ClusterNoise = { 
            double xmin = 0.0
            int32 Nbinx = 20
            double xmax = 10.0
        }

        string FolderName = 'SiStrip/Tracks'
        InputTag Cluster_src = siStripClusters
        PSet TH1nTracks = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        PSet ClusterConditions = { 
            double minWidth = 0.0
            bool On = False
            double maxStoN = 2000.0
            double minStoN = 0.0
            double maxWidth = 200.0
        }

        PSet TH1ClusterSymmEtaCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterStoNCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 200.0
        }

        PSet TProfileClusterPGV = { 
            double ymax = 1.2
            int32 Nbinx = 20
            int32 Nbiny = 20
            double xmax = 10.0
            double xmin = -10.0
            double ymin = -0.1
        }

        PSet TH1ClusterWidthCC = { 
            double xmin = -0.5
            int32 Nbinx = 10
            double xmax = 9.5
        }

        bool MTCCData = False
        string OutputFileName = 'test_monitortrackparameters_rs.root'
        bool CCAnalysis_On = False
        string RawDigiLabel = 'VirginRaw'
        PSet TH1nClusters = { 
            double xmin = -0.5
            int32 Nbinx = 50
            double xmax = 99.5
        }

        bool RawDigis_On = False
        PSet TH1ClusterPos = { 
            double xmin = -0.5
            int32 Nbinx = 768
            double xmax = 767.5
        }

        PSet TH1ClusterStoN = { 
            double xmin = -10.0
            int32 Nbinx = 300
            double xmax = 600.0
        }

        bool OffHisto_On = True
        PSet TH1ClusterEstimatorCC = { 
            double xmin = -0.1
            int32 Nbinx = 120
            double xmax = 1.1
        }

        PSet TH1ClusterChargeCorr = { 
            double xmin = 0.0
            int32 Nbinx = 200
            double xmax = 400.0
        }

        PSet TH1ClusterCharge = { 
            double xmin = -10.0
            int32 Nbinx = 400
            double xmax = 800.0
        }

        string AlgoName = 'GenTk'
        string RawDigiProducer = 'simSiStripDigis'
        PSet TH1nRecHits = { 
            double xmin = -0.5
            int32 Nbinx = 16
            double xmax = 15.5
        }

        string TrackProducer = 'rsWithMaterialTracksP5'
        vuint32 ModulesToBeExcluded = {
        }

        PSet TH1ClusterWidth = { 
            double xmin = -0.5
            int32 Nbinx = 20
            double xmax = 19.5
        }

        string TrackLabel = ''
        bool Trend_On = False
    }
    module combinedP5SeedsForCTF = SeedCombiner { 
        InputTag TripletCollection = simpleCosmicBONSeeds
        InputTag PairCollection = combinatorialcosmicseedfinderP5
    }
    module CondDataMonitoring = SiStripMonitorCondData { 
        bool OutputMEsInRootFile = False
        PSet SiStripLowThresholdDQM_PSet = { 
            string Profile_xTitle = 'Strip Number'
            double SummaryOfProfile_LowY = 0
            double Summary_LowY = 0
            string SummaryOfProfile_xTitle = 'Strip Number'
            double Summary_HighY = 10
            string WhichThreshold = 'Low'
            string Summary_xTitle = 'detId'
            bool FillSummaryProfileAtLayerLevel = True
            string SummaryOfProfile_description = 'ProfileSummary_LowThresholdFromCondDB'
            string Summary_description = 'Summary_LowThresholdFromCondDB'
            string CondObj_name = 'lowthreshold'
            int32 SummaryOfProfile_NchY = 100
            string SummaryOfProfile_yTitle = 'Low Threshold from CondDB(ADC)'
            string Profile_description = 'Profile_LowThresholdFromCondDB'
            string Summary_yTitle = 'Low Threshold from CondDB(ADC)'
            string CondObj_fillId = 'onlyProfile'
            int32 Summary_NchY = 100
            double SummaryOfProfile_HighY = 10
            bool FillSummaryAtLayerLevel = True
            string Profile_yTitle = 'Low Threshold from CondDB(ADC)'
        }

        PSet SiStripApvGainsDQM_PSet = { 
            string Profile_xTitle = 'Apv Number'
            double Summary_LowY = 0.5
            bool FillSummaryAtLayerLevel = True
            string Summary_xTitle = 'detId'
            double Cumul_HighX = 1.5
            string Cumul_yTitle = ' '
            string SummaryOfProfile_yTitle = 'ApvGain from CondDB'
            int32 SummaryOfProfile_NchY = 50
            bool FillSummaryProfileAtLayerLevel = True
            string Summary_description = 'Summary_ApvGainFromCondDB'
            string CondObj_name = 'apvgain'
            string Summary_yTitle = 'ApvGain from CondDB'
            double SummaryOfProfile_HighY = 1.5
            int32 Cumul_NchX = 50
            double SummaryOfProfile_LowY = 0.5
            string CondObj_fillId = 'ProfileAndCumul'
            string Cumul_xTitle = 'ApvGain from CondDB'
            double Summary_HighY = 1.5
            string SummaryOfProfile_description = 'ProfileSummary_ApvGainFromCondDB'
            int32 Summary_NchY = 50
            string Cumul_description = 'ApvGainFromCondDB'
            string Profile_description = 'Profile_ApvGainFromCondDB'
            string SummaryOfProfile_xTitle = 'Apv Number'
            double Cumul_LowX = 0.5
            string Profile_yTitle = 'ApvGain from CondDB'
        }

        bool MonitorSiStripPedestal = False
        bool MonitorSiStripLowThreshold = False
        PSet SiStripQualityDQM_PSet = { 
            string Profile_xTitle = 'Strip Number'
            double Summary_LowY = 0.5
            string Summary_BadFibers_histo_yTitle = 'Number of bad Fibers from CondDB'
            bool FillSummaryAtLayerLevel = False
            string Summary_BadFibers_histo_name = 'Summary_BadFibers_FromCondDB'
            string SummaryOfCumul_yTitle = ' '
            double SummaryOfCumul_LowX = 0.0
            string Summary_BadApvs_histo_name = 'Summary_BadApvs_FromCondDB'
            string SummaryOfCumul_description = 'CumulativeSummary_SiStripQualityFromCondDB'
            string Summary_BadModules_histo_name = 'Summary_BadModules_FromCondDB'
            int32 SummaryOfCumul_NchX = 100
            string SummaryOfCumul_xTitle = 'SiStripQualityfrom CondDB'
            string Summary_xTitle = 'detId'
            string Summary_BadObjects_histo_xTitle = 'Sub Det And Layer'
            string Summary_description = 'Summary_FractionOfBadStripsFromCondDB'
            string Summary_BadModules_histo_yTitle = 'Number of bad Modules from CondDB'
            string Summary_yTitle = 'Fraction of bad strips from CondDB(%)'
            string Summary_BadStrips_histo_yTitle = 'Number of bad Strips from CondDB'
            string CondObj_name = 'quality'
            string CondObj_fillId = 'onlyProfile'
            double Summary_HighY = 100.5
            double SummaryOfCumul_HighX = 100.0
            string Summary_BadStrips_histo_name = 'Summary_BadStrips_FromCondDB'
            string Summary_BadApvs_histo_yTitle = 'Number of bad Apvs from CondDB'
            int32 Summary_NchY = 100
            string Profile_description = 'Profile_QualityFlagFromCondDB'
            string Profile_yTitle = 'Quality Flag from CondDB'
        }

        bool MonitorSiStripCabling = True
        string OutputFileName = 'SiStripMonitorCondData.root'
        PSet SiStripHighThresholdDQM_PSet = { 
            string Profile_xTitle = 'Strip Number'
            double SummaryOfProfile_LowY = 0
            double Summary_LowY = 0
            string SummaryOfProfile_xTitle = 'Strip Number'
            double Summary_HighY = 10
            string WhichThreshold = 'High'
            string Summary_xTitle = 'detId'
            bool FillSummaryProfileAtLayerLevel = True
            string SummaryOfProfile_description = 'ProfileSummary_HighThresholdFromCondDB'
            string Summary_description = 'Summary_HighThresholdFromCondDB'
            string CondObj_name = 'highthreshold'
            int32 SummaryOfProfile_NchY = 100
            string SummaryOfProfile_yTitle = 'High Threshold from CondDB(ADC)'
            string Profile_description = 'Profile_HighThresholdFromCondDB'
            string Summary_yTitle = 'High Threshold from CondDB(ADC)'
            string CondObj_fillId = 'onlyProfile'
            int32 Summary_NchY = 100
            double SummaryOfProfile_HighY = 10
            bool FillSummaryAtLayerLevel = True
            string Profile_yTitle = 'High Threshold from CondDB(ADC)'
        }

        bool MonitorSiStripLorentzAngle = False
        bool MonitorSiStripQuality = False
        PSet SiStripCablingDQM_PSet = { 
            string CondObj_name = 'fedcabling'
            string CondObj_fillId = 'ProfileAndCumul'
        }

        bool MonitorSiStripNoise = True
        PSet SiStripLorentzAngleDQM_PSet = { 
            int32 SummaryOfCumul_NchX = 50
            string SummaryOfCumul_xTitle = 'LorentzAngle from CondDB'
            bool FillSummaryProfileAtLayerLevel = True
            double SummaryOfProfile_LowY = 0.01
            string CondObj_fillId = 'none'
            double SummaryOfCumul_LowX = 0.01
            double SummaryOfCumul_HighX = 0.06
            string SummaryOfProfile_yTitle = 'LorentzAngle from CondDB'
            string SummaryOfProfile_description = 'Summary_LorentzAngleFromCondDB'
            string SummaryOfCumul_yTitle = ' '
            string CondObj_name = 'lorentzangle'
            string SummaryOfCumul_description = 'ProfileSummary_LorentzAngleFromCondDB'
            bool FillCumulativeSummaryAtLayerLevel = True
            string SummaryOfProfile_xTitle = 'detId'
            int32 SummaryOfProfile_NchY = 50
            double SummaryOfProfile_HighY = 0.06
        }

        bool MonitorSiStripApvGain = False
        PSet SiStripNoisesDQM_PSet = { 
            string Profile_xTitle = 'Strip Number'
            double Summary_LowY = 0.0
            bool FillSummaryAtLayerLevel = True
            string Summary_xTitle = 'detId'
            string SummaryOfCumul_yTitle = ' '
            double Cumul_HighX = 5.0
            bool FillCumulativeSummaryAtLayerLevel = True
            double SummaryOfCumul_LowX = 0.0
            string Cumul_yTitle = ' '
            string SummaryOfProfile_yTitle = 'Noise from CondDB(ADC)'
            string SummaryOfCumul_description = 'CumulativeSummary_NoiseFromCondDB'
            int32 SummaryOfProfile_NchY = 50
            int32 SummaryOfCumul_NchX = 50
            string SummaryOfCumul_xTitle = 'Noise from CondDB'
            bool FillSummaryProfileAtLayerLevel = True
            bool GainRenormalisation = False
            string Summary_description = 'Summary_NoiseFromCondDB'
            double SummaryOfProfile_LowY = 0.0
            string Summary_yTitle = 'Noise from CondDB(ADC)'
            double SummaryOfProfile_HighY = 10.0
            int32 Cumul_NchX = 50
            string CondObj_name = 'noise'
            string CondObj_fillId = 'onlyCumul'
            string Cumul_xTitle = 'Noise from CondDB(ADC)'
            double Summary_HighY = 10.0
            double SummaryOfCumul_HighX = 10.0
            string SummaryOfProfile_description = 'ProfileSummary_NoiseFromCondDB'
            int32 Summary_NchY = 50
            string Cumul_description = 'NoiseFromCondDB'
            string Profile_description = 'Profile_NoiseFromCondDB'
            string SummaryOfProfile_xTitle = 'Strip Number'
            double Cumul_LowX = 0.0
            string Profile_yTitle = 'Noise from CondDB(ADC)'
        }

        bool MonitorSiStripHighThreshold = False
        PSet SiStripPedestalsDQM_PSet = { 
            string Profile_xTitle = 'Strip Number'
            double SummaryOfProfile_LowY = 0.0
            double Summary_LowY = 0.0
            double Summary_HighY = 1000.0
            bool FillSummaryAtLayerLevel = True
            string Summary_xTitle = 'detId'
            bool FillSummaryProfileAtLayerLevel = True
            string SummaryOfProfile_description = 'ProfileSummary_PedestalFromCondDB'
            string Summary_description = 'Summary_PedestalFromCondDB'
            string CondObj_name = 'pedestal'
            int32 SummaryOfProfile_NchY = 100
            string SummaryOfProfile_yTitle = 'Pedestal from CondDB(ADC)'
            string Profile_description = 'Profile_PedestalFromCondDB'
            string Summary_yTitle = 'Pedestal from CondDB(ADC)'
            string CondObj_fillId = 'onlyProfile'
            int32 Summary_NchY = 100
            double SummaryOfProfile_HighY = 1000.0
            string SummaryOfProfile_xTitle = 'Strip Number'
            string Profile_yTitle = 'Pedestal from CondDB(ADC)'
        }

        PSet FillConditions_PSet = { 
            bool Mod_On = False
            vstring SubDetectorsToBeExcluded = {
                'none'
            }

            string ModulesToBeFilled = 'all'
            string StripQualityLabel = ''
            vuint32 ModulesToBeIncluded = {
            }

            vuint32 ModulesToBeExcluded = {
            }

            bool restrictModules = False
            bool SummaryOnStringLevel_On = False
            string FolderName_For_QualityAndCabling_SummaryHistos = 'SiStrip/Tracks'
            bool SummaryOnLayerLevel_On = True
            bool GrandSummary_On = True
        }

    }
    module rsTrackCandidatesP5 = RoadSearchTrackCandidateMaker { 
        int32 NumHitCut = 4
        double InitialVertexErrorXY = 0.2
        double HitChi2Cut = 30.0
        bool StraightLineNoBeamSpotCloud = True
        int32 nFoundMin = 2
        int32 MinimumChunkLength = 2
        string TTRHBuilder = 'WithTrackAngle'
        bool CosmicTrackMerging = True
        string MeasurementTrackerName = 'RS_P5'
        InputTag CloudProducer = roadSearchCloudsP5
        double CosmicSeedPt = 5.0
        bool SplitMatchedHits = True
    }
    module dqmEnv = DQMEventInfo { 
        untracked string subSystemFolder = 'SiStrip'
        untracked double eventRateWindow = 0.5
        untracked string eventInfoFolder = 'EventInfo'
    }
    module HardwareMonitor = CnBAnalyzer { 
        untracked string rootFile = ''
        untracked bool preSwapOn = True
        untracked bool buildAllHistograms = False
        untracked string rootFileDirectory = '/tmp'
        untracked bool detailedHistograms = False
        untracked bool swapOn = True
    }
    sequence cosmictracksP5 = {cosmicseedfinderP5,cosmictrackfinderP5}
    sequence trackerlocalreco = {pixeltrackerlocalreco,striptrackerlocalreco}
    sequence rstracksP5 = {roadSearchSeedsP5,roadSearchCloudsP5,rsTrackCandidatesP5,rsWithMaterialTracksP5}
    sequence DQMCommon = {qTester,dqmEnv,dqmSaver}
    sequence RecoForDQM = {siPixelDigis,siStripDigis,offlineBeamSpot,trackerlocalreco,ctftracksP5}
    sequence pixeltrackerlocalreco = {siPixelClusters,siPixelRecHits}
    sequence SiStripSources = {HardwareMonitor,CondDataMonitoring,SiStripMonitorDigi,SiStripMonitorClusterReal,SiStripMonitorTrack_ckf,MonitorTrackResiduals_ckf,TrackMon_ckf}
    sequence ctftracksP5 = {combinatorialcosmicseedfinderP5,simpleCosmicBONSeeds,combinedP5SeedsForCTF,ckfTrackCandidatesP5,ctfWithMaterialTracksP5}
    sequence tracksP5 = {cosmictracksP5,ctftracksP5,rstracksP5}
    sequence striptrackerlocalreco = {siStripZeroSuppression,siStripClusters,siStripMatchedRecHits}
    path p = {RecoForDQM,DQMCommon,SiStripSources,SiStripClient}
    service = MessageLogger { 
        untracked vstring debugModules = {
            'siStripDigis'
            , 'siStripClusters'
            , 'siStripZeroSuppression'
            , 'SiStripClusterizer'
        }

        untracked PSet cout = { 
            untracked string threshold = 'ERROR'
        }

        untracked vstring destinations = {
            'cout'
        }

    }
    service = UpdaterService { 
    }
    service = AdaptorConfig { 
    }
    service = DQM { 
        untracked string filter = '^SiStrip(/[^/]+){0,5}$'
        untracked double publishFrequency = 5.0
        untracked string collectorHost = 'srv-c2d05-19.cms'
        untracked int32 collectorPort = 9090
        untracked bool debug = False
    }
    service = DQMStore { 
        untracked string referenceFileName = '/home/dqmprolocal/reference/sistrip_reference.root'
        untracked int32 verbose = 0
    }
    service = ModuleWebRegistry { 
    }
    es_module Chi2MeasurementEstimator = Chi2MeasurementEstimatorESProducer { 
        double MaxChi2 = 30.0
        double nSigma = 3.0
        string ComponentName = 'Chi2'
    }
    es_module  = CaloGeometryBuilder { 
        vstring SelectedCalos = {
            'HCAL'
            , 'ZDC'
            , 'EcalBarrel'
            , 'EcalEndcap'
            , 'EcalPreshower'
            , 'TOWER'
        }

    }
    es_module myTTRHBuilderWithoutAngle4MixedPairs = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'Fake'
        string Matcher = 'StandardMatcher'
        string PixelCPE = 'PixelCPEGeneric'
        string ComponentName = 'TTRHBuilderWithoutAngle4MixedPairs'
    }
    es_module  = DTGeometryESModule { 
        string appendToDataLabel = ''
        bool applyAlignment = True
        string alignmentsLabel = ''
    }
    es_module GroupedCkfTrajectoryBuilderP5 = GroupedCkfTrajectoryBuilderESProducer { 
        bool bestHitOnly = True
        string propagatorAlong = 'PropagatorWithMaterial'
        string trajectoryFilterName = 'ckfBaseTrajectoryFilterP5'
        int32 maxCand = 5
        string ComponentName = 'GroupedCkfTrajectoryBuilderP5'
        string propagatorOpposite = 'PropagatorWithMaterialOpposite'
        string MeasurementTrackerName = ''
        int32 minNrOfHitsForRebuild = 5
        bool lockHits = True
        string TTRHBuilder = 'WithTrackAngle'
        double foundHitBonus = 5.0
        string updator = 'KFUpdator'
        bool alwaysUseInvalidHits = True
        bool requireSeedHitsInRebuild = True
        string estimator = 'Chi2'
        bool intermediateCleaning = True
        double lostHitPenalty = 30.0
    }
    es_module myTTRHBuilderWithoutAngle4PixelPairs = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'Fake'
        string Matcher = 'StandardMatcher'
        string PixelCPE = 'PixelCPEGeneric'
        string ComponentName = 'TTRHBuilderWithoutAngle4PixelPairs'
    }
    es_module siStripGainESProducerforSimulation = SiStripGainESProducer { 
        untracked bool printDebug = False
        string appendToDataLabel = 'fake'
        string APVGain = 'fakeAPVGain'
        bool AutomaticNormalization = False
        double NormalizationFactor = 1.0
    }
    es_module roads = RoadMapMakerESProducer { 
        string GeometryStructure = 'FullDetector'
        string ComponentName = ''
        string RingsLabel = ''
        untracked bool WriteOutRoadMapToAsciiFile = False
        string SeedingType = 'FourRingSeeds'
        untracked string RoadMapAsciiFile = 'roads.dat'
    }
    es_module RS_P5_MeasurementTracker = MeasurementTrackerESProducer { 
        string stripLazyGetterProducer = ''
        string StripCPE = 'StripCPEfromTrackAngle'
        bool OnDemand = False
        bool UseStripAPVFiberQualityDB = True
        untracked bool DebugStripModuleQualityDB = False
        string ComponentName = 'RS_P5'
        string stripClusterProducer = 'siStripClusters'
        bool Regional = False
        bool UseStripModuleQualityDB = True
        untracked bool DebugStripAPVFiberQualityDB = False
        string HitMatcher = 'StandardMatcher'
        untracked bool DebugStripStripQualityDB = False
        string pixelClusterProducer = 'siPixelClusters'
        bool UseStripStripQualityDB = True
        bool MaskBadAPVFibers = False
        string PixelCPE = 'PixelCPEGeneric'
    }
    es_module  = PixelCPEInitialESProducer { 
        string ComponentName = 'PixelCPEInitial'
        bool Alpha2Order = True
        string PixelErrorParametrization = 'NOTcmsim'
    }
    es_module ckfBaseTrajectoryFilterP5 = TrajectoryFilterESProducer { 
        PSet filterPset = { 
            int32 minimumNumberOfHits = 5
            double minPt = 0.5
            int32 minHitsMinPt = 3
            string ComponentType = 'CkfBaseTrajectoryFilter'
            int32 maxLostHits = 4
            int32 maxNumberOfHits = -1
            int32 maxConsecLostHits = 3
            double nSigmaMinPt = 5.0
            double chargeSignificance = -1.0
        }

        string ComponentName = 'ckfBaseTrajectoryFilterP5'
    }
    es_module  = SiStripRecHitMatcherESProducer { 
        string ComponentName = 'StandardMatcher'
        double NSigmaInside = 3.0
    }
    es_module ttrhbwor = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'Fake'
        string Matcher = 'Fake'
        string PixelCPE = 'Fake'
        string ComponentName = 'WithoutRefit'
    }
    es_module roadsP5 = RoadMapMakerESProducer { 
        string GeometryStructure = 'P5'
        string ComponentName = 'P5'
        string RingsLabel = 'P5'
        untracked bool WriteOutRoadMapToAsciiFile = False
        string SeedingType = 'TwoRingSeeds'
        untracked string RoadMapAsciiFile = 'roads.dat'
    }
    es_module myTTRHBuilderWithoutAngle4PixelTriplets = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'Fake'
        string Matcher = 'StandardMatcher'
        string PixelCPE = 'PixelCPEGeneric'
        string ComponentName = 'TTRHBuilderWithoutAngle4PixelTriplets'
    }
    es_module  = CSCGeometryESModule { 
        string appendToDataLabel = ''
        untracked bool debugV = False
        bool useGangedStripsInME1a = True
        string alignmentsLabel = ''
        bool useOnlyWiresInME1a = False
        bool useRealWireGeometry = True
        bool useCentreTIOffsets = False
        bool applyAlignment = True
    }
    es_module ringsP5 = RingMakerESProducer { 
        untracked bool DumpDetIds = False
        string ComponentName = 'P5'
        untracked string RingAsciiFileName = 'rings_p5.dat'
        untracked string DetIdsDumpFileName = 'tracker_detids.dat'
        untracked bool WriteOutRingsToAsciiFile = False
        untracked string Configuration = 'P5'
    }
    es_module  = EcalEndcapGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module navigationSchoolESProducer = NavigationSchoolESProducer { 
        string ComponentName = 'SimpleNavigationSchool'
    }
    es_module siStripGainESProducer = SiStripGainESProducer { 
        untracked bool printDebug = False
        string appendToDataLabel = ''
        string APVGain = ''
        bool AutomaticNormalization = False
        double NormalizationFactor = 1.0
    }
    es_module  = HcalHardcodeGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = RPCGeometryESModule { 
        untracked bool compatibiltyWith11 = True
    }
    es_module idealForDigiDTGeometry = DTGeometryESModule { 
        string appendToDataLabel = 'idealForDigi'
        bool applyAlignment = False
        string alignmentsLabel = 'fakeForIdeal'
    }
    es_module ttrhbwr = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'StripCPEfromTrackAngle'
        string Matcher = 'StandardMatcher'
        string PixelCPE = 'PixelCPEGeneric'
        string ComponentName = 'WithTrackAngle'
    }
    es_module  = CaloTowerHardcodeGeometryEP { 
    }
    es_module RKTrajectoryFitter = KFTrajectoryFitterESProducer { 
        string ComponentName = 'RKFitter'
        string Estimator = 'Chi2'
        int32 minHits = 3
        string Updator = 'KFUpdator'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    es_module DAFTrajectorySmoother = KFTrajectorySmootherESProducer { 
        double errorRescaling = 100.0
        int32 minHits = 3
        string ComponentName = 'DAFSmoother'
        string Estimator = 'MRHChi2'
        string Updator = 'KFUpdator'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    es_module  = TrackerDigiGeometryESModule { 
        string appendToDataLabel = ''
        bool fromDDD = True
        bool applyAlignment = True
        string alignmentsLabel = ''
    }
    es_module DAFFittingSmoother = KFFittingSmootherESProducer { 
        double EstimateCut = -1.0
        string Fitter = 'DAFFitter'
        string ComponentName = 'DAFFittingSmoother'
        string Smoother = 'DAFSmoother'
        bool BreakTrajWith2ConsecutiveMissing = False
        int32 MinNumberOfHits = 5
        bool NoInvalidHitsBeginEnd = False
        bool RejectTracks = True
    }
    es_module  = EcalBarrelGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module KFFittingSmoother = KFFittingSmootherESProducer { 
        double EstimateCut = -1.0
        string Fitter = 'KFFitter'
        string ComponentName = 'KFFittingSmoother'
        string Smoother = 'KFSmoother'
        bool BreakTrajWith2ConsecutiveMissing = False
        int32 MinNumberOfHits = 5
        bool NoInvalidHitsBeginEnd = False
        bool RejectTracks = True
    }
    es_module TTRHBuilderAngleAndTemplate = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'StripCPEfromTrackAngle'
        string Matcher = 'StandardMatcher'
        string PixelCPE = 'PixelCPETemplateReco'
        string ComponentName = 'WithAngleAndTemplate'
    }
    es_module myTTRHBuilderWithoutAngle4MixedTriplets = TkTransientTrackingRecHitBuilderESProducer { 
        string StripCPE = 'Fake'
        string Matcher = 'StandardMatcher'
        string PixelCPE = 'PixelCPEGeneric'
        string ComponentName = 'TTRHBuilderWithoutAngle4MixedTriplets'
    }
    es_module  = ZdcHardcodeGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module OppositeMaterialPropagator = PropagatorWithMaterialESProducer { 
        double MaxDPhi = 1.6
        bool useRungeKutta = False
        double Mass = 0.105
        string PropagationDirection = 'oppositeToMomentum'
        string ComponentName = 'PropagatorWithMaterialOpposite'
    }
    es_module localUniform = UniformMagneticFieldESProducer { 
        double ZFieldInTesla = 0.0
    }
    es_module DAFTrajectoryFitter = KFTrajectoryFitterESProducer { 
        string ComponentName = 'DAFFitter'
        string Estimator = 'MRHChi2'
        int32 minHits = 3
        string Updator = 'KFUpdator'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    es_module compositeTrajectoryFilterESProducer = CompositeTrajectoryFilterESProducer { 
        vstring filterNames = {
        }

        string ComponentName = 'compositeTrajectoryFilter'
    }
    es_module cosmicsNavigationSchoolESProducer = NavigationSchoolESProducer { 
        string ComponentName = 'CosmicNavigationSchool'
    }
    es_module  = EcalElectronicsMappingBuilder { 
        untracked string MapFile = 'Geometry/EcalMapping/data/EEMap.txt'
    }
    es_module  = StripCPEfromTrackAngleESProducer { 
        string ComponentName = 'StripCPEfromTrackAngle'
    }
    es_module FittingSmootherRKP5 = KFFittingSmootherESProducer { 
        double EstimateCut = -1.0
        string Fitter = 'RKFitter'
        string ComponentName = 'FittingSmootherRKP5'
        string Smoother = 'RKSmoother'
        bool BreakTrajWith2ConsecutiveMissing = False
        int32 MinNumberOfHits = 4
        bool NoInvalidHitsBeginEnd = False
        bool RejectTracks = True
    }
    es_module  = KFUpdatorESProducer { 
        string ComponentName = 'KFUpdator'
    }
    es_module RKTrajectorySmoother = KFTrajectorySmootherESProducer { 
        double errorRescaling = 100.0
        int32 minHits = 3
        string ComponentName = 'RKSmoother'
        string Estimator = 'Chi2'
        string Updator = 'KFUpdator'
        string Propagator = 'RungeKuttaTrackerPropagator'
    }
    es_module  = EcalLaserCorrectionService { 
    }
    es_module hcal_db_producer = HcalDbProducer { 
        untracked string file = ''
        untracked vstring dump = {
            ''
        }

    }
    es_module beamHaloNavigationSchoolESProducer = NavigationSchoolESProducer { 
        string ComponentName = 'BeamHaloNavigationSchool'
    }
    es_module MeasurementTracker = MeasurementTrackerESProducer { 
        string stripLazyGetterProducer = ''
        string StripCPE = 'StripCPEfromTrackAngle'
        bool OnDemand = False
        bool UseStripAPVFiberQualityDB = True
        untracked bool DebugStripModuleQualityDB = False
        string ComponentName = ''
        string stripClusterProducer = 'siStripClusters'
        bool Regional = False
        bool UseStripModuleQualityDB = True
        untracked bool DebugStripAPVFiberQualityDB = False
        string HitMatcher = 'StandardMatcher'
        untracked bool DebugStripStripQualityDB = False
        string pixelClusterProducer = 'siPixelClusters'
        bool UseStripStripQualityDB = True
        bool MaskBadAPVFibers = False
        string PixelCPE = 'PixelCPEGeneric'
    }
    es_module rings = RingMakerESProducer { 
        untracked bool DumpDetIds = False
        string ComponentName = ''
        untracked string RingAsciiFileName = 'rings.dat'
        untracked string DetIdsDumpFileName = 'tracker_detids.dat'
        untracked bool WriteOutRingsToAsciiFile = False
        untracked string Configuration = 'FULL'
    }
    es_module OppositeAnalyticalPropagator = AnalyticalPropagatorESProducer { 
        double MaxDPhi = 1.6
        string ComponentName = 'AnalyticalPropagatorOpposite'
        string PropagationDirection = 'oppositeToMomentum'
    }
    es_module trajectoryCleanerBySharedHits = TrajectoryCleanerESProducer { 
        string ComponentName = 'TrajectoryCleanerBySharedHits'
    }
    es_module ckfBaseTrajectoryFilter = TrajectoryFilterESProducer { 
        PSet filterPset = { 
            int32 minimumNumberOfHits = 5
            double minPt = 0.9
            int32 minHitsMinPt = 3
            string ComponentType = 'CkfBaseTrajectoryFilter'
            int32 maxLostHits = 1
            int32 maxNumberOfHits = -1
            int32 maxConsecLostHits = 1
            double nSigmaMinPt = 5.0
            double chargeSignificance = -1.0
        }

        string ComponentName = 'ckfBaseTrajectoryFilter'
    }
    es_module  = EcalTrigTowerConstituentsMapBuilder { 
        untracked string MapFile = 'Geometry/EcalMapping/data/EndCap_TTMap.txt'
    }
    es_module templates = PixelCPETemplateRecoESProducer { 
        string ComponentName = 'PixelCPETemplateReco'
        double TanLorentzAnglePerTesla = 0.106
        bool Alpha2Order = True
        int32 speed = 0
        string PixelErrorParametrization = 'NOTcmsim'
        bool UseClusterSplitter = False
    }
    es_module idealForDigiCSCGeometry = CSCGeometryESModule { 
        string appendToDataLabel = 'idealForDigi'
        untracked bool debugV = False
        bool useGangedStripsInME1a = True
        string alignmentsLabel = 'fakeForIdeal'
        bool useOnlyWiresInME1a = False
        bool useRealWireGeometry = True
        bool useCentreTIOffsets = False
        bool applyAlignment = False
    }
    es_module MaterialPropagator = PropagatorWithMaterialESProducer { 
        double MaxDPhi = 1.6
        bool useRungeKutta = False
        double Mass = 0.105
        string PropagationDirection = 'alongMomentum'
        string ComponentName = 'PropagatorWithMaterial'
    }
    es_module RungeKuttaTrackerPropagator = PropagatorWithMaterialESProducer { 
        double MaxDPhi = 1.6
        bool useRungeKutta = True
        double Mass = 0.105
        string PropagationDirection = 'alongMomentum'
        string ComponentName = 'RungeKuttaTrackerPropagator'
    }
    es_module  = UniformMagneticFieldESProducer { 
        double ZFieldInTesla = 0.0
        untracked string label = ''
    }
    es_module  = StripCPEESProducer { 
        string ComponentName = 'SimpleStripCPE'
    }
    es_module KFTrajectoryFitter = KFTrajectoryFitterESProducer { 
        string ComponentName = 'KFFitter'
        string Estimator = 'Chi2'
        int32 minHits = 3
        string Updator = 'KFUpdator'
        string Propagator = 'PropagatorWithMaterial'
    }
    es_module  = MuonNumberingInitialization { 
    }
    es_module RKFittingSmoother = KFFittingSmootherESProducer { 
        double EstimateCut = -1.0
        string Fitter = 'RKFitter'
        string ComponentName = 'RKFittingSmoother'
        string Smoother = 'RKSmoother'
        bool BreakTrajWith2ConsecutiveMissing = False
        int32 MinNumberOfHits = 5
        bool NoInvalidHitsBeginEnd = False
        bool RejectTracks = True
    }
    es_module  = HcalTopologyIdealEP { 
    }
    es_module sistripconn = SiStripConnectivity { 
    }
    es_module AnyDirectionAnalyticalPropagator = AnalyticalPropagatorESProducer { 
        double MaxDPhi = 1.6
        string ComponentName = 'AnyDirectionAnalyticalPropagator'
        string PropagationDirection = 'anyDirection'
    }
    es_module idealForDigiTrackerGeometry = TrackerDigiGeometryESModule { 
        string appendToDataLabel = 'idealForDigi'
        bool fromDDD = True
        bool applyAlignment = False
        string alignmentsLabel = 'fakeForIdeal'
    }
    es_module  = TrackerGeometricDetESModule { 
        bool fromDDD = True
    }
    es_module KFFittingSmootherWithOutliersRejectionAndRK = KFFittingSmootherESProducer { 
        double EstimateCut = 20.0
        string Fitter = 'RKFitter'
        string ComponentName = 'KFFittingSmootherWithOutliersRejectionAndRK'
        string Smoother = 'RKSmoother'
        bool BreakTrajWith2ConsecutiveMissing = True
        int32 MinNumberOfHits = 3
        bool NoInvalidHitsBeginEnd = True
        bool RejectTracks = True
    }
    es_module  = PixelCPEParmErrorESProducer { 
        bool UseNewParametrization = True
        string ComponentName = 'PixelCPEfromTrackAngle'
        bool UseSigma = True
        bool Alpha2Order = True
        string PixelErrorParametrization = 'NOTcmsim'
    }
    es_module  = EcalPreshowerGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = TrackerRecoGeometryESProducer { 
    }
    es_module AnalyticalPropagator = AnalyticalPropagatorESProducer { 
        double MaxDPhi = 1.6
        string ComponentName = 'AnalyticalPropagator'
        string PropagationDirection = 'alongMomentum'
    }
    es_module fakeForIdealAlignment = FakeAlignmentProducer { 
        string appendToDataLabel = 'fakeForIdeal'
    }
    es_module  = PixelCPEGenericESProducer { 
        untracked double eff_charge_cut_lowY = 0.0
        untracked double eff_charge_cut_lowX = 0.0
        untracked double eff_charge_cut_highX = 1.0
        untracked double eff_charge_cut_highY = 1.0
        untracked double size_cutY = 3.0
        untracked double size_cutX = 3.0
        double TanLorentzAnglePerTesla = 0.106
        bool Alpha2Order = True
        string ComponentName = 'PixelCPEGeneric'
        string PixelErrorParametrization = 'NOTcmsim'
    }
    es_module KFTrajectorySmoother = KFTrajectorySmootherESProducer { 
        double errorRescaling = 100.0
        int32 minHits = 3
        string ComponentName = 'KFSmoother'
        string Estimator = 'Chi2'
        string Updator = 'KFUpdator'
        string Propagator = 'PropagatorWithMaterial'
    }
    es_source siStripGainFakeESSource = SiStripGainFakeESSource { 
        string appendToDataLabel = 'fakeAPVGain'
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
    }
    es_source  = XMLIdealGeometryESSource { 
        vstring geomXMLFiles = {
            'Geometry/CMSCommonData/data/materials.xml'
            , 'Geometry/CMSCommonData/data/rotations.xml'
            , 'Geometry/CMSCommonData/data/normal/cmsextent.xml'
            , 'Geometry/CMSCommonData/data/cms.xml'
            , 'Geometry/CMSCommonData/data/cmsMother.xml'
            , 'Geometry/CMSCommonData/data/cmsTracker.xml'
            , 'Geometry/CMSCommonData/data/caloBase.xml'
            , 'Geometry/CMSCommonData/data/cmsCalo.xml'
            , 'Geometry/CMSCommonData/data/muonBase.xml'
            , 'Geometry/CMSCommonData/data/cmsMuon.xml'
            , 'Geometry/CMSCommonData/data/mgnt.xml'
            , 'Geometry/CMSCommonData/data/beampipe.xml'
            , 'Geometry/CMSCommonData/data/cmsBeam.xml'
            , 'Geometry/CMSCommonData/data/muonMB.xml'
            , 'Geometry/CMSCommonData/data/muonMagnet.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdMaterials.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdCommon.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq1x2.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq1x5.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x3.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x4.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x5.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPanelBase.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPanel.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdBlade.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdNipple.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdDisk.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdCylinder.xml'
            , 'Geometry/TrackerCommonData/data/pixfwd.xml'
            , 'Geometry/TrackerCommonData/data/pixbarmaterial.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladder.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladderfull.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladderhalf.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer0.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer1.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer2.xml'
            , 'Geometry/TrackerCommonData/data/pixbar.xml'
            , 'Geometry/TrackerCommonData/data/tibtidcommonmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tibmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tibmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0a.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0b.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tibstringpar.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3.xml'
            , 'Geometry/TrackerCommonData/data/tiblayerpar.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer0.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer1.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer2.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer3.xml'
            , 'Geometry/TrackerCommonData/data/tib.xml'
            , 'Geometry/TrackerCommonData/data/tidmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tidmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0r.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0l.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1r.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1l.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tidringpar.xml'
            , 'Geometry/TrackerCommonData/data/tidring0.xml'
            , 'Geometry/TrackerCommonData/data/tidring0f.xml'
            , 'Geometry/TrackerCommonData/data/tidring0b.xml'
            , 'Geometry/TrackerCommonData/data/tidring1.xml'
            , 'Geometry/TrackerCommonData/data/tidring1f.xml'
            , 'Geometry/TrackerCommonData/data/tidring1b.xml'
            , 'Geometry/TrackerCommonData/data/tidring2.xml'
            , 'Geometry/TrackerCommonData/data/tid.xml'
            , 'Geometry/TrackerCommonData/data/tidf.xml'
            , 'Geometry/TrackerCommonData/data/tidb.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservices.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservicesf.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservicesb.xml'
            , 'Geometry/TrackerCommonData/data/tobmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tobmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule4.xml'
            , 'Geometry/TrackerCommonData/data/tobrodpar.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5.xml'
            , 'Geometry/TrackerCommonData/data/tob.xml'
            , 'Geometry/TrackerCommonData/data/tecmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tecmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule3.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule5.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule6.xml'
            , 'Geometry/TrackerCommonData/data/tecpetpar.xml'
            , 'Geometry/TrackerCommonData/data/tecring0.xml'
            , 'Geometry/TrackerCommonData/data/tecring1.xml'
            , 'Geometry/TrackerCommonData/data/tecring2.xml'
            , 'Geometry/TrackerCommonData/data/tecring3.xml'
            , 'Geometry/TrackerCommonData/data/tecring4.xml'
            , 'Geometry/TrackerCommonData/data/tecring5.xml'
            , 'Geometry/TrackerCommonData/data/tecring6.xml'
            , 'Geometry/TrackerCommonData/data/tecring0f.xml'
            , 'Geometry/TrackerCommonData/data/tecring1f.xml'
            , 'Geometry/TrackerCommonData/data/tecring2f.xml'
            , 'Geometry/TrackerCommonData/data/tecring3f.xml'
            , 'Geometry/TrackerCommonData/data/tecring4f.xml'
            , 'Geometry/TrackerCommonData/data/tecring5f.xml'
            , 'Geometry/TrackerCommonData/data/tecring6f.xml'
            , 'Geometry/TrackerCommonData/data/tecring0b.xml'
            , 'Geometry/TrackerCommonData/data/tecring1b.xml'
            , 'Geometry/TrackerCommonData/data/tecring2b.xml'
            , 'Geometry/TrackerCommonData/data/tecring3b.xml'
            , 'Geometry/TrackerCommonData/data/tecring4b.xml'
            , 'Geometry/TrackerCommonData/data/tecring5b.xml'
            , 'Geometry/TrackerCommonData/data/tecring6b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetalf.xml'
            , 'Geometry/TrackerCommonData/data/tecpetalb.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal6f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal6b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal8f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal8b.xml'
            , 'Geometry/TrackerCommonData/data/tecwheel.xml'
            , 'Geometry/TrackerCommonData/data/tecwheela.xml'
            , 'Geometry/TrackerCommonData/data/tecwheelb.xml'
            , 'Geometry/TrackerCommonData/data/tecwheelc.xml'
            , 'Geometry/TrackerCommonData/data/tecwheeld.xml'
            , 'Geometry/TrackerCommonData/data/tecwheel6.xml'
            , 'Geometry/TrackerCommonData/data/tecservices.xml'
            , 'Geometry/TrackerCommonData/data/tecbackplate.xml'
            , 'Geometry/TrackerCommonData/data/tec.xml'
            , 'Geometry/TrackerCommonData/data/trackermaterial.xml'
            , 'Geometry/TrackerCommonData/data/tracker.xml'
            , 'Geometry/TrackerCommonData/data/trackerpixbar.xml'
            , 'Geometry/TrackerCommonData/data/trackerpixfwd.xml'
            , 'Geometry/TrackerCommonData/data/trackertibtidservices.xml'
            , 'Geometry/TrackerCommonData/data/trackertib.xml'
            , 'Geometry/TrackerCommonData/data/trackertid.xml'
            , 'Geometry/TrackerCommonData/data/trackertob.xml'
            , 'Geometry/TrackerCommonData/data/trackertec.xml'
            , 'Geometry/TrackerCommonData/data/trackerbulkhead.xml'
            , 'Geometry/TrackerCommonData/data/trackerother.xml'
            , 'Geometry/EcalCommonData/data/eregalgo.xml'
            , 'Geometry/EcalCommonData/data/ebalgo.xml'
            , 'Geometry/EcalCommonData/data/ebcon.xml'
            , 'Geometry/EcalCommonData/data/ebrot.xml'
            , 'Geometry/EcalCommonData/data/eecon.xml'
            , 'Geometry/EcalCommonData/data/eefixed.xml'
            , 'Geometry/EcalCommonData/data/eehier.xml'
            , 'Geometry/EcalCommonData/data/eealgo.xml'
            , 'Geometry/EcalCommonData/data/escon.xml'
            , 'Geometry/EcalCommonData/data/esalgo.xml'
            , 'Geometry/EcalCommonData/data/eeF.xml'
            , 'Geometry/EcalCommonData/data/eeB.xml'
            , 'Geometry/HcalCommonData/data/hcalrotations.xml'
            , 'Geometry/HcalCommonData/data/hcalalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalbarrelalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalendcapalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalouteralgo.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardfibre.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardmaterial.xml'
            , 'Geometry/MuonCommonData/data/mbCommon.xml'
            , 'Geometry/MuonCommonData/data/mb1.xml'
            , 'Geometry/MuonCommonData/data/mb2.xml'
            , 'Geometry/MuonCommonData/data/mb3.xml'
            , 'Geometry/MuonCommonData/data/mb4.xml'
            , 'Geometry/MuonCommonData/data/muonYoke.xml'
            , 'Geometry/MuonCommonData/data/mf.xml'
            , 'Geometry/ForwardCommonData/data/forward.xml'
            , 'Geometry/ForwardCommonData/data/forwardshield.xml'
            , 'Geometry/ForwardCommonData/data/brmrotations.xml'
            , 'Geometry/ForwardCommonData/data/brm.xml'
            , 'Geometry/ForwardCommonData/data/totemMaterials.xml'
            , 'Geometry/ForwardCommonData/data/totemRotations.xml'
            , 'Geometry/ForwardCommonData/data/totemt1.xml'
            , 'Geometry/ForwardCommonData/data/totemt2.xml'
            , 'Geometry/ForwardCommonData/data/ionpump.xml'
            , 'Geometry/MuonCommonData/data/muonNumbering.xml'
            , 'Geometry/TrackerCommonData/data/trackerStructureTopology.xml'
            , 'Geometry/TrackerSimData/data/trackersens.xml'
            , 'Geometry/TrackerRecoData/data/trackerRecoMaterial.xml'
            , 'Geometry/EcalSimData/data/ecalsens.xml'
            , 'Geometry/HcalCommonData/data/hcalsens.xml'
            , 'Geometry/HcalSimData/data/CaloUtil.xml'
            , 'Geometry/MuonSimData/data/muonSens.xml'
            , 'Geometry/DTGeometryBuilder/data/dtSpecsFilter.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecsFilter.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecs.xml'
            , 'Geometry/RPCGeometryBuilder/data/RPCSpecs.xml'
            , 'Geometry/ForwardCommonData/data/brmsens.xml'
            , 'Geometry/HcalSimData/data/HcalProdCuts.xml'
            , 'Geometry/EcalSimData/data/EcalProdCuts.xml'
            , 'Geometry/TrackerSimData/data/trackerProdCuts.xml'
            , 'Geometry/TrackerSimData/data/trackerProdCutsBEAM.xml'
            , 'Geometry/MuonSimData/data/muonProdCuts.xml'
            , 'Geometry/CMSCommonData/data/FieldParameters.xml'
        }

        string rootNodeName = 'cms:OCMS'
    }
    es_source GlobalTag = PoolDBESSource { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

        untracked string BlobStreamerName = 'TBufferBlobStreamingService'
        string connect = 'frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_21X_GLOBALTAG'
        string globaltag = 'CRUZET4_V4H::All'
    }
    es_source siStripLAFakeESSourceforSimulation = SiStripLAFakeESSource { 
        string appendToDataLabel = 'fake'
        double TemperatureError = 10.0
        double Temperature = 297.0
        double HoleRHAllParameter = 0.7
        double ChargeMobility = 480.0
        double HoleBeta = 1.213
        double HoleSaturationVelocity = 8370000.0
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
        double AppliedVoltage = 150.0
    }
    es_source siStripQualityFakeESSource = SiStripQualityFakeESSource { 
        string appendToDataLabel = ''
    }
    es_source idealMagneticFieldRecordSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'IdealMagneticFieldRecord'
        vuint32 firstValid = {
            1
        }

    }
    es_source eegeom = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalMappingRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source  = SiStripPedestalsFakeESSource { 
        double HighThValue = 5.0
        untracked bool printDebug = False
        uint32 PedestalsValue = 30
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
        double LowThValue = 2.0
    }
    es_source es_hardcode = HcalHardcodeCalibrations { 
        untracked vstring toGet = {
            'GainWidths'
            , 'channelQuality'
            , 'ZSThresholds'
        }

    }
    es_prefer GlobalTag = PoolDBESSource{}
    es_prefer localUniform = UniformMagneticFieldESProducer{}
    PSet MaxConsecLostHitsTrajectoryFilter_block = { 
        string ComponentType = 'MaxConsecLostHitsTrajectoryFilter'
        int32 maxConsecLostHits = 1
    }
    PSet CondDBSetup = { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

    }
    PSet MaxHitsTrajectoryFilter_block = { 
        string ComponentType = 'MaxHitsTrajectoryFilter'
        int32 maxNumberOfHits = -1
    }
    PSet SiPixelGainCalibrationServiceParameters = { 
    }
    PSet ChargeSignificanceTrajectoryFilter_block = { 
        string ComponentType = 'ChargeSignificanceTrajectoryFilter'
        double chargeSignificance = -1.0
    }
    PSet MinHitsTrajectoryFilter_block = { 
        string ComponentType = 'MinHitsTrajectoryFilter'
        int32 minimumNumberOfHits = 5
    }
    PSet ThresholdPtTrajectoryFilter_block = { 
        string ComponentType = 'ThresholdPtTrajectoryFilter'
        double nSigmaThresholdPt = 5.0
        int32 minHitsThresholdPt = 3
        double thresholdPt = 10.0
    }
    untracked PSet maxEvents = { 
        untracked int32 input = -1
    }
    PSet MaxLostHitsTrajectoryFilter_block = { 
        string ComponentType = 'MaxLostHitsTrajectoryFilter'
        int32 maxLostHits = 1
    }
    PSet CompositeTrajectoryFilter_block = { 
        string ComponentType = 'CompositeTrajectoryFilter'
        VPSet filters = {
        }

    }
    PSet RegionPSetBlock = { 
        PSet RegionPSet = { 
            bool precise = True
            double originHalfLength = 15.9
            double originZPos = 0.0
            double originYPos = 0.0
            double ptMin = 0.9
            double originXPos = 0.0
            double originRadius = 0.2
        }

    }
    PSet MinPtTrajectoryFilter_block = { 
        string ComponentType = 'MinPtTrajectoryFilter'
        double nSigmaMinPt = 5.0
        int32 minHitsMinPt = 3
        double minPt = 1.0
    }
    PSet CkfBaseTrajectoryFilter_block = { 
        int32 minimumNumberOfHits = 5
        int32 minHitsMinPt = 3
        string ComponentType = 'CkfBaseTrajectoryFilter'
        int32 maxLostHits = 1
        int32 maxNumberOfHits = -1
        int32 maxConsecLostHits = 1
        double chargeSignificance = -1.0
        double nSigmaMinPt = 5.0
        double minPt = 0.9
    }
    PSet layerInfo = { 
        PSet TOB5 = { 
            string TTRHBuilder = 'WithTrackAngle'
            InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
        }

        PSet TOB4 = { 
            string TTRHBuilder = 'WithTrackAngle'
            InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
        }

        PSet TIB1 = { 
            InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
            string TTRHBuilder = 'WithTrackAngle'
        }

        PSet TOB6 = { 
            string TTRHBuilder = 'WithTrackAngle'
            InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
        }

        PSet TOB1 = { 
            InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
            string TTRHBuilder = 'WithTrackAngle'
        }

        PSet TOB3 = { 
            string TTRHBuilder = 'WithTrackAngle'
            InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
        }

        PSet TOB2 = { 
            InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
            string TTRHBuilder = 'WithTrackAngle'
        }

        PSet TEC = { 
            untracked bool useSimpleRphiHitsCleaner = True
            int32 minRing = 5
            InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
            untracked bool useRingSlector = False
            string TTRHBuilder = 'WithTrackAngle'
            InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
            int32 maxRing = 7
        }

        PSet TIB2 = { 
            InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
            string TTRHBuilder = 'WithTrackAngle'
        }

        PSet TIB3 = { 
            string TTRHBuilder = 'WithTrackAngle'
            InputTag rphiRecHits = siStripMatchedRecHits:rphiRecHit
        }

    }
}

