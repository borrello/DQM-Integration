process ECALDQM = {
    source = EventStreamHttpReader { 
        untracked string SelectHLTOutput = 'out4DQM'
        string sourceURL = 'http://srv-c2d05-14.cms:22100/urn:xdaq-application:lid=30'
        untracked string consumerPriority = 'normal'
        int32 max_event_size = 7000000
        untracked string consumerName = 'EcalEndcap DQM Consumer'
        int32 max_queue_depth = 5
        untracked double maxEventRequestRate = 25.0
        untracked PSet SelectEvents = { 
            vstring SelectEvents = {
                '*DQM'
            }

        }

        untracked int32 headerRetryInterval = 3
    }
    module simEcalTriggerPrimitiveDigis = EcalTrigPrimProducer { 
        bool BarrelOnly = False
        string InstanceEB = 'ebDigis'
        string InstanceEE = 'eeDigis'
        int32 binOfMaximum = 6
        bool Famos = False
        bool TcpOutput = False
        bool Debug = False
        string Label = 'ecalEBunpacker'
    }
    module dynamicHybridSuperClusters = HybridClusterProducer { 
        double eThreshA = 0.003
        string basicclusterCollection = ''
        string clustershapecollection = ''
        double ethresh = 0.1
        double ewing = 0.0
        PSet bremRecoveryPset = { 
            PSet barrel = { 
                vint32 cryVec = {
                    17
                    , 15
                    , 13
                    , 12
                    , 11
                    , 10
                    , 9
                    , 8
                    , 7
                    , 6
                }

                int32 cryMin = 5
                vdouble etVec = {
                    5.0
                    , 10.0
                    , 15.0
                    , 20.0
                    , 30.0
                    , 40.0
                    , 45.0
                    , 135.0
                    , 195.0
                    , 225.0
                }

            }

            PSet endcap = { 
                double a = 47.85
                double c = 0.1201
                double b = 108.8
            }

        }

        double HybridBarrelSeedThr = 1.0
        string ecalhitcollection = 'EcalRecHitsEB'
        bool dynamicPhiRoad = True
        double posCalc_x0 = 0.89
        double posCalc_w0 = 4.2
        bool posCalc_logweight = True
        int32 step = 17
        double eseed = 0.35
        double posCalc_t0 = 7.4
        string debugLevel = 'INFO'
        bool dynamicEThresh = True
        string shapeAssociation = 'dynamicHybridShapeAssoc'
        string superclusterCollection = ''
        double eThreshB = 0.1
        string ecalhitproducer = 'ecalRecHit'
    }
    module islandSuperClusters = SuperClusterProducer { 
        string barrelSuperclusterCollection = 'islandBarrelSuperClusters'
        double endcapEtaSearchRoad = 0.14
        string barrelClusterCollection = 'islandBarrelBasicClusters'
        string endcapClusterProducer = 'islandBasicClusters'
        double barrelPhiSearchRoad = 0.8
        double endcapPhiSearchRoad = 0.6
        string VerbosityLevel = 'ERROR'
        double seedTransverseEnergyThreshold = 1.0
        string barrelClusterProducer = 'islandBasicClusters'
        string endcapSuperclusterCollection = 'islandEndcapSuperClusters'
        double barrelEtaSearchRoad = 0.06
        bool doEndcaps = True
        string endcapClusterCollection = 'islandEndcapBasicClusters'
        bool doBarrel = True
    }
    module ecalRecHit = EcalRecHitProducer { 
        InputTag EEuncalibRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEE
        vint32 ChannelStatusToBeExcluded = {
        }

        InputTag EBuncalibRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEB
        string EBrechitCollection = 'EcalRecHitsEB'
        string EErechitCollection = 'EcalRecHitsEE'
    }
    module multi5x5SuperClusters = Multi5x5SuperClusterProducer { 
        string barrelSuperclusterCollection = 'multi5x5BarrelSuperClusters'
        double endcapEtaSearchRoad = 0.14
        string barrelClusterCollection = 'multi5x5BarrelBasicClusters'
        double barrelPhiSearchRoad = 0.8
        string endcapClusterProducer = 'multi5x5BasicClusters'
        bool dynamicPhiRoad = False
        double endcapPhiSearchRoad = 0.6
        string VerbosityLevel = 'ERROR'
        double seedTransverseEnergyThreshold = 0.15
        string barrelClusterProducer = 'multi5x5BasicClusters'
        string endcapSuperclusterCollection = 'multi5x5EndcapSuperClusters'
        double barrelEtaSearchRoad = 0.06
        bool doBarrel = False
        bool doEndcaps = True
        string endcapClusterCollection = 'multi5x5EndcapBasicClusters'
        PSet bremRecoveryPset = { 
            PSet barrel = { 
                vint32 cryVec = {
                    16
                    , 13
                    , 11
                    , 10
                    , 9
                    , 8
                    , 7
                    , 6
                    , 5
                    , 4
                    , 3
                }

                int32 cryMin = 2
                vdouble etVec = {
                    5.0
                    , 10.0
                    , 15.0
                    , 20.0
                    , 30.0
                    , 40.0
                    , 45.0
                    , 55.0
                    , 135.0
                    , 195.0
                    , 225.0
                }

            }

            PSet endcap = { 
                double a = 47.85
                double c = 0.1201
                double b = 108.8
            }

        }

    }
    module ecalUncalibHit2 = EcalFixedAlphaBetaFitUncalibRecHitProducer { 
        InputTag EEdigiCollection = ecalEBunpacker:eeDigis
        double alphaEB = 1.2
        double alphaEE = 1.63
        InputTag EBdigiCollection = ecalEBunpacker:ebDigis
        string EEhitCollection = 'EcalUncalibRecHitsEE'
        untracked string AlphaBetaFilename = 'NOFILE'
        double betaEB = 1.7
        double MinAmplEndcap = 16.0
        double MinAmplBarrel = 8.0
        double betaEE = 1.37
        bool UseDynamicPedestal = True
        string EBhitCollection = 'EcalUncalibRecHitsEB'
    }
    module l1GtEvmUnpack = L1GlobalTriggerEvmRawToDigi { 
        untracked int32 EvmGtFedId = 812
        InputTag EvmGtInputTag = source
        int32 UnpackBxInEvent = -1
        uint32 ActiveBoardsMask = 65535
        int32 BstLengthBytes = -1
    }
    module multi5x5PreshowerClusterShape = PreshowerClusterShapeProducer { 
        double preshStripEnergyCut = 0.0
        InputTag preshRecHitProducer = ecalPreshowerRecHit:EcalRecHitsES
        int32 preshPi0Nstrip = 5
        InputTag endcapSClusterProducer = multi5x5SuperClusters:multi5x5EndcapSuperClusters
        string PreshowerClusterShapeCollectionX = 'multi5x5PreshowerXClustersShape'
        string PreshowerClusterShapeCollectionY = 'multi5x5PreshowerYClustersShape'
        string debugLevel = 'INFO'
    }
    module islandBasicClusters = IslandClusterProducer { 
        double posCalc_x0 = 0.89
        string endcapHitCollection = 'EcalRecHitsEE'
        string clustershapecollectionEE = 'islandEndcapShape'
        string barrelClusterCollection = 'islandBarrelBasicClusters'
        double IslandEndcapSeedThr = 0.18
        double posCalc_t0_endc = 3.1
        string barrelShapeAssociation = 'islandBarrelShapeAssoc'
        double posCalc_t0_barl = 7.4
        bool posCalc_logweight = True
        double posCalc_w0 = 4.2
        string endcapHitProducer = 'ecalRecHit'
        string clustershapecollectionEB = 'islandBarrelShape'
        string VerbosityLevel = 'ERROR'
        string barrelHitProducer = 'ecalRecHit'
        string endcapShapeAssociation = 'islandEndcapShapeAssoc'
        string barrelHitCollection = 'EcalRecHitsEB'
        double posCalc_t0_endcPresh = 1.2
        string endcapClusterCollection = 'islandEndcapBasicClusters'
        double IslandBarrelSeedThr = 0.5
    }
    module correctedEndcapSuperClustersWithPreshower = PreshowerClusterProducer { 
        double preshCalibGamma = 0.024
        double preshStripEnergyCut = 0.0
        string preshClusterCollectionY = 'preshowerYClusters'
        string assocSClusterCollection = ''
        double etThresh = 0.0
        InputTag preshRecHitProducer = ecalPreshowerRecHit:EcalRecHitsES
        string preshClusterCollectionX = 'preshowerXClusters'
        double preshCalibPlaneY = 0.7
        double preshCalibPlaneX = 1.0
        double preshCalibMIP = 9e-05
        InputTag endcapSClusterProducer = correctedIslandEndcapSuperClusters
        int32 preshNclust = 4
        string debugLevel = ''
        double preshClusterEnergyCut = 0.0
        int32 preshSeededNstrip = 15
    }
    module preshowerClusterShape = PreshowerClusterShapeProducer { 
        double preshStripEnergyCut = 0.0
        InputTag preshRecHitProducer = ecalPreshowerRecHit:EcalRecHitsES
        int32 preshPi0Nstrip = 5
        InputTag endcapSClusterProducer = islandSuperClusters:islandEndcapSuperClusters
        string PreshowerClusterShapeCollectionX = 'preshowerXClustersShape'
        string PreshowerClusterShapeCollectionY = 'preshowerYClustersShape'
        string debugLevel = 'INFO'
    }
    module multi5x5SuperClustersWithPreshower = PreshowerClusterProducer { 
        double preshCalibGamma = 0.024
        double preshStripEnergyCut = 0.0
        string preshClusterCollectionY = 'preshowerYClusters'
        string assocSClusterCollection = ''
        double etThresh = 0.0
        InputTag preshRecHitProducer = ecalPreshowerRecHit:EcalRecHitsES
        string preshClusterCollectionX = 'preshowerXClusters'
        double preshCalibPlaneY = 0.7
        double preshCalibPlaneX = 1.0
        double preshCalibMIP = 9e-05
        InputTag endcapSClusterProducer = multi5x5SuperClusters:multi5x5EndcapSuperClusters
        int32 preshNclust = 4
        string debugLevel = ''
        double preshClusterEnergyCut = 0.0
        int32 preshSeededNstrip = 15
    }
    module multi5x5BasicClusters = Multi5x5ClusterProducer { 
        double posCalc_x0 = 0.89
        string endcapHitCollection = 'EcalRecHitsEE'
        string endcapHitProducer = 'ecalRecHit'
        string barrelClusterCollection = 'multi5x5BarrelBasicClusters'
        double IslandEndcapSeedThr = 0.15
        bool doEndcap = True
        double posCalc_t0_endc = 3.1
        string barrelShapeAssociation = 'multi5x5BarrelShapeAssoc'
        double posCalc_t0_barl = 7.4
        double posCalc_w0 = 4.2
        string clustershapecollectionEE = 'multi5x5EndcapShape'
        string clustershapecollectionEB = 'multi5x5BarrelShape'
        string VerbosityLevel = 'ERROR'
        bool doBarrel = False
        string barrelHitProducer = 'ecalRecHit'
        double IslandBarrelSeedThr = 0.15
        string endcapShapeAssociation = 'multi5x5EndcapShapeAssoc'
        string barrelHitCollection = 'EcalRecHitsEB'
        double posCalc_t0_endcPresh = 1.2
        string endcapClusterCollection = 'multi5x5EndcapBasicClusters'
        bool posCalc_logweight = True
    }
    module ecalUncalibHit = EcalWeightUncalibRecHitProducer { 
        InputTag EBdigiCollection = ecalEBunpacker:ebDigis
        string EEhitCollection = 'EcalUncalibRecHitsEE'
        InputTag EEdigiCollection = ecalEBunpacker:eeDigis
        string EBhitCollection = 'EcalUncalibRecHitsEB'
    }
    module hybridSuperClusters = HybridClusterProducer { 
        double eThreshA = 0.003
        string basicclusterCollection = 'hybridBarrelBasicClusters'
        string clustershapecollection = ''
        double ethresh = 0.1
        double ewing = 0.0
        double HybridBarrelSeedThr = 0.15
        string ecalhitcollection = 'EcalRecHitsEB'
        bool dynamicPhiRoad = False
        double posCalc_x0 = 0.89
        double posCalc_w0 = 4.2
        int32 step = 1
        double eseed = 0.15
        string ecalhitproducer = 'ecalRecHit'
        double posCalc_t0 = 7.4
        string debugLevel = 'INFO'
        bool dynamicEThresh = False
        string shapeAssociation = 'hybridShapeAssoc'
        string superclusterCollection = ''
        double eThreshB = 0.1
        bool posCalc_logweight = True
    }
    module ecalEndcapPedestalTask = EEPedestalTask { 
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalRawDataCollection = ecalEBunpacker
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        untracked string prefixME = 'EcalEndcap'
        InputTag EcalPnDiodeDigiCollection = ecalEBunpacker
    }
    module ecalEndcapLedTask = EELedTask { 
        untracked string prefixME = 'EcalEndcap'
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEE
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        InputTag EcalRawDataCollection = ecalEBunpacker
        InputTag EcalPnDiodeDigiCollection = ecalEBunpacker
    }
    module preScaler = Prescaler { 
        int32 prescaleFactor = 1
    }
    module ecalEndcapStatusFlagsTask = EEStatusFlagsTask { 
        untracked string prefixME = 'EcalEndcap'
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalRawDataCollection = ecalEBunpacker
    }
    module ecalEndcapOccupancyTask = EEOccupancyTask { 
        untracked string prefixME = 'EcalEndcap'
        InputTag EcalRecHitCollection = ecalRecHit:EcalRecHitsEE
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        untracked bool enableCleanup = False
        InputTag EcalRawDataCollection = ecalEBunpacker
        untracked bool mergeRuns = False
        InputTag EcalTrigPrimDigiCollection = ecalEBunpacker:EcalTriggerPrimitives
        InputTag EcalPnDiodeDigiCollection = ecalEBunpacker
    }
    module ecalEndcapPedestalOnlineTask = EEPedestalOnlineTask { 
        untracked bool mergeRuns = False
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        untracked string prefixME = 'EcalEndcap'
        untracked bool enableCleanup = False
    }
    module ecalEndcapSelectiveReadoutTask = EESelectiveReadoutTask { 
        untracked string prefixME = 'EcalEndcap'
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        InputTag EESRFlagCollection = ecalEBunpacker
        InputTag EcalFEDRawCollection = source
        InputTag EcalTrigPrimDigiCollection = ecalEBunpacker:EcalTriggerPrimitives
        InputTag EEUsuppressedDigiCollection = ecalUnsuppressedDigis
    }
    module ecalEndcapCosmicTask = EECosmicTask { 
        InputTag EcalRecHitCollection = ecalRecHit:EcalRecHitsEE
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEE
        InputTag EcalRawDataCollection = ecalEBunpacker
        untracked string prefixME = 'EcalEndcap'
    }
    module dqmSaver = DQMFileSaver { 
        untracked int32 saveByTime = 4
        untracked string producer = 'DQM'
        untracked int32 saveByEvent = -1
        untracked int32 forceRunNumber = -1
        untracked int32 saveByRun = -1
        untracked string workflow = ''
        untracked bool saveAtJobEnd = False
        untracked int32 referenceRequireStatus = 100
        untracked string convention = 'Online'
        untracked int32 saveByMinute = 8
        untracked string dirName = '/home/dqmprolocal/output'
        untracked int32 saveByLumiSection = -1
        untracked string referenceHandling = 'qtests'
    }
    module ecalEndcapClusterTask = EEClusterTask { 
        InputTag EcalRecHitCollection = ecalRecHit:EcalRecHitsEE
        untracked bool mergeRuns = False
        InputTag BasicClusterCollection = multi5x5BasicClusters:multi5x5EndcapBasicClusters
        untracked bool enableCleanup = False
        InputTag EcalRawDataCollection = ecalEBunpacker
        untracked string prefixME = 'EcalEndcap'
        InputTag SuperClusterCollection = multi5x5SuperClusters:multi5x5EndcapSuperClusters
    }
    module correctedIslandBarrelSuperClusters = EgammaSCCorrectionMaker { 
        string corectedSuperClusterCollection = ''
        double sigmaElectronicNoise = 0.03
        string superClusterAlgo = 'Island'
        double etThresh = 0.0
        InputTag rawSuperClusterProducer = islandSuperClusters:islandBarrelSuperClusters
        bool applyEnergyCorrection = True
        PSet isl_fCorrPset = { 
            double brLinearLowThr = 0.0
            vdouble fEtEtaVec = {
                0.0
            }

            double brLinearHighThr = 0.0
            vdouble fBremVec = {
                0.0
            }

        }

        string VerbosityLevel = 'ERROR'
        InputTag recHitProducer = ecalRecHit:EcalRecHitsEB
    }
    module correctedMulti5x5SuperClustersWithPreshower = EgammaSCCorrectionMaker { 
        string corectedSuperClusterCollection = ''
        double sigmaElectronicNoise = 0.15
        string superClusterAlgo = 'Multi5x5'
        double etThresh = 0.0
        InputTag rawSuperClusterProducer = multi5x5SuperClustersWithPreshower
        bool applyEnergyCorrection = True
        PSet fix_fCorrPset = { 
            double brLinearLowThr = 0.9
            vdouble fEtEtaVec = {
                1.002
                , -0.09255
                , 0.0
                , 0.0
                , -4.072
                , 67.93
                , -7.333
                , 0.0
                , 0.0
                , 0.0
                , 2.6
                , 0.0
                , 1.0
            }

            double brLinearHighThr = 5.0
            vdouble fBremVec = {
                -0.1234
                , 0.2347
                , 0.8831
                , 0.002377
                , 1.037
            }

        }

        string VerbosityLevel = 'ERROR'
        InputTag recHitProducer = ecalRecHit:EcalRecHitsEE
    }
    module ecalEndcapMonitorModule = EcalEndcapMonitorModule { 
        InputTag EcalRecHitCollection = ecalRecHit:EcalRecHitsEE
        untracked bool mergeRuns = False
        untracked bool verbose = True
        untracked int32 runNumber = 0
        InputTag EcalTrigPrimDigiCollection = ecalEBunpacker:EcalTriggerPrimitives
        untracked bool enableEventDisplay = False
        untracked bool enableCleanup = False
        untracked int32 runType = -1
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        InputTag EcalRawDataCollection = ecalEBunpacker
        untracked bool debug = False
        untracked string prefixME = 'EcalEndcap'
    }
    module correctedDynamicHybridSuperClusters = EgammaSCCorrectionMaker { 
        string corectedSuperClusterCollection = ''
        double sigmaElectronicNoise = 0.03
        string superClusterAlgo = 'DynamicHybrid'
        double etThresh = 0.0
        InputTag rawSuperClusterProducer = dynamicHybridSuperClusters
        bool applyEnergyCorrection = True
        string VerbosityLevel = 'ERROR'
        PSet dyn_fCorrPset = { 
            double brLinearLowThr = 0.0
            vdouble fEtEtaVec = {
                0.9929
                , -0.01751
                , 0.0
                , -4.636
                , 5.945
                , 737.9
                , 4.057
                , 8.0
                , 1.023
                , 0.0
                , 0.0
                , 1.0
                , 0.0
            }

            double brLinearHighThr = 12.0
            vdouble fBremVec = {
                -0.01762
                , 0.04224
                , 0.9793
                , 0.0008075
                , 1.774
            }

        }

        InputTag recHitProducer = ecalRecHit:EcalRecHitsEB
    }
    module ecalEndcapBeamHodoTask = EEBeamHodoTask { 
        untracked string prefixME = 'EcalEndcap'
        untracked bool mergeRuns = False
        InputTag EcalTBEventHeader = ecalEBunpacker
        InputTag EcalRawDataCollection = ecalEBunpacker
        InputTag EcalTBHodoscopeRawInfo = ecalEBunpacker
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
        untracked bool enableCleanup = False
        InputTag EcalTBTDCRawInfo = ecalEBunpacker
        InputTag EcalTBHodoscopeRecInfo = ecal2006TBHodoscopeReconstructor:EcalTBHodoscopeRecInfo
        InputTag EcalTBTDCRecInfo = ecal2006TBTDCReconstructor:EcalTBTDCRecInfo
    }
    module correctedIslandEndcapSuperClusters = EgammaSCCorrectionMaker { 
        string corectedSuperClusterCollection = ''
        double sigmaElectronicNoise = 0.15
        string superClusterAlgo = 'Island'
        double etThresh = 0.0
        InputTag rawSuperClusterProducer = islandSuperClusters:islandEndcapSuperClusters
        bool applyEnergyCorrection = True
        PSet isl_fCorrPset = { 
            double brLinearLowThr = 0.0
            vdouble fEtEtaVec = {
                0.0
            }

            double brLinearHighThr = 0.0
            vdouble fBremVec = {
                0.0
            }

        }

        string VerbosityLevel = 'ERROR'
        InputTag recHitProducer = ecalRecHit:EcalRecHitsEE
    }
    module ecalEndcapMonitorClient = EcalEndcapMonitorClient { 
        untracked int32 updateTime = 2
        untracked int32 prescaleFactor = 1
        untracked bool verbose = True
        untracked int32 htmlUpdateTime = 0
        untracked string hostName = 'localhost'
        untracked int32 dbUpdateTime = 0
        untracked string inputFile = ''
        untracked bool mergeRuns = False
        untracked bool enableUpdate = False
        untracked vstring enabledClients = {
            'Integrity'
            , 'StatusFlags'
            , 'Occupancy'
            , 'PedestalOnline'
            , 'Timing'
            , 'Cosmic'
            , 'Cluster'
            , 'Summary'
        }

        untracked string dbTagName = 'CMSSW'
        untracked bool enableCleanup = False
        untracked string location = 'P5'
        untracked int32 dbHostPort = 1521
        untracked string dbUserName = ''
        untracked vint32 superModules = {
            1
            , 2
            , 3
            , 4
            , 5
            , 6
            , 7
            , 8
            , 9
            , 10
            , 11
            , 12
            , 13
            , 14
            , 15
            , 16
            , 17
            , 18
        }

        untracked string dbPassword = ''
        untracked string prefixME = 'EcalEndcap'
        untracked bool cloneME = True
        untracked string baseHtmlDir = ''
        untracked int32 hostPort = 9090
        untracked string maskFile = '/nfshome0/ecalpro/MASKING-DQM/maskfile-EE.dat'
        untracked bool enableMonitorDaemon = False
        untracked bool debug = False
        untracked string dbName = ''
        untracked string clientName = 'EcalEndcapMonitorClient'
        untracked string dbHostName = ''
    }
    module ecalEndcapIntegrityTask = EEIntegrityTask { 
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EEDetIdCollection0 = ecalEBunpacker:EcalIntegrityDCCSizeErrors
        InputTag EEDetIdCollection1 = ecalEBunpacker:EcalIntegrityGainErrors
        InputTag EEDetIdCollection2 = ecalEBunpacker:EcalIntegrityChIdErrors
        InputTag EEDetIdCollection3 = ecalEBunpacker:EcalIntegrityGainSwitchErrors
        untracked string prefixME = 'EcalEndcap'
        InputTag EcalElectronicsIdCollection5 = ecalEBunpacker:EcalIntegrityMemChIdErrors
        InputTag EcalElectronicsIdCollection4 = ecalEBunpacker:EcalIntegrityMemBlockSizeErrors
        InputTag EcalElectronicsIdCollection6 = ecalEBunpacker:EcalIntegrityMemGainErrors
        InputTag EcalElectronicsIdCollection1 = ecalEBunpacker:EcalIntegrityTTIdErrors
        InputTag EcalElectronicsIdCollection3 = ecalEBunpacker:EcalIntegrityMemTtIdErrors
        InputTag EcalElectronicsIdCollection2 = ecalEBunpacker:EcalIntegrityBlockSizeErrors
    }
    module ecalEndcapTriggerTowerTask = EETriggerTowerTask { 
        untracked bool mergeRuns = False
        InputTag EcalTrigPrimDigiCollectionReal = ecalEBunpacker:EcalTriggerPrimitives
        InputTag EcalTrigPrimDigiCollectionEmul = simEcalTriggerPrimitiveDigis
        untracked bool enableCleanup = False
        untracked string OutputRootFile = ''
        untracked string prefixME = 'EcalEndcap'
    }
    module ecalEBunpacker = EcalRawToDigiDev { 
        untracked vint32 orderedDCCIdList = {
            1
            , 2
            , 3
            , 4
            , 5
            , 6
            , 7
            , 8
            , 9
            , 10
            , 11
            , 12
            , 13
            , 14
            , 15
            , 16
            , 17
            , 18
            , 19
            , 20
            , 21
            , 22
            , 23
            , 24
            , 25
            , 26
            , 27
            , 28
            , 29
            , 30
            , 31
            , 32
            , 33
            , 34
            , 35
            , 36
            , 37
            , 38
            , 39
            , 40
            , 41
            , 42
            , 43
            , 44
            , 45
            , 46
            , 47
            , 48
            , 49
            , 50
            , 51
            , 52
            , 53
            , 54
        }

        untracked InputTag FedLabel = listfeds
        untracked bool srpUnpacking = True
        untracked bool syncCheck = False
        untracked bool silentMode = True
        untracked bool feUnpacking = True
        untracked vint32 orderedFedList = {
            601
            , 602
            , 603
            , 604
            , 605
            , 606
            , 607
            , 608
            , 609
            , 610
            , 611
            , 612
            , 613
            , 614
            , 615
            , 616
            , 617
            , 618
            , 619
            , 620
            , 621
            , 622
            , 623
            , 624
            , 625
            , 626
            , 627
            , 628
            , 629
            , 630
            , 631
            , 632
            , 633
            , 634
            , 635
            , 636
            , 637
            , 638
            , 639
            , 640
            , 641
            , 642
            , 643
            , 644
            , 645
            , 646
            , 647
            , 648
            , 649
            , 650
            , 651
            , 652
            , 653
            , 654
        }

        untracked bool eventPut = True
        untracked string InputLabel = 'source'
        untracked bool feIdCheck = True
        untracked vint32 FEDs = {
        }

        untracked bool DoRegional = False
        untracked bool headerUnpacking = True
        untracked bool memUnpacking = True
    }
    module ecalEndcapBeamCaloTask = EEBeamCaloTask { 
        untracked bool mergeRuns = False
        InputTag EBDigiCollection = ecalEBunpacker:ebDigis
        InputTag EcalTBEventHeader = ecalEBunpacker
        untracked bool enableCleanup = False
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
        InputTag EcalRawDataCollection = ecalEBunpacker
        untracked string prefixME = 'EcalEndcap'
    }
    module ecalEndcapLaserTask = EELaserTask { 
        untracked string prefixME = 'EcalEndcap'
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEE
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        InputTag EcalRawDataCollection = ecalEBunpacker
        InputTag EcalPnDiodeDigiCollection = ecalEBunpacker
    }
    module correctedHybridSuperClusters = EgammaSCCorrectionMaker { 
        string corectedSuperClusterCollection = ''
        double sigmaElectronicNoise = 0.03
        string superClusterAlgo = 'Hybrid'
        double etThresh = 0.0
        InputTag rawSuperClusterProducer = hybridSuperClusters
        bool applyEnergyCorrection = True
        string VerbosityLevel = 'ERROR'
        PSet hyb_fCorrPset = { 
            double brLinearLowThr = 0.7
            vdouble fEtEtaVec = {
                1.001
                , -0.8654
                , 3.131
                , 0.0
                , 0.735
                , 20.72
                , 1.169
                , 8.0
                , 1.023
                , -0.00181
                , 0.0
                , 1.0
                , 0.0
            }

            double brLinearHighThr = 8.0
            vdouble fBremVec = {
                -0.01217
                , 0.031
                , 0.9887
                , -0.0003776
                , 1.598
            }

        }

        InputTag recHitProducer = ecalRecHit:EcalRecHitsEB
    }
    module ecalEndcapTestPulseTask = EETestPulseTask { 
        untracked string prefixME = 'EcalEndcap'
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE
        InputTag EEDigiCollection = ecalEBunpacker:eeDigis
        InputTag EcalRawDataCollection = ecalEBunpacker
        InputTag EcalPnDiodeDigiCollection = ecalEBunpacker
    }
    module ecalEndcapTimingTask = EETimingTask { 
        untracked string prefixME = 'EcalEndcap'
        InputTag EcalUncalibratedRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEE
        untracked bool mergeRuns = False
        untracked bool enableCleanup = False
        InputTag EcalRawDataCollection = ecalEBunpacker
    }
    module dqmQTestEE = QualityTester { 
        untracked string reportThreshold = 'red'
        untracked int32 prescaleFactor = 4
        untracked FileInPath qtList = 'DQM/Integration/test/EcalEndcapQualityTests.xml'
        untracked bool getQualityTestsFromFile = True
    }
    module ecalEndcapRawDataTask = EERawDataTask { 
        untracked bool mergeRuns = False
        InputTag FEDRawDataCollection = source
        untracked bool enableCleanup = False
        InputTag EcalRawDataCollection = ecalEBunpacker
        InputTag GTEvmSource = l1GtEvmUnpack
        untracked string prefixME = 'EcalEndcap'
    }
    module dqmEnv = DQMEventInfo { 
        untracked string subSystemFolder = 'EcalEndcap'
        untracked double eventRateWindow = 0.5
        untracked string eventInfoFolder = 'EventInfo'
    }
    sequence ecalEndcapCosmicTasksSequence = {ecalEndcapDefaultTasksSequence,ecalEndcapCosmicTask}
    sequence ecalEndcapDefaultTasksSequence = {ecalEndcapOccupancyTask,ecalEndcapIntegrityTask,ecalEndcapStatusFlagsTask,ecalEndcapSelectiveReadoutTask,ecalEndcapRawDataTask,ecalEndcapLaserTask,ecalEndcapLedTask,ecalEndcapPedestalOnlineTask,ecalEndcapPedestalTask,ecalEndcapTestPulseTask,ecalEndcapTriggerTowerTask,ecalEndcapTimingTask}
    sequence preshowerClusteringSequence = {correctedEndcapSuperClustersWithPreshower,preshowerClusterShape}
    sequence islandClusteringSequence = {islandBasicClusters,islandSuperClusters,correctedIslandBarrelSuperClusters,correctedIslandEndcapSuperClusters}
    sequence hybridClusteringSequence = {hybridSuperClusters,correctedHybridSuperClusters}
    sequence ecalClusteringSequence = {islandClusteringSequence,hybridClusteringSequence,preshowerClusteringSequence,dynamicHybridClusteringSequence,multi5x5ClusteringSequence,multi5x5PreshowerClusteringSequence}
    sequence ecalEndcapTestBeamTasksSequence = {ecalEndcapDefaultTasksSequence,ecalEndcapBeamHodoTask,ecalEndcapBeamCaloTask}
    sequence multi5x5ClusteringSequence = {multi5x5BasicClusters,multi5x5SuperClusters,multi5x5SuperClustersWithPreshower}
    sequence multi5x5PreshowerClusteringSequence = {correctedMulti5x5SuperClustersWithPreshower,multi5x5PreshowerClusterShape}
    sequence dynamicHybridClusteringSequence = {dynamicHybridSuperClusters,correctedDynamicHybridSuperClusters}
    sequence ecalDataSequence = {preScaler,ecalEBunpacker,l1GtEvmUnpack,ecalUncalibHit,ecalUncalibHit2,ecalRecHit,simEcalTriggerPrimitiveDigis,hybridSuperClusters,correctedHybridSuperClusters,multi5x5BasicClusters,multi5x5SuperClusters}
    sequence ecalEndcapMonitorSequence = {ecalEndcapMonitorModule,dqmEnv,ecalEndcapMonitorClient,dqmQTestEE}
    sequence ecalEndcapCosmicTasksSequenceP5 = {ecalEndcapOccupancyTask,ecalEndcapIntegrityTask,ecalEndcapStatusFlagsTask,ecalEndcapPedestalOnlineTask,ecalEndcapTriggerTowerTask,ecalEndcapTimingTask,ecalEndcapCosmicTask}
    path p = {ecalDataSequence,ecalEndcapMonitorSequence,dqmSaver}
    endpath q = {ecalEndcapCosmicTasksSequenceP5,ecalEndcapClusterTask}
    service = MessageLogger { 
        untracked PSet cout = { 
            untracked PSet EcalRawToDigiDevTowerId = { 
                untracked int32 limit = 1000
            }

            untracked string threshold = 'WARNING'
            untracked bool noLineBreaks = True
            untracked PSet EcalRawToDigiDevSRP = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevTpg = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDev = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevMemGain = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalEndcapMonitorModule = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevMemBlock = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevDccBlockSize = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevTriggerType = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalDCCHeaderRuntypeDecoder = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevNumTowerBlocks = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalBarrelMonitorModule = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevMemTowerId = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevGainSwitch = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevTowerSize = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevMemChId = { 
                untracked int32 limit = 1000
            }

            untracked bool noTimeStamps = True
            untracked PSet EcalRawToDigiDevChId = { 
                untracked int32 limit = 1000
            }

            untracked PSet EcalRawToDigiDevGainZero = { 
                untracked int32 limit = 1000
            }

            untracked PSet default = { 
                untracked int32 limit = 0
            }

            untracked PSet EcalRawToDigiDevTCC = { 
                untracked int32 limit = 1000
            }

        }

        untracked vstring categories = {
            'EcalTBInputService'
            , 'EcalRawToDigiDev'
            , 'EcalRawToDigiDevTriggerType'
            , 'EcalRawToDigiDevTpg'
            , 'EcalRawToDigiDevNumTowerBlocks'
            , 'EcalRawToDigiDevTowerId'
            , 'EcalRawToDigiDevTowerSize'
            , 'EcalRawToDigiDevChId'
            , 'EcalRawToDigiDevGainZero'
            , 'EcalRawToDigiDevGainSwitch'
            , 'EcalRawToDigiDevDccBlockSize'
            , 'EcalRawToDigiDevMemBlock'
            , 'EcalRawToDigiDevMemTowerId'
            , 'EcalRawToDigiDevMemChId'
            , 'EcalRawToDigiDevMemGain'
            , 'EcalRawToDigiDevTCC'
            , 'EcalRawToDigiDevSRP'
            , 'EcalDCCHeaderRuntypeDecoder'
            , 'EcalBarrelMonitorModule'
            , 'EcalEndcapMonitorModule'
        }

        untracked vstring destinations = {
            'cout'
        }

    }
    service = DQM { 
        untracked string filter = ''
        untracked double publishFrequency = 5.0
        untracked string collectorHost = 'srv-c2d05-19.cms'
        untracked int32 collectorPort = 9090
        untracked bool debug = False
    }
    service = DQMStore { 
        untracked string referenceFileName = ''
        untracked int32 verbose = 0
    }
    es_module l1GtTriggerMaskTechTrig = L1GtTriggerMaskTechTrigTrivialProducer { 
        vuint32 TriggerMask = {
            0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
        }

    }
    es_module  = CaloGeometryBuilder { 
        vstring SelectedCalos = {
            'HCAL'
            , 'ZDC'
            , 'EcalBarrel'
            , 'EcalEndcap'
            , 'EcalPreshower'
            , 'TOWER'
        }

    }
    es_module l1GtParameters = L1GtParametersTrivialProducer { 
        uint32 EvmActiveBoards = 65535
        uint32 DaqActiveBoards = 65535
        uint32 BstLengthBytes = 30
        int32 TotalBxInEvent = 3
    }
    es_module hcal_db_producer = HcalDbProducer { 
        untracked string file = ''
        untracked vstring dump = {
            ''
        }

    }
    es_module l1GtPrescaleFactorsTechTrig = L1GtPrescaleFactorsTechTrigTrivialProducer { 
        VPSet PrescaleFactorsSet = {
            { 
                vint32 PrescaleFactors = {
                    1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

            }

            , { 
                vint32 PrescaleFactors = {
                    1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

            }

        }

    }
    es_module  = HcalHardcodeGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = CaloTowerHardcodeGeometryEP { 
    }
    es_module sistripconn = SiStripConnectivity { 
    }
    es_module  = StripCPEfromTrackAngleESProducer { 
        string ComponentName = 'StripCPEfromTrackAngle'
    }
    es_module  = SiStripRecHitMatcherESProducer { 
        string ComponentName = 'StandardMatcher'
        double NSigmaInside = 3.0
    }
    es_module siStripGainESProducerforSimulation = SiStripGainESProducer { 
        untracked bool printDebug = False
        string appendToDataLabel = 'fake'
        string APVGain = 'fakeAPVGain'
        bool AutomaticNormalization = False
        double NormalizationFactor = 1.0
    }
    es_module  = CaloTopologyBuilder { 
    }
    es_module l1GtPrescaleFactorsAlgoTrig = L1GtPrescaleFactorsAlgoTrigTrivialProducer { 
        VPSet PrescaleFactorsSet = {
            { 
                vint32 PrescaleFactors = {
                    1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

            }

            , { 
                vint32 PrescaleFactors = {
                    1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

            }

        }

    }
    es_module  = HcalTopologyIdealEP { 
    }
    es_module  = TrackerDigiGeometryESModule { 
        string appendToDataLabel = ''
        bool fromDDD = True
        bool applyAlignment = True
        string alignmentsLabel = ''
    }
    es_module  = EcalLaserCorrectionService { 
    }
    es_module l1GtTriggerMaskVetoTechTrig = L1GtTriggerMaskVetoTechTrigTrivialProducer { 
        vuint32 TriggerMask = {
            0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
        }

    }
    es_module  = EcalBarrelGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = EcalTrigPrimESProducer { 
        untracked string DatabaseFile = 'TPG_cosmics.txt.gz'
    }
    es_module l1GtTriggerMaskVetoAlgoTrig = L1GtTriggerMaskVetoAlgoTrigTrivialProducer { 
        vuint32 TriggerMask = {
            0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
        }

    }
    es_module  = EcalPreshowerGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = EcalElectronicsMappingBuilder { 
        untracked string MapFile = 'Geometry/EcalMapping/data/EEMap.txt'
    }
    es_module siStripGainESProducer = SiStripGainESProducer { 
        untracked bool printDebug = False
        string appendToDataLabel = ''
        string APVGain = ''
        bool AutomaticNormalization = False
        double NormalizationFactor = 1.0
    }
    es_module  = ZdcHardcodeGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module l1GtTriggerMaskAlgoTrig = L1GtTriggerMaskAlgoTrigTrivialProducer { 
        vuint32 TriggerMask = {
            0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
        }

    }
    es_module l1GtTriggerMenuXml = L1GtTriggerMenuXmlProducer { 
        string VmeXmlFile = ''
        string DefXmlFile = 'L1Menu2007.xml'
        string TriggerMenuLuminosity = 'lumi1x1032'
    }
    es_module l1GtStableParameters = L1GtStableParametersTrivialProducer { 
        uint32 NumberL1IsoEG = 4
        uint32 NumberL1JetCounts = 12
        int32 UnitLength = 8
        uint32 NumberL1ForJet = 4
        uint32 IfCaloEtaNumberBits = 4
        uint32 IfMuEtaNumberBits = 6
        uint32 NumberL1TauJet = 4
        int32 NumberPsbBoards = 7
        uint32 NumberConditionChips = 2
        uint32 NumberL1Mu = 4
        uint32 NumberL1CenJet = 4
        uint32 NumberPhysTriggers = 128
        uint32 PinsOnConditionChip = 96
        uint32 NumberTechnicalTriggers = 64
        vint32 OrderConditionChip = {
            2
            , 1
        }

        uint32 NumberPhysTriggersExtended = 64
        int32 WordLength = 64
        uint32 NumberL1NoIsoEG = 4
    }
    es_module  = EcalEndcapGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module l1GtBoardMaps = L1GtBoardMapsTrivialProducer { 
        vint32 ActiveBoardsDaqRecord = {
            -1
            , 0
            , 1
            , 2
            , 3
            , 4
            , 5
            , 6
            , 7
            , 8
            , -1
            , -1
        }

        vint32 CableToPsbMap = {
            0
            , 0
            , 0
            , 0
            , 1
            , 1
            , 1
            , 1
            , 2
            , 2
            , 2
            , 2
            , 3
            , 3
            , 3
            , 3
            , 4
            , 4
            , 4
            , 4
            , 5
            , 5
            , 5
            , 5
            , 6
            , 6
            , 6
            , 6
        }

        vint32 BoardPositionDaqRecord = {
            1
            , 2
            , 3
            , 4
            , 5
            , 6
            , 7
            , 8
            , 9
            , 10
            , -1
            , -1
        }

        vint32 BoardPositionEvmRecord = {
            1
            , 3
            , -1
            , -1
            , -1
            , -1
            , -1
            , -1
            , -1
            , -1
            , 2
            , -1
        }

        vstring BoardList = {
            'GTFE'
            , 'FDL'
            , 'PSB'
            , 'PSB'
            , 'PSB'
            , 'PSB'
            , 'PSB'
            , 'PSB'
            , 'PSB'
            , 'GMT'
            , 'TCS'
            , 'TIM'
        }

        vstring CableList = {
            'Free'
            , 'Free'
            , 'Free'
            , 'TechTr'
            , 'IsoEGQ'
            , 'NoIsoEGQ'
            , 'CenJetQ'
            , 'ForJetQ'
            , 'TauJetQ'
            , 'ESumsQ'
            , 'JetCountsQ'
            , 'Free'
            , 'Free'
            , 'Free'
            , 'Free'
            , 'Free'
            , 'MQF4'
            , 'MQF3'
            , 'MQB2'
            , 'MQB1'
            , 'MQF8'
            , 'MQF7'
            , 'MQB6'
            , 'MQB5'
            , 'MQF12'
            , 'MQF11'
            , 'MQB10'
            , 'MQB9'
        }

        vint32 BoardHexNameMap = {
            0
            , 253
            , 187
            , 187
            , 187
            , 187
            , 187
            , 187
            , 187
            , 221
            , 204
            , 173
        }

        vint32 ActiveBoardsEvmRecord = {
            -1
            , 1
            , -1
            , -1
            , -1
            , -1
            , -1
            , -1
            , -1
            , -1
            , 0
            , -1
        }

        vint32 BoardSlotMap = {
            17
            , 10
            , 9
            , 13
            , 14
            , 15
            , 19
            , 20
            , 21
            , 18
            , 7
            , 16
        }

        vint32 BoardIndex = {
            0
            , 0
            , 0
            , 1
            , 2
            , 3
            , 4
            , 5
            , 6
            , 0
            , 0
            , 0
        }

    }
    es_module  = EcalTrigTowerConstituentsMapBuilder { 
        untracked string MapFile = 'Geometry/EcalMapping/data/EndCap_TTMap.txt'
    }
    es_source L1GtBoardMapsRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtBoardMapsRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source L1GtTriggerMaskVetoTechTrigRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtTriggerMaskVetoTechTrigRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source siStripQualityFakeESSource = SiStripQualityFakeESSource { 
        string appendToDataLabel = ''
    }
    es_source L1GtTriggerMaskAlgoTrigRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtTriggerMaskAlgoTrigRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source L1GtParametersRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtParametersRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGLinearizationConstRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source  = SiStripPedestalsFakeESSource { 
        double HighThValue = 5.0
        untracked bool printDebug = False
        uint32 PedestalsValue = 30
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
        double LowThValue = 2.0
    }
    es_source tpparams11 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGFineGrainTowerEERcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams10 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGFineGrainStripEERcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source L1GtTriggerMaskTechTrigRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtTriggerMaskTechTrigRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source L1GtTriggerMenuRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtTriggerMenuRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source siStripGainFakeESSource = SiStripGainFakeESSource { 
        string appendToDataLabel = 'fakeAPVGain'
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
    }
    es_source siStripLAFakeESSourceforSimulation = SiStripLAFakeESSource { 
        string appendToDataLabel = 'fake'
        double TemperatureError = 10.0
        double Temperature = 297.0
        double HoleRHAllParameter = 0.7
        double ChargeMobility = 480.0
        double HoleBeta = 1.213
        double HoleSaturationVelocity = 8370000.0
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
        double AppliedVoltage = 150.0
    }
    es_source L1GtPrescaleFactorsTechTrigRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtPrescaleFactorsTechTrigRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source  = XMLIdealGeometryESSource { 
        vstring geomXMLFiles = {
            'Geometry/CMSCommonData/data/materials.xml'
            , 'Geometry/CMSCommonData/data/rotations.xml'
            , 'Geometry/CMSCommonData/data/normal/cmsextent.xml'
            , 'Geometry/CMSCommonData/data/cms.xml'
            , 'Geometry/CMSCommonData/data/cmsMother.xml'
            , 'Geometry/CMSCommonData/data/cmsTracker.xml'
            , 'Geometry/CMSCommonData/data/caloBase.xml'
            , 'Geometry/CMSCommonData/data/cmsCalo.xml'
            , 'Geometry/CMSCommonData/data/muonBase.xml'
            , 'Geometry/CMSCommonData/data/cmsMuon.xml'
            , 'Geometry/CMSCommonData/data/mgnt.xml'
            , 'Geometry/CMSCommonData/data/beampipe.xml'
            , 'Geometry/CMSCommonData/data/cmsBeam.xml'
            , 'Geometry/CMSCommonData/data/muonMB.xml'
            , 'Geometry/CMSCommonData/data/muonMagnet.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdMaterials.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdCommon.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq1x2.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq1x5.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x3.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x4.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x5.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPanelBase.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPanel.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdBlade.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdNipple.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdDisk.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdCylinder.xml'
            , 'Geometry/TrackerCommonData/data/pixfwd.xml'
            , 'Geometry/TrackerCommonData/data/pixbarmaterial.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladder.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladderfull.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladderhalf.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer0.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer1.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer2.xml'
            , 'Geometry/TrackerCommonData/data/pixbar.xml'
            , 'Geometry/TrackerCommonData/data/tibtidcommonmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tibmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tibmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0a.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0b.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tibstringpar.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3.xml'
            , 'Geometry/TrackerCommonData/data/tiblayerpar.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer0.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer1.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer2.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer3.xml'
            , 'Geometry/TrackerCommonData/data/tib.xml'
            , 'Geometry/TrackerCommonData/data/tidmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tidmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0r.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0l.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1r.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1l.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tidringpar.xml'
            , 'Geometry/TrackerCommonData/data/tidring0.xml'
            , 'Geometry/TrackerCommonData/data/tidring0f.xml'
            , 'Geometry/TrackerCommonData/data/tidring0b.xml'
            , 'Geometry/TrackerCommonData/data/tidring1.xml'
            , 'Geometry/TrackerCommonData/data/tidring1f.xml'
            , 'Geometry/TrackerCommonData/data/tidring1b.xml'
            , 'Geometry/TrackerCommonData/data/tidring2.xml'
            , 'Geometry/TrackerCommonData/data/tid.xml'
            , 'Geometry/TrackerCommonData/data/tidf.xml'
            , 'Geometry/TrackerCommonData/data/tidb.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservices.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservicesf.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservicesb.xml'
            , 'Geometry/TrackerCommonData/data/tobmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tobmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule4.xml'
            , 'Geometry/TrackerCommonData/data/tobrodpar.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5.xml'
            , 'Geometry/TrackerCommonData/data/tob.xml'
            , 'Geometry/TrackerCommonData/data/tecmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tecmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule3.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule5.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule6.xml'
            , 'Geometry/TrackerCommonData/data/tecpetpar.xml'
            , 'Geometry/TrackerCommonData/data/tecring0.xml'
            , 'Geometry/TrackerCommonData/data/tecring1.xml'
            , 'Geometry/TrackerCommonData/data/tecring2.xml'
            , 'Geometry/TrackerCommonData/data/tecring3.xml'
            , 'Geometry/TrackerCommonData/data/tecring4.xml'
            , 'Geometry/TrackerCommonData/data/tecring5.xml'
            , 'Geometry/TrackerCommonData/data/tecring6.xml'
            , 'Geometry/TrackerCommonData/data/tecring0f.xml'
            , 'Geometry/TrackerCommonData/data/tecring1f.xml'
            , 'Geometry/TrackerCommonData/data/tecring2f.xml'
            , 'Geometry/TrackerCommonData/data/tecring3f.xml'
            , 'Geometry/TrackerCommonData/data/tecring4f.xml'
            , 'Geometry/TrackerCommonData/data/tecring5f.xml'
            , 'Geometry/TrackerCommonData/data/tecring6f.xml'
            , 'Geometry/TrackerCommonData/data/tecring0b.xml'
            , 'Geometry/TrackerCommonData/data/tecring1b.xml'
            , 'Geometry/TrackerCommonData/data/tecring2b.xml'
            , 'Geometry/TrackerCommonData/data/tecring3b.xml'
            , 'Geometry/TrackerCommonData/data/tecring4b.xml'
            , 'Geometry/TrackerCommonData/data/tecring5b.xml'
            , 'Geometry/TrackerCommonData/data/tecring6b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetalf.xml'
            , 'Geometry/TrackerCommonData/data/tecpetalb.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal6f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal6b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal8f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal8b.xml'
            , 'Geometry/TrackerCommonData/data/tecwheel.xml'
            , 'Geometry/TrackerCommonData/data/tecwheela.xml'
            , 'Geometry/TrackerCommonData/data/tecwheelb.xml'
            , 'Geometry/TrackerCommonData/data/tecwheelc.xml'
            , 'Geometry/TrackerCommonData/data/tecwheeld.xml'
            , 'Geometry/TrackerCommonData/data/tecwheel6.xml'
            , 'Geometry/TrackerCommonData/data/tecservices.xml'
            , 'Geometry/TrackerCommonData/data/tecbackplate.xml'
            , 'Geometry/TrackerCommonData/data/tec.xml'
            , 'Geometry/TrackerCommonData/data/trackermaterial.xml'
            , 'Geometry/TrackerCommonData/data/tracker.xml'
            , 'Geometry/TrackerCommonData/data/trackerpixbar.xml'
            , 'Geometry/TrackerCommonData/data/trackerpixfwd.xml'
            , 'Geometry/TrackerCommonData/data/trackertibtidservices.xml'
            , 'Geometry/TrackerCommonData/data/trackertib.xml'
            , 'Geometry/TrackerCommonData/data/trackertid.xml'
            , 'Geometry/TrackerCommonData/data/trackertob.xml'
            , 'Geometry/TrackerCommonData/data/trackertec.xml'
            , 'Geometry/TrackerCommonData/data/trackerbulkhead.xml'
            , 'Geometry/TrackerCommonData/data/trackerother.xml'
            , 'Geometry/EcalCommonData/data/eregalgo.xml'
            , 'Geometry/EcalCommonData/data/ebalgo.xml'
            , 'Geometry/EcalCommonData/data/ebcon.xml'
            , 'Geometry/EcalCommonData/data/ebrot.xml'
            , 'Geometry/EcalCommonData/data/eecon.xml'
            , 'Geometry/EcalCommonData/data/eefixed.xml'
            , 'Geometry/EcalCommonData/data/eehier.xml'
            , 'Geometry/EcalCommonData/data/eealgo.xml'
            , 'Geometry/EcalCommonData/data/escon.xml'
            , 'Geometry/EcalCommonData/data/esalgo.xml'
            , 'Geometry/EcalCommonData/data/eeF.xml'
            , 'Geometry/EcalCommonData/data/eeB.xml'
            , 'Geometry/HcalCommonData/data/hcalrotations.xml'
            , 'Geometry/HcalCommonData/data/hcalalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalbarrelalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalendcapalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalouteralgo.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardfibre.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardmaterial.xml'
            , 'Geometry/MuonCommonData/data/mbCommon.xml'
            , 'Geometry/MuonCommonData/data/mb1.xml'
            , 'Geometry/MuonCommonData/data/mb2.xml'
            , 'Geometry/MuonCommonData/data/mb3.xml'
            , 'Geometry/MuonCommonData/data/mb4.xml'
            , 'Geometry/MuonCommonData/data/muonYoke.xml'
            , 'Geometry/MuonCommonData/data/mf.xml'
            , 'Geometry/ForwardCommonData/data/forward.xml'
            , 'Geometry/ForwardCommonData/data/forwardshield.xml'
            , 'Geometry/ForwardCommonData/data/brmrotations.xml'
            , 'Geometry/ForwardCommonData/data/brm.xml'
            , 'Geometry/ForwardCommonData/data/totemMaterials.xml'
            , 'Geometry/ForwardCommonData/data/totemRotations.xml'
            , 'Geometry/ForwardCommonData/data/totemt1.xml'
            , 'Geometry/ForwardCommonData/data/totemt2.xml'
            , 'Geometry/ForwardCommonData/data/ionpump.xml'
            , 'Geometry/MuonCommonData/data/muonNumbering.xml'
            , 'Geometry/TrackerCommonData/data/trackerStructureTopology.xml'
            , 'Geometry/TrackerSimData/data/trackersens.xml'
            , 'Geometry/TrackerRecoData/data/trackerRecoMaterial.xml'
            , 'Geometry/EcalSimData/data/ecalsens.xml'
            , 'Geometry/HcalCommonData/data/hcalsens.xml'
            , 'Geometry/HcalSimData/data/CaloUtil.xml'
            , 'Geometry/MuonSimData/data/muonSens.xml'
            , 'Geometry/DTGeometryBuilder/data/dtSpecsFilter.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecsFilter.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecs.xml'
            , 'Geometry/RPCGeometryBuilder/data/RPCSpecs.xml'
            , 'Geometry/ForwardCommonData/data/brmsens.xml'
            , 'Geometry/HcalSimData/data/HcalProdCuts.xml'
            , 'Geometry/EcalSimData/data/EcalProdCuts.xml'
            , 'Geometry/TrackerSimData/data/trackerProdCuts.xml'
            , 'Geometry/TrackerSimData/data/trackerProdCutsBEAM.xml'
            , 'Geometry/MuonSimData/data/muonProdCuts.xml'
            , 'Geometry/CMSCommonData/data/FieldParameters.xml'
        }

        string rootNodeName = 'cms:OCMS'
    }
    es_source tpparams9 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGFineGrainEBGroupRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams8 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGFineGrainEBIdMapRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source eegeom = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalMappingRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source GlobalTag = PoolDBESSource { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

        untracked string BlobStreamerName = 'TBufferBlobStreamingService'
        string connect = 'frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_21X_GLOBALTAG'
        string globaltag = 'CRUZET4_V5H::All'
    }
    es_source tpparams3 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGSlidingWindowRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams2 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGPedestalsRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source L1GtStableParametersRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtStableParametersRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams7 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGLutIdMapRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams6 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGLutGroupRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams5 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGWeightGroupRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source tpparams4 = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalTPGWeightIdMapRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source L1GtTriggerMaskVetoAlgoTrigRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtTriggerMaskVetoAlgoTrigRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source es_hardcode = HcalHardcodeCalibrations { 
        untracked vstring toGet = {
            'GainWidths'
            , 'channelQuality'
            , 'ZSThresholds'
        }

    }
    es_source L1GtPrescaleFactorsAlgoTrigRcdSource = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'L1GtPrescaleFactorsAlgoTrigRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_prefer GlobalTag = PoolDBESSource{}
    es_prefer GlobalTag = PoolDBESSource{}
    untracked PSet maxEvents = { 
        untracked int32 input = -1
    }
    PSet CondDBSetup = { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

    }
}

