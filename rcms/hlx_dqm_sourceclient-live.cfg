process hlxdqmlive = {
    source = EmptySource { 
    }
    module hlxdqmsource = HLXMonitor { 
        untracked uint32 NBINS = 280
        untracked string Style = 'BX'
        untracked string outputFile = 'DQM'
        untracked bool NewRun_Reset = True
        untracked string HLXDAQIP = 'vmepcs2f17-19'
        untracked string subSystemName = 'HLX'
        untracked double XMIN = 100.0
        untracked double XMAX = 3460.0
        untracked uint32 SourcePort = 51001
        untracked uint32 AquireMode = 0
        untracked bool Accumulate = True
        untracked uint32 ReconnectionTime = 60
        untracked string outputDir = '/home/dqmprolocal/output'
        untracked uint32 SavePeriod = 64
    }
    module hlxQualityTester = QualityTester { 
        untracked int32 prescaleFactor = 10000
        untracked FileInPath qtList = 'DQM/HLXMonitor/test/HLXQualityTests.xml'
    }
    module dqmEnv = DQMEventInfo { 
        untracked string subSystemFolder = 'HLX'
        untracked double eventRateWindow = 0.5
        untracked string eventInfoFolder = 'EventInfo'
    }
    module dqmSaver = DQMFileSaver { 
        untracked int32 saveByTime = 4
        untracked string producer = 'DQM'
        untracked int32 saveByEvent = -1
        untracked int32 forceRunNumber = -1
        untracked int32 saveByRun = -1
        untracked string workflow = ''
        untracked bool saveAtJobEnd = False
        untracked int32 referenceRequireStatus = 100
        untracked string convention = 'Online'
        untracked int32 saveByMinute = 8
        untracked string dirName = '/home/dqmprolocal/output'
        untracked int32 saveByLumiSection = -1
        untracked string referenceHandling = 'qtests'
    }
    path p = {dqmEnv&hlxdqmsource&hlxQualityTester&dqmSaver}
    service = MessageLogger { 
        untracked PSet cout = { 
            untracked PSet default = { 
                untracked int32 limit = 10000000
            }

            untracked string threshold = 'INFO'
            untracked PSet FwkReport = { 
                untracked int32 limit = 0
            }

            untracked int32 lineLength = 132
            untracked bool noLineBreaks = True
        }

        untracked PSet cerr = { 
            untracked PSet default = { 
                untracked int32 limit = 10000000
            }

            untracked string threshold = 'WARNING'
            untracked PSet FwkReport = { 
                untracked int32 limit = 0
            }

            untracked int32 lineLength = 132
            untracked bool noLineBreaks = True
        }

        untracked PSet FrameworkJobReport = { 
            untracked PSet FwkJob = { 
                untracked int32 limit = 10000000
            }

        }

        untracked vstring fwkJobReports = {
            'FrameworkJobReport'
        }

        untracked vstring categories = {
            'FwkJob'
            , 'MEtoEDMConverter_MEtoEDMConverter'
            , 'MEtoEDMConverter_endJob'
            , 'MEtoEDMConverter_beginRun'
            , 'MEtoEDMConverter_endRun'
            , 'EDMtoMEConverter_EDMtoMEConverter'
            , 'EDMtoMEConverter_endJob'
            , 'EDMtoMEConverter_beginRun'
            , 'EDMtoMEConverter_endRun'
            , 'ScheduleExecutionFailure'
            , 'EventSetupDependency'
            , 'Root_Warning'
            , 'Root_Error'
        }

        untracked vstring destinations = {
            'cout'
            , 'cerr'
        }

    }
    service = DQM { 
        untracked string filter = ''
        untracked double publishFrequency = 5.0
        untracked string collectorHost = 'srv-c2d05-19.cms'
        untracked int32 collectorPort = 9090
        untracked bool debug = False
    }
    service = DQMStore { 
        untracked string referenceFileName = ''
        untracked int32 verbose = 0
        untracked bool collateHistograms = False
    }
    untracked PSet maxEvents = { 
        untracked int32 input = -1
    }
}

