process DTDQM = {
    source = EventStreamHttpReader { 
        untracked string SelectHLTOutput = 'out4DQM'
        string sourceURL = 'http://srv-c2d05-14.cms:22100/urn:xdaq-application:lid=30'
        untracked string consumerPriority = 'normal'
        int32 max_event_size = 7000000
        untracked string consumerName = 'DT DQM Consumer'
        int32 max_queue_depth = 5
        untracked double maxEventRequestRate = 25.0
        untracked PSet SelectEvents = { 
            vstring SelectEvents = {
                '*DQM'
            }

        }

        untracked int32 headerRetryInterval = 3
    }
    module cscSegments = CSCSegmentProducer { 
        InputTag inputObjects = csc2DRecHits
        VPSet algo_psets = {
            { 
                vstring chamber_types = {
                    'ME1/a'
                    , 'ME1/b'
                    , 'ME1/2'
                    , 'ME1/3'
                    , 'ME2/1'
                    , 'ME2/2'
                    , 'ME3/1'
                    , 'ME3/2'
                    , 'ME4/1'
                }

                string algo_name = 'CSCSegAlgoSK'
                vint32 parameters_per_chamber_type = {
                    2
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

                VPSet algo_psets = {
                    { 
                        double dPhiFineMax = 0.025
                        untracked bool verboseInfo = True
                        double chi2Max = 99999.0
                        double dPhiMax = 0.003
                        double wideSeg = 3.0
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 8.0
                        double dRPhiMax = 8.0
                    }

                    , { 
                        double dPhiFineMax = 0.025
                        untracked bool verboseInfo = True
                        double chi2Max = 99999.0
                        double dPhiMax = 0.025
                        double wideSeg = 3.0
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 3.0
                        double dRPhiMax = 8.0
                    }

                }

            }

            , { 
                vstring chamber_types = {
                    'ME1/a'
                    , 'ME1/b'
                    , 'ME1/2'
                    , 'ME1/3'
                    , 'ME2/1'
                    , 'ME2/2'
                    , 'ME3/1'
                    , 'ME3/2'
                    , 'ME4/1'
                }

                string algo_name = 'CSCSegAlgoTC'
                vint32 parameters_per_chamber_type = {
                    2
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

                VPSet algo_psets = {
                    { 
                        double dPhiFineMax = 0.02
                        untracked bool verboseInfo = True
                        int32 SegmentSorting = 1
                        double chi2Max = 6000.0
                        double dPhiMax = 0.003
                        double chi2ndfProbMin = 0.0001
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 6.0
                        double dRPhiMax = 1.2
                    }

                    , { 
                        double dPhiFineMax = 0.013
                        untracked bool verboseInfo = True
                        int32 SegmentSorting = 1
                        double chi2Max = 6000.0
                        double dPhiMax = 0.00198
                        double chi2ndfProbMin = 0.0001
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 3.0
                        double dRPhiMax = 0.6
                    }

                }

            }

            , { 
                vstring chamber_types = {
                    'ME1/a'
                    , 'ME1/b'
                    , 'ME1/2'
                    , 'ME1/3'
                    , 'ME2/1'
                    , 'ME2/2'
                    , 'ME3/1'
                    , 'ME3/2'
                    , 'ME4/1'
                }

                string algo_name = 'CSCSegAlgoDF'
                vint32 parameters_per_chamber_type = {
                    3
                    , 1
                    , 2
                    , 2
                    , 1
                    , 2
                    , 1
                    , 2
                    , 1
                }

                VPSet algo_psets = {
                    { 
                        double tanThetaMax = 1.2
                        double maxRatioResidualPrune = 3.0
                        double dPhiFineMax = 0.025
                        double tanPhiMax = 0.5
                        double dXclusBoxMax = 8.0
                        untracked bool preClustering = False
                        double chi2Max = 5000.0
                        int32 minHitsPerSegment = 3
                        int32 minHitsForPreClustering = 10
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 8.0
                        int32 nHitsPerClusterIsShower = 20
                        untracked bool CSCSegmentDebug = False
                        untracked bool Pruning = False
                        double dYclusBoxMax = 8.0
                    }

                    , { 
                        double tanThetaMax = 2.0
                        double maxRatioResidualPrune = 3.0
                        double dPhiFineMax = 0.025
                        double tanPhiMax = 0.8
                        double dXclusBoxMax = 8.0
                        untracked bool preClustering = False
                        double chi2Max = 5000.0
                        int32 minHitsPerSegment = 3
                        int32 minHitsForPreClustering = 10
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 12.0
                        int32 nHitsPerClusterIsShower = 20
                        untracked bool CSCSegmentDebug = False
                        untracked bool Pruning = False
                        double dYclusBoxMax = 12.0
                    }

                    , { 
                        double tanThetaMax = 1.2
                        double maxRatioResidualPrune = 3.0
                        double dPhiFineMax = 0.025
                        double tanPhiMax = 0.5
                        double dXclusBoxMax = 8.0
                        untracked bool preClustering = False
                        double chi2Max = 5000.0
                        int32 minHitsPerSegment = 3
                        int32 minHitsForPreClustering = 30
                        int32 minLayersApart = 2
                        double dRPhiFineMax = 8.0
                        int32 nHitsPerClusterIsShower = 20
                        untracked bool CSCSegmentDebug = False
                        untracked bool Pruning = False
                        double dYclusBoxMax = 8.0
                    }

                }

            }

            , { 
                vstring chamber_types = {
                    'ME1/a'
                    , 'ME1/b'
                    , 'ME1/2'
                    , 'ME1/3'
                    , 'ME2/1'
                    , 'ME2/2'
                    , 'ME3/1'
                    , 'ME3/2'
                    , 'ME4/1'
                }

                string algo_name = 'CSCSegAlgoST'
                vint32 parameters_per_chamber_type = {
                    2
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                    , 1
                }

                VPSet algo_psets = {
                    { 
                        untracked bool preClustering = True
                        untracked int32 minHitsPerSegment = 3
                        untracked double yweightPenaltyThreshold = 1.0
                        untracked double curvePenalty = 2.0
                        untracked double dXclusBoxMax = 4.0
                        untracked double hitDropLimit5Hits = 0.8
                        untracked double yweightPenalty = 1.5
                        untracked bool BrutePruning = False
                        untracked double curvePenaltyThreshold = 0.85
                        untracked double hitDropLimit4Hits = 0.6
                        untracked double hitDropLimit6Hits = 0.3333
                        untracked int32 maxRecHitsInCluster = 20
                        untracked bool CSCDebug = False
                        untracked bool onlyBestSegment = False
                        untracked bool Pruning = False
                        untracked double dYclusBoxMax = 8.0
                    }

                    , { 
                        untracked bool preClustering = True
                        untracked int32 minHitsPerSegment = 3
                        untracked double yweightPenaltyThreshold = 1.0
                        untracked double curvePenalty = 2.0
                        untracked double dXclusBoxMax = 4.0
                        untracked double hitDropLimit5Hits = 0.8
                        untracked double yweightPenalty = 1.5
                        untracked bool BrutePruning = False
                        untracked double curvePenaltyThreshold = 0.85
                        untracked double hitDropLimit4Hits = 0.6
                        untracked double hitDropLimit6Hits = 0.3333
                        untracked int32 maxRecHitsInCluster = 24
                        untracked bool CSCDebug = False
                        untracked bool onlyBestSegment = False
                        untracked bool Pruning = False
                        untracked double dYclusBoxMax = 8.0
                    }

                }

            }

        }

        int32 algo_type = 4
    }
    module dtunpacker = DTUnpackingModule { 
        untracked bool useStandardFEDid = True
        string dataType = 'DDU'
        untracked bool fedbyType = True
        PSet readOutParameters = { 
            untracked bool debug = False
            PSet rosParameters = { 
                untracked bool writeSC = True
                untracked bool readingDDU = True
                untracked bool performDataIntegrityMonitor = True
                untracked bool readDDUIDfromDDU = True
                untracked bool debug = False
                untracked bool localDAQ = False
            }

            untracked bool performDataIntegrityMonitor = True
            untracked bool localDAQ = False
        }

    }
    module dt1DRecHitsNoDrift = DTRecHitProducer { 
        untracked bool debug = False
        PSet recAlgoConfig = { 
            double fixedDrift = 1.0
            string tTrigMode = 'DTTTrigSyncFromDB'
            double minTime = 1000.0
            double hitResolution = 1.0
            untracked bool debug = False
            double maxTime = 3500.0
            PSet tTrigModeConfig = { 
                double vPropWire = 24.4
                bool doTOFCorrection = False
                int32 tofCorrType = 0
                double kFactor = -1.3
                int32 wirePropCorrType = 0
                bool doWirePropCorrection = False
                bool doT0Correction = False
                untracked bool debug = False
            }

        }

        InputTag dtDigiLabel = muonDTDigis
        string recAlgo = 'DTNoDriftAlgo'
    }
    module dt2DSegments = DTRecSegment2DProducer { 
        PSet Reco2DAlgoConfig = { 
            string recAlgo = 'DTLinearDriftAlgo'
            PSet recAlgoConfig = { 
                string tTrigMode = 'DTTTrigSyncFromDB'
                double minTime = -3.0
                double driftVelocity = 0.00543
                double hitResolution = 0.02
                untracked bool debug = False
                double maxTime = 420.0
                PSet tTrigModeConfig = { 
                    double vPropWire = 24.4
                    bool doTOFCorrection = False
                    int32 tofCorrType = 0
                    double kFactor = -1.3
                    int32 wirePropCorrType = 0
                    bool doWirePropCorrection = False
                    bool doT0Correction = True
                    untracked bool debug = False
                }

            }

            int32 segmCleanerMode = 1
            double AlphaMaxPhi = 100.0
            uint32 MaxAllowedHits = 50
            int32 nSharedHitsMax = 2
            double AlphaMaxTheta = 100.0
            untracked bool debug = False
            int32 nUnSharedHitsMin = 2
        }

        string Reco2DAlgoName = 'DTCombinatorialPatternReco'
        untracked bool debug = False
        InputTag recHits1DLabel = dt1DRecHits
    }
    module rpcRecHits = RPCRecHitProducer { 
        PSet recAlgoConfig = { 
        }

        string recAlgo = 'RPCRecHitStandardAlgo'
        InputTag rpcDigiLabel = muonRPCDigis
    }
    module dt4DSegmentsNoDrift = DTRecSegment4DProducer { 
        untracked bool debug = False
        string Reco4DAlgoName = 'DTCombinatorialPatternReco4D'
        InputTag recHits2DLabel = dt2DSegments
        InputTag recHits1DLabel = dt1DRecHits
        PSet Reco4DAlgoConfig = { 
            string recAlgo = 'DTNoDriftAlgo'
            PSet recAlgoConfig = { 
                double fixedDrift = 1.0
                string tTrigMode = 'DTTTrigSyncFromDB'
                double minTime = 1000.0
                double hitResolution = 1.0
                untracked bool debug = False
                double maxTime = 3500.0
                PSet tTrigModeConfig = { 
                    double vPropWire = 24.4
                    bool doTOFCorrection = False
                    int32 tofCorrType = 0
                    double kFactor = -1.3
                    int32 wirePropCorrType = 0
                    bool doWirePropCorrection = False
                    bool doT0Correction = False
                    untracked bool debug = False
                }

            }

            PSet Reco2DAlgoConfig = { 
                string recAlgo = 'DTNoDriftAlgo'
                PSet recAlgoConfig = { 
                    double fixedDrift = 1.0
                    string tTrigMode = 'DTTTrigSyncFromDB'
                    double minTime = 1000.0
                    double hitResolution = 1.0
                    untracked bool debug = False
                    double maxTime = 3500.0
                    PSet tTrigModeConfig = { 
                        double vPropWire = 24.4
                        bool doTOFCorrection = False
                        int32 tofCorrType = 0
                        double kFactor = -1.3
                        int32 wirePropCorrType = 0
                        bool doWirePropCorrection = False
                        bool doT0Correction = False
                        untracked bool debug = False
                    }

                }

                int32 segmCleanerMode = 1
                double AlphaMaxPhi = 100.0
                uint32 MaxAllowedHits = 50
                int32 nSharedHitsMax = 2
                double AlphaMaxTheta = 100.0
                untracked bool debug = False
                int32 nUnSharedHitsMin = 2
            }

            string Reco2DAlgoName = 'DTCombinatorialPatternReco'
            untracked bool debug = False
            int32 nSharedHitsMax = 2
            int32 nUnSharedHitsMin = 2
            bool AllDTRecHits = True
            int32 segmCleanerMode = 1
        }

    }
    module csc2DRecHits = CSCRecHitDProducer { 
        untracked double XTasymmetry_ME1b = 0.0
        untracked double XTasymmetry_ME1a = 0.0
        untracked double ConstSyst_ME1a = 0.022
        untracked double ConstSyst_ME41 = 0.0
        untracked double XTasymmetry_ME41 = 0.0
        untracked double XTasymmetry_ME22 = 0.0
        untracked double XTasymmetry_ME21 = 0.0
        untracked double ConstSyst_ME21 = 0.0
        untracked double ConstSyst_ME22 = 0.0
        untracked double XTasymmetry_ME31 = 0.0
        untracked double NoiseLevel_ME13 = 8.0
        untracked double NoiseLevel_ME12 = 9.0
        untracked double NoiseLevel_ME32 = 9.0
        untracked double NoiseLevel_ME31 = 9.0
        untracked double XTasymmetry_ME32 = 0.0
        untracked double ConstSyst_ME1b = 0.007
        untracked double XTasymmetry_ME13 = 0.0
        untracked double XTasymmetry_ME12 = 0.0
        untracked double ConstSyst_ME12 = 0.0
        untracked double ConstSyst_ME13 = 0.0
        untracked double ConstSyst_ME32 = 0.0
        untracked double ConstSyst_ME31 = 0.0
        untracked double NoiseLevel_ME1a = 7.0
        untracked double NoiseLevel_ME1b = 8.0
        untracked double NoiseLevel_ME21 = 9.0
        untracked double NoiseLevel_ME22 = 9.0
        untracked double NoiseLevel_ME41 = 9.0
        untracked int32 CSCStripClusterSize = 3
        untracked double CSCStripPeakThreshold = 10.0
        bool readBadChannels = False
        InputTag stripDigiTag = muonCSCDigis:MuonCSCStripDigi
        untracked double CSCStripxtalksOffset = 0.03
        untracked int32 CSCstripWireDeltaTime = 8
        untracked bool CSCUseCalibrations = True
        InputTag wireDigiTag = muonCSCDigis:MuonCSCWireDigi
        untracked bool CSCDebug = False
        untracked int32 CSCWireClusterDeltaT = 1
        untracked double CSCStripClusterChargeCut = 25.0
    }
    module dt4DSegments = DTRecSegment4DProducer { 
        string Reco4DAlgoName = 'DTCombinatorialPatternReco4D'
        PSet Reco4DAlgoConfig = { 
            PSet Reco2DAlgoConfig = { 
                string recAlgo = 'DTLinearDriftAlgo'
                PSet recAlgoConfig = { 
                    string tTrigMode = 'DTTTrigSyncFromDB'
                    double minTime = -3.0
                    double driftVelocity = 0.00543
                    double hitResolution = 0.02
                    untracked bool debug = False
                    double maxTime = 420.0
                    PSet tTrigModeConfig = { 
                        double vPropWire = 24.4
                        bool doTOFCorrection = False
                        int32 tofCorrType = 0
                        double kFactor = -1.3
                        int32 wirePropCorrType = 0
                        bool doWirePropCorrection = False
                        bool doT0Correction = True
                        untracked bool debug = False
                    }

                }

                int32 segmCleanerMode = 1
                double AlphaMaxPhi = 100.0
                uint32 MaxAllowedHits = 50
                int32 nSharedHitsMax = 2
                double AlphaMaxTheta = 100.0
                untracked bool debug = False
                int32 nUnSharedHitsMin = 2
            }

            string Reco2DAlgoName = 'DTCombinatorialPatternReco'
            string recAlgo = 'DTLinearDriftAlgo'
            PSet recAlgoConfig = { 
                string tTrigMode = 'DTTTrigSyncFromDB'
                double minTime = -3.0
                double driftVelocity = 0.00543
                double hitResolution = 0.02
                untracked bool debug = False
                double maxTime = 420.0
                PSet tTrigModeConfig = { 
                    double vPropWire = 24.4
                    bool doTOFCorrection = False
                    int32 tofCorrType = 0
                    double kFactor = -1.3
                    int32 wirePropCorrType = 0
                    bool doWirePropCorrection = False
                    bool doT0Correction = True
                    untracked bool debug = False
                }

            }

            untracked bool debug = False
            int32 nSharedHitsMax = 2
            int32 nUnSharedHitsMin = 2
            bool AllDTRecHits = True
            int32 segmCleanerMode = 1
        }

        untracked bool debug = False
        InputTag recHits1DLabel = dt1DRecHits
        InputTag recHits2DLabel = dt2DSegments
    }
    module dt1DRecHits = DTRecHitProducer { 
        string recAlgo = 'DTLinearDriftAlgo'
        PSet recAlgoConfig = { 
            string tTrigMode = 'DTTTrigSyncFromDB'
            double minTime = -3.0
            double driftVelocity = 0.00543
            double hitResolution = 0.02
            untracked bool debug = False
            double maxTime = 420.0
            PSet tTrigModeConfig = { 
                double vPropWire = 24.4
                bool doTOFCorrection = False
                int32 tofCorrType = 0
                double kFactor = -1.3
                int32 wirePropCorrType = 0
                bool doWirePropCorrection = False
                bool doT0Correction = True
                untracked bool debug = False
            }

        }

        untracked bool debug = False
        InputTag dtDigiLabel = dtunpacker
    }
    module dqmSaver = DQMFileSaver { 
        untracked int32 saveByTime = 2
        untracked string producer = 'DQM'
        untracked int32 saveByEvent = -1
        untracked int32 forceRunNumber = -1
        untracked int32 saveByRun = -1
        untracked string workflow = ''
        untracked bool saveAtJobEnd = False
        untracked string convention = 'Online'
        untracked int32 saveByMinute = 8
        untracked string dirName = '/home/dqmprolocal/output'
        untracked int32 saveByLumiSection = -1
    }
    module calibrationEventsFilter = TriggerTypeFilter { 
        int32 TriggerFedId = 812
        string InputLabel = 'source'
        int32 SelectedTriggerType = 1
    }
    module dqmEnv = DQMEventInfo { 
        untracked string subSystemFolder = 'DT'
        untracked double eventRateWindow = 0.5
        untracked string eventInfoFolder = 'EventInfo'
    }
    module dtqTester = QualityTester { 
        untracked string reportThreshold = 'red'
        untracked int32 prescaleFactor = 1
        untracked FileInPath qtList = 'DQM/DTMonitorClient/test/QualityTests.xml'
        untracked bool getQualityTestsFromFile = True
    }
    module dttfunpacker = DTTFFEDReader { 
        InputTag DTTF_FED_Source = source
    }
    module dataIntegrityTest = DTDataIntegrityTest { 
        untracked string outputFile = 'DataIntegrityTest.root'
        untracked bool writeHisto = False
        untracked int32 nTimeBin = 9
        untracked bool doTimeHisto = False
        untracked string folderRoot = ''
        untracked bool debug = False
        untracked int32 diagnosticPrescale = 1
    }
    module dtOccupancyTest = DTOccupancyTest { 
    }
    module dtDigiMonitor = DTDigiTask { 
        untracked bool checkNoisyChannels = True
        untracked int32 timeBoxGranularity = 4
        untracked bool staticBooking = True
        untracked bool readDB = False
        untracked int32 tdcRescale = 1
        int32 defaultTtrig = 2700
        int32 defaultTmax = 500
        untracked int32 maxTDCHitsPerChamber = 30000
        int32 inTimeHitsLowerBound = 500
        int32 inTimeHitsUpperBound = 500
        untracked bool debug = False
        untracked bool localrun = True
        InputTag dtDigiLabel = dtunpacker
        bool performPerWireT0Calibration = True
        untracked int32 ResetCycle = 10000
    }
    module dtNoiseAnalysisMonitor = DTNoiseAnalysisTest { 
        untracked int32 noisyCellDef = 200
    }
    module dtNoiseMonitor = DTNoiseTask { 
        string recHits4DLabel = 'dt4DSegments'
        InputTag dtDigiLabel = dtunpacker
        untracked bool doTbHistos = False
        untracked bool doSegmentVeto = False
    }
    module dtResolutionAnalysisMonitor = DTResolutionAnalysisTask { 
        string recHits4DLabel = 'dt4DSegments'
        untracked bool debug = False
        string recHitLabel = 'dt1DRecHits'
        untracked int32 ResetCycle = 10000
    }
    module triggerTest = DTLocalTriggerTest { 
        untracked int32 diagnosticPrescale = 1
        untracked vstring hwSources = {
            'DCC'
            , 'DDU'
        }

        untracked bool localrun = True
        untracked string folderRoot = ''
    }
    module dtSegmentAnalysisMonitor = DTSegmentAnalysisTask { 
        untracked bool checkNoisyChannels = True
        string recHits4DLabel = 'dt4DSegments'
        untracked bool localrun = True
        untracked bool debug = False
    }
    module segmentTest = DTSegmentAnalysisTest { 
        untracked double chi2Threshold = 5.0
        untracked int32 badCHpercentual = 10
        untracked int32 badSegmPercentual = 30
        untracked int32 diagnosticPrescale = 1
        untracked string folderRoot = ''
    }
    module dtSummaryClients = DTSummaryClients { 
    }
    module dtTriggerMonitor = DTLocalTriggerTask { 
        untracked int32 maxBXDCC = 2
        untracked string ros_label = 'dtunpacker'
        untracked string seg_label = 'dt4DSegments'
        untracked int32 minBXDDU = 0
        untracked bool staticBooking = True
        untracked int32 maxBXDDU = 20
        untracked bool process_seg = False
        untracked bool process_ros = True
        untracked bool process_dcc = True
        untracked bool debug = False
        untracked string dcc_label = 'dttfunpacker'
        untracked bool localrun = True
        untracked int32 minBXDCC = -2
        untracked int32 ResetCycle = 10000
    }
    sequence dtlocalrecoNoDrift = {dt1DRecHitsNoDrift,dt4DSegmentsNoDrift}
    sequence dqmmodules = {dqmEnv&dqmSaver}
    sequence muonlocalreco_with_2DSegments = {dtlocalreco_with_2DSegments&csclocalreco&rpcRecHits}
    sequence reco = {dtunpacker&dttfunpacker&dt1DRecHits&dt4DSegments}
    sequence dtlocalreco_with_2DSegments = {dt1DRecHits,dt2DSegments,dt4DSegments}
    sequence muonlocalrecoNoDrift = {dtlocalrecoNoDrift&csclocalreco&rpcRecHits}
    sequence dtDQMTask = {dtDigiMonitor&dtSegmentAnalysisMonitor&dtTriggerMonitor&dtNoiseMonitor&dtResolutionAnalysisMonitor}
    sequence muonlocalreco = {dtlocalreco&csclocalreco&rpcRecHits}
    sequence dtDQMTest = {dataIntegrityTest&triggerTest&dtOccupancyTest&segmentTest&dtNoiseAnalysisMonitor&dtSummaryClients&dtqTester}
    sequence dtlocalreco = {dt1DRecHits,dt4DSegments}
    sequence csclocalreco = {csc2DRecHits,cscSegments}
    sequence muonLocalRecoGR = {muonlocalreco&muonlocalrecoNoDrift}
    path dtDQMPath = {calibrationEventsFilter,dqmmodules&reco&dtDQMTask&dtDQMTest}
    service = MessageLogger { 
        untracked PSet cout = { 
            untracked string threshold = 'WARNING'
        }

        untracked vstring destinations = {
            'cout'
        }

    }
    service = DQM { 
        untracked string filter = ''
        untracked double publishFrequency = 5.0
        untracked string collectorHost = 'srv-c2d05-19.cms'
        untracked int32 collectorPort = 9090
        untracked bool debug = False
    }
    service = DQMStore { 
        untracked string referenceFileName = ''
        untracked int32 verbose = 0
    }
    service = DTDataIntegrityTask { 
        untracked int32 TBhistoGranularity = 1
        untracked bool getSCInfo = True
        untracked bool doTimeHisto = True
        untracked bool debug = False
        untracked int32 timeBoxLowerBound = 0
        untracked int32 resetCycle = 1000
        untracked int32 timeBoxUpperBound = 10000
    }
    es_module idealForDigiCSCGeometry = CSCGeometryESModule { 
        string appendToDataLabel = 'idealForDigi'
        untracked bool debugV = False
        bool useGangedStripsInME1a = True
        string alignmentsLabel = 'fakeForIdeal'
        bool useOnlyWiresInME1a = False
        bool useRealWireGeometry = True
        bool useCentreTIOffsets = False
        bool applyAlignment = False
    }
    es_module  = CaloGeometryBuilder { 
        vstring SelectedCalos = {
            'HCAL'
            , 'ZDC'
            , 'EcalBarrel'
            , 'EcalEndcap'
            , 'EcalPreshower'
            , 'TOWER'
        }

    }
    es_module hcal_db_producer = HcalDbProducer { 
        untracked string file = ''
        untracked vstring dump = {
            ''
        }

    }
    es_module  = HcalHardcodeGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = DTGeometryESModule { 
        string appendToDataLabel = ''
        bool applyAlignment = True
        string alignmentsLabel = ''
    }
    es_module idealForDigiDTGeometry = DTGeometryESModule { 
        string appendToDataLabel = 'idealForDigi'
        bool applyAlignment = False
        string alignmentsLabel = 'fakeForIdeal'
    }
    es_module  = StripCPEfromTrackAngleESProducer { 
        string ComponentName = 'StripCPEfromTrackAngle'
    }
    es_module  = SiStripRecHitMatcherESProducer { 
        string ComponentName = 'StandardMatcher'
        double NSigmaInside = 3.0
    }
    es_module  = RPCGeometryESModule { 
        untracked bool compatibiltyWith11 = True
    }
    es_module  = EcalElectronicsMappingBuilder { 
        untracked string MapFile = 'Geometry/EcalMapping/data/EEMap.txt'
    }
    es_module  = MuonNumberingInitialization { 
    }
    es_module  = HcalTopologyIdealEP { 
    }
    es_module sistripconn = SiStripConnectivity { 
    }
    es_module idealForDigiTrackerGeometry = TrackerDigiGeometryESModule { 
        string appendToDataLabel = 'idealForDigi'
        bool fromDDD = True
        bool applyAlignment = False
        string alignmentsLabel = 'fakeForIdeal'
    }
    es_module  = TrackerDigiGeometryESModule { 
        string appendToDataLabel = ''
        bool fromDDD = True
        bool applyAlignment = True
        string alignmentsLabel = ''
    }
    es_module  = EcalLaserCorrectionService { 
    }
    es_module  = EcalBarrelGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = TrackerGeometricDetESModule { 
        bool fromDDD = True
    }
    es_module  = SiStripGainESProducer { 
        untracked bool printDebug = False
        double NormalizationFactor = 1.0
        bool AutomaticNormalization = False
    }
    es_module  = CSCGeometryESModule { 
        string appendToDataLabel = ''
        untracked bool debugV = False
        bool useGangedStripsInME1a = True
        string alignmentsLabel = ''
        bool useOnlyWiresInME1a = False
        bool useRealWireGeometry = True
        bool useCentreTIOffsets = False
        bool applyAlignment = True
    }
    es_module  = ZdcHardcodeGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = EcalPreshowerGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module  = CaloTowerHardcodeGeometryEP { 
    }
    es_module  = EcalEndcapGeometryEP { 
        untracked bool applyAlignment = False
    }
    es_module fakeForIdealAlignment = FakeAlignmentProducer { 
        string appendToDataLabel = 'fakeForIdeal'
    }
    es_module  = EcalTrigTowerConstituentsMapBuilder { 
        untracked string MapFile = 'Geometry/EcalMapping/data/EndCap_TTMap.txt'
    }
    es_source eegeom = EmptyESSource { 
        bool iovIsRunNotTime = True
        string recordName = 'EcalMappingRcd'
        vuint32 firstValid = {
            1
        }

    }
    es_source  = XMLIdealGeometryESSource { 
        vstring geomXMLFiles = {
            'Geometry/CMSCommonData/data/materials.xml'
            , 'Geometry/CMSCommonData/data/rotations.xml'
            , 'Geometry/CMSCommonData/data/normal/cmsextent.xml'
            , 'Geometry/CMSCommonData/data/cms.xml'
            , 'Geometry/CMSCommonData/data/cmsMother.xml'
            , 'Geometry/CMSCommonData/data/cmsTracker.xml'
            , 'Geometry/CMSCommonData/data/caloBase.xml'
            , 'Geometry/CMSCommonData/data/cmsCalo.xml'
            , 'Geometry/CMSCommonData/data/muonBase.xml'
            , 'Geometry/CMSCommonData/data/cmsMuon.xml'
            , 'Geometry/CMSCommonData/data/mgnt.xml'
            , 'Geometry/CMSCommonData/data/beampipe.xml'
            , 'Geometry/CMSCommonData/data/cmsBeam.xml'
            , 'Geometry/CMSCommonData/data/muonMB.xml'
            , 'Geometry/CMSCommonData/data/muonMagnet.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdMaterials.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdCommon.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq1x2.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq1x5.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x3.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x4.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPlaq2x5.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPanelBase.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdPanel.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdBlade.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdNipple.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdDisk.xml'
            , 'Geometry/TrackerCommonData/data/pixfwdCylinder.xml'
            , 'Geometry/TrackerCommonData/data/pixfwd.xml'
            , 'Geometry/TrackerCommonData/data/pixbarmaterial.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladder.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladderfull.xml'
            , 'Geometry/TrackerCommonData/data/pixbarladderhalf.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer0.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer1.xml'
            , 'Geometry/TrackerCommonData/data/pixbarlayer2.xml'
            , 'Geometry/TrackerCommonData/data/pixbar.xml'
            , 'Geometry/TrackerCommonData/data/tibtidcommonmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tibmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tibmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0a.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule0b.xml'
            , 'Geometry/TrackerCommonData/data/tibmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tibstringpar.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring0.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring1.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring2.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ll.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3lr.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ul.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3ur.xml'
            , 'Geometry/TrackerCommonData/data/tibstring3.xml'
            , 'Geometry/TrackerCommonData/data/tiblayerpar.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer0.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer1.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer2.xml'
            , 'Geometry/TrackerCommonData/data/tiblayer3.xml'
            , 'Geometry/TrackerCommonData/data/tib.xml'
            , 'Geometry/TrackerCommonData/data/tidmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tidmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0r.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule0l.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1r.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule1l.xml'
            , 'Geometry/TrackerCommonData/data/tidmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tidringpar.xml'
            , 'Geometry/TrackerCommonData/data/tidring0.xml'
            , 'Geometry/TrackerCommonData/data/tidring0f.xml'
            , 'Geometry/TrackerCommonData/data/tidring0b.xml'
            , 'Geometry/TrackerCommonData/data/tidring1.xml'
            , 'Geometry/TrackerCommonData/data/tidring1f.xml'
            , 'Geometry/TrackerCommonData/data/tidring1b.xml'
            , 'Geometry/TrackerCommonData/data/tidring2.xml'
            , 'Geometry/TrackerCommonData/data/tid.xml'
            , 'Geometry/TrackerCommonData/data/tidf.xml'
            , 'Geometry/TrackerCommonData/data/tidb.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservices.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservicesf.xml'
            , 'Geometry/TrackerCommonData/data/tibtidservicesb.xml'
            , 'Geometry/TrackerCommonData/data/tobmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tobmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tobmodule4.xml'
            , 'Geometry/TrackerCommonData/data/tobrodpar.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod0.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod1.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod2.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod3.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4c.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod4.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5l.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5h.xml'
            , 'Geometry/TrackerCommonData/data/tobrod5.xml'
            , 'Geometry/TrackerCommonData/data/tob.xml'
            , 'Geometry/TrackerCommonData/data/tecmaterial.xml'
            , 'Geometry/TrackerCommonData/data/tecmodpar.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule0s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule1s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule2.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule3.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4r.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule4s.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule5.xml'
            , 'Geometry/TrackerCommonData/data/tecmodule6.xml'
            , 'Geometry/TrackerCommonData/data/tecpetpar.xml'
            , 'Geometry/TrackerCommonData/data/tecring0.xml'
            , 'Geometry/TrackerCommonData/data/tecring1.xml'
            , 'Geometry/TrackerCommonData/data/tecring2.xml'
            , 'Geometry/TrackerCommonData/data/tecring3.xml'
            , 'Geometry/TrackerCommonData/data/tecring4.xml'
            , 'Geometry/TrackerCommonData/data/tecring5.xml'
            , 'Geometry/TrackerCommonData/data/tecring6.xml'
            , 'Geometry/TrackerCommonData/data/tecring0f.xml'
            , 'Geometry/TrackerCommonData/data/tecring1f.xml'
            , 'Geometry/TrackerCommonData/data/tecring2f.xml'
            , 'Geometry/TrackerCommonData/data/tecring3f.xml'
            , 'Geometry/TrackerCommonData/data/tecring4f.xml'
            , 'Geometry/TrackerCommonData/data/tecring5f.xml'
            , 'Geometry/TrackerCommonData/data/tecring6f.xml'
            , 'Geometry/TrackerCommonData/data/tecring0b.xml'
            , 'Geometry/TrackerCommonData/data/tecring1b.xml'
            , 'Geometry/TrackerCommonData/data/tecring2b.xml'
            , 'Geometry/TrackerCommonData/data/tecring3b.xml'
            , 'Geometry/TrackerCommonData/data/tecring4b.xml'
            , 'Geometry/TrackerCommonData/data/tecring5b.xml'
            , 'Geometry/TrackerCommonData/data/tecring6b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetalf.xml'
            , 'Geometry/TrackerCommonData/data/tecpetalb.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal0b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal3b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal6f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal6b.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal8f.xml'
            , 'Geometry/TrackerCommonData/data/tecpetal8b.xml'
            , 'Geometry/TrackerCommonData/data/tecwheel.xml'
            , 'Geometry/TrackerCommonData/data/tecwheela.xml'
            , 'Geometry/TrackerCommonData/data/tecwheelb.xml'
            , 'Geometry/TrackerCommonData/data/tecwheelc.xml'
            , 'Geometry/TrackerCommonData/data/tecwheeld.xml'
            , 'Geometry/TrackerCommonData/data/tecwheel6.xml'
            , 'Geometry/TrackerCommonData/data/tecservices.xml'
            , 'Geometry/TrackerCommonData/data/tecbackplate.xml'
            , 'Geometry/TrackerCommonData/data/tec.xml'
            , 'Geometry/TrackerCommonData/data/trackermaterial.xml'
            , 'Geometry/TrackerCommonData/data/tracker.xml'
            , 'Geometry/TrackerCommonData/data/trackerpixbar.xml'
            , 'Geometry/TrackerCommonData/data/trackerpixfwd.xml'
            , 'Geometry/TrackerCommonData/data/trackertibtidservices.xml'
            , 'Geometry/TrackerCommonData/data/trackertib.xml'
            , 'Geometry/TrackerCommonData/data/trackertid.xml'
            , 'Geometry/TrackerCommonData/data/trackertob.xml'
            , 'Geometry/TrackerCommonData/data/trackertec.xml'
            , 'Geometry/TrackerCommonData/data/trackerbulkhead.xml'
            , 'Geometry/TrackerCommonData/data/trackerother.xml'
            , 'Geometry/EcalCommonData/data/eregalgo.xml'
            , 'Geometry/EcalCommonData/data/ebalgo.xml'
            , 'Geometry/EcalCommonData/data/ebcon.xml'
            , 'Geometry/EcalCommonData/data/ebrot.xml'
            , 'Geometry/EcalCommonData/data/eecon.xml'
            , 'Geometry/EcalCommonData/data/eefixed.xml'
            , 'Geometry/EcalCommonData/data/eehier.xml'
            , 'Geometry/EcalCommonData/data/eealgo.xml'
            , 'Geometry/EcalCommonData/data/escon.xml'
            , 'Geometry/EcalCommonData/data/esalgo.xml'
            , 'Geometry/EcalCommonData/data/eeF.xml'
            , 'Geometry/EcalCommonData/data/eeB.xml'
            , 'Geometry/HcalCommonData/data/hcalrotations.xml'
            , 'Geometry/HcalCommonData/data/hcalalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalbarrelalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalendcapalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalouteralgo.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardalgo.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardfibre.xml'
            , 'Geometry/HcalCommonData/data/hcalforwardmaterial.xml'
            , 'Geometry/MuonCommonData/data/mbCommon.xml'
            , 'Geometry/MuonCommonData/data/mb1.xml'
            , 'Geometry/MuonCommonData/data/mb2.xml'
            , 'Geometry/MuonCommonData/data/mb3.xml'
            , 'Geometry/MuonCommonData/data/mb4.xml'
            , 'Geometry/MuonCommonData/data/muonYoke.xml'
            , 'Geometry/MuonCommonData/data/mf.xml'
            , 'Geometry/ForwardCommonData/data/forward.xml'
            , 'Geometry/ForwardCommonData/data/forwardshield.xml'
            , 'Geometry/ForwardCommonData/data/brmrotations.xml'
            , 'Geometry/ForwardCommonData/data/brm.xml'
            , 'Geometry/ForwardCommonData/data/totemMaterials.xml'
            , 'Geometry/ForwardCommonData/data/totemRotations.xml'
            , 'Geometry/ForwardCommonData/data/totemt1.xml'
            , 'Geometry/ForwardCommonData/data/totemt2.xml'
            , 'Geometry/ForwardCommonData/data/ionpump.xml'
            , 'Geometry/MuonCommonData/data/muonNumbering.xml'
            , 'Geometry/TrackerCommonData/data/trackerStructureTopology.xml'
            , 'Geometry/TrackerSimData/data/trackersens.xml'
            , 'Geometry/TrackerRecoData/data/trackerRecoMaterial.xml'
            , 'Geometry/EcalSimData/data/ecalsens.xml'
            , 'Geometry/HcalCommonData/data/hcalsens.xml'
            , 'Geometry/HcalSimData/data/CaloUtil.xml'
            , 'Geometry/MuonSimData/data/muonSens.xml'
            , 'Geometry/DTGeometryBuilder/data/dtSpecsFilter.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecsFilter.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecs.xml'
            , 'Geometry/RPCGeometryBuilder/data/RPCSpecs.xml'
            , 'Geometry/ForwardCommonData/data/brmsens.xml'
            , 'Geometry/HcalSimData/data/HcalProdCuts.xml'
            , 'Geometry/EcalSimData/data/EcalProdCuts.xml'
            , 'Geometry/TrackerSimData/data/trackerProdCuts.xml'
            , 'Geometry/TrackerSimData/data/trackerProdCutsBEAM.xml'
            , 'Geometry/MuonSimData/data/muonProdCuts.xml'
            , 'Geometry/CMSCommonData/data/FieldParameters.xml'
        }

        string rootNodeName = 'cms:OCMS'
    }
    es_source GlobalTag = PoolDBESSource { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

        untracked string BlobStreamerName = 'TBufferBlobStreamingService'
        string connect = 'frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_21X_GLOBALTAG'
        string globaltag = 'CRZT210_V1H::All'
    }
    es_source  = SiStripPedestalsFakeESSource { 
        double HighThValue = 5.0
        untracked bool printDebug = False
        uint32 PedestalsValue = 30
        FileInPath file = 'CalibTracker/SiStripCommon/data/SiStripDetInfo.dat'
        double LowThValue = 2.0
    }
    es_source es_hardcode = HcalHardcodeCalibrations { 
        untracked vstring toGet = {
            'GainWidths'
            , 'channelQuality'
            , 'ZSThresholds'
        }

    }
    es_source  = SiStripQualityFakeESSource { 
    }
    es_prefer GlobalTag = PoolDBESSource{}
    PSet ST_ME1A = { 
        untracked double curvePenaltyThreshold = 0.85
        untracked int32 minHitsPerSegment = 3
        untracked double yweightPenaltyThreshold = 1.0
        untracked double curvePenalty = 2.0
        untracked double dXclusBoxMax = 4.0
        untracked double hitDropLimit5Hits = 0.8
        untracked double yweightPenalty = 1.5
        untracked bool BrutePruning = False
        untracked bool preClustering = True
        untracked double hitDropLimit4Hits = 0.6
        untracked bool Pruning = False
        untracked int32 maxRecHitsInCluster = 24
        untracked bool CSCDebug = False
        untracked bool onlyBestSegment = False
        untracked double hitDropLimit6Hits = 0.3333
        untracked double dYclusBoxMax = 8.0
    }
    PSet SK_ME1234 = { 
        double dPhiFineMax = 0.025
        untracked bool verboseInfo = True
        double chi2Max = 99999.0
        double dPhiMax = 0.003
        double wideSeg = 3.0
        int32 minLayersApart = 2
        double dRPhiFineMax = 8.0
        double dRPhiMax = 8.0
    }
    PSet TC_ME1234 = { 
        double dPhiFineMax = 0.02
        untracked bool verboseInfo = True
        int32 SegmentSorting = 1
        double chi2Max = 6000.0
        double dPhiMax = 0.003
        double chi2ndfProbMin = 0.0001
        int32 minLayersApart = 2
        double dRPhiFineMax = 6.0
        double dRPhiMax = 1.2
    }
    PSet CSCSegAlgoDF = { 
        vstring chamber_types = {
            'ME1/a'
            , 'ME1/b'
            , 'ME1/2'
            , 'ME1/3'
            , 'ME2/1'
            , 'ME2/2'
            , 'ME3/1'
            , 'ME3/2'
            , 'ME4/1'
        }

        string algo_name = 'CSCSegAlgoDF'
        vint32 parameters_per_chamber_type = {
            3
            , 1
            , 2
            , 2
            , 1
            , 2
            , 1
            , 2
            , 1
        }

        VPSet algo_psets = {
            { 
                double tanThetaMax = 1.2
                double maxRatioResidualPrune = 3.0
                double dPhiFineMax = 0.025
                double tanPhiMax = 0.5
                double dXclusBoxMax = 8.0
                untracked bool preClustering = False
                double chi2Max = 5000.0
                int32 minHitsPerSegment = 3
                int32 minHitsForPreClustering = 10
                int32 minLayersApart = 2
                double dRPhiFineMax = 8.0
                int32 nHitsPerClusterIsShower = 20
                untracked bool CSCSegmentDebug = False
                untracked bool Pruning = False
                double dYclusBoxMax = 8.0
            }

            , { 
                double tanThetaMax = 2.0
                double maxRatioResidualPrune = 3.0
                double dPhiFineMax = 0.025
                double tanPhiMax = 0.8
                double dXclusBoxMax = 8.0
                untracked bool preClustering = False
                double chi2Max = 5000.0
                int32 minHitsPerSegment = 3
                int32 minHitsForPreClustering = 10
                int32 minLayersApart = 2
                double dRPhiFineMax = 12.0
                int32 nHitsPerClusterIsShower = 20
                untracked bool CSCSegmentDebug = False
                untracked bool Pruning = False
                double dYclusBoxMax = 12.0
            }

            , { 
                double tanThetaMax = 1.2
                double maxRatioResidualPrune = 3.0
                double dPhiFineMax = 0.025
                double tanPhiMax = 0.5
                double dXclusBoxMax = 8.0
                untracked bool preClustering = False
                double chi2Max = 5000.0
                int32 minHitsPerSegment = 3
                int32 minHitsForPreClustering = 30
                int32 minLayersApart = 2
                double dRPhiFineMax = 8.0
                int32 nHitsPerClusterIsShower = 20
                untracked bool CSCSegmentDebug = False
                untracked bool Pruning = False
                double dYclusBoxMax = 8.0
            }

        }

    }
    PSet ST_ME1234 = { 
        untracked double curvePenaltyThreshold = 0.85
        untracked int32 minHitsPerSegment = 3
        untracked double yweightPenaltyThreshold = 1.0
        untracked double curvePenalty = 2.0
        untracked double dXclusBoxMax = 4.0
        untracked double hitDropLimit5Hits = 0.8
        untracked double yweightPenalty = 1.5
        untracked bool BrutePruning = False
        untracked bool preClustering = True
        untracked double hitDropLimit4Hits = 0.6
        untracked bool Pruning = False
        untracked int32 maxRecHitsInCluster = 20
        untracked bool CSCDebug = False
        untracked bool onlyBestSegment = False
        untracked double hitDropLimit6Hits = 0.3333
        untracked double dYclusBoxMax = 8.0
    }
    PSet cscRecHitDParameters = { 
        untracked double XTasymmetry_ME1b = 0.0
        untracked double XTasymmetry_ME1a = 0.0
        untracked double ConstSyst_ME1a = 0.022
        untracked double ConstSyst_ME41 = 0.0
        untracked double XTasymmetry_ME41 = 0.0
        untracked double XTasymmetry_ME22 = 0.0
        untracked double XTasymmetry_ME21 = 0.0
        untracked double ConstSyst_ME21 = 0.0
        untracked double ConstSyst_ME22 = 0.0
        untracked double XTasymmetry_ME31 = 0.0
        untracked double NoiseLevel_ME13 = 8.0
        untracked double NoiseLevel_ME12 = 9.0
        untracked double NoiseLevel_ME32 = 9.0
        untracked double NoiseLevel_ME31 = 9.0
        untracked double XTasymmetry_ME32 = 0.0
        untracked double ConstSyst_ME1b = 0.007
        untracked double XTasymmetry_ME13 = 0.0
        untracked double XTasymmetry_ME12 = 0.0
        untracked double ConstSyst_ME12 = 0.0
        untracked double ConstSyst_ME13 = 0.0
        untracked double ConstSyst_ME32 = 0.0
        untracked double ConstSyst_ME31 = 0.0
        untracked double NoiseLevel_ME1a = 7.0
        untracked double NoiseLevel_ME1b = 8.0
        untracked double NoiseLevel_ME21 = 9.0
        untracked double NoiseLevel_ME22 = 9.0
        untracked double NoiseLevel_ME41 = 9.0
    }
    PSet DTCombinatorialPatternReco2DAlgo_LinearDrift_CosmicData = { 
        PSet Reco2DAlgoConfig = { 
            string recAlgo = 'DTLinearDriftAlgo'
            PSet recAlgoConfig = { 
                string tTrigMode = 'DTTTrigSyncFromDB'
                double minTime = -3.0
                double driftVelocity = 0.00543
                double hitResolution = 0.02
                untracked bool debug = False
                double maxTime = 420.0
                PSet tTrigModeConfig = { 
                    double vPropWire = 24.4
                    bool doTOFCorrection = False
                    int32 tofCorrType = 0
                    double kFactor = -1.3
                    int32 wirePropCorrType = 0
                    bool doWirePropCorrection = False
                    bool doT0Correction = True
                    untracked bool debug = False
                }

            }

            int32 segmCleanerMode = 2
            double AlphaMaxPhi = 100.0
            uint32 MaxAllowedHits = 30
            int32 nSharedHitsMax = 2
            double AlphaMaxTheta = 100.0
            untracked bool debug = False
            int32 nUnSharedHitsMin = 2
        }

        string Reco2DAlgoName = 'DTCombinatorialPatternReco'
    }
    PSet DTCombinatorialPatternReco4DAlgo_LinearDrift_CosmicData = { 
        string Reco4DAlgoName = 'DTCombinatorialPatternReco4D'
        PSet Reco4DAlgoConfig = { 
            PSet Reco2DAlgoConfig = { 
                string recAlgo = 'DTLinearDriftAlgo'
                PSet recAlgoConfig = { 
                    string tTrigMode = 'DTTTrigSyncFromDB'
                    double minTime = -3.0
                    double driftVelocity = 0.00543
                    double hitResolution = 0.02
                    untracked bool debug = False
                    double maxTime = 420.0
                    PSet tTrigModeConfig = { 
                        double vPropWire = 24.4
                        bool doTOFCorrection = False
                        int32 tofCorrType = 0
                        double kFactor = -1.3
                        int32 wirePropCorrType = 0
                        bool doWirePropCorrection = False
                        bool doT0Correction = True
                        untracked bool debug = False
                    }

                }

                int32 segmCleanerMode = 1
                double AlphaMaxPhi = 100.0
                uint32 MaxAllowedHits = 50
                int32 nSharedHitsMax = 2
                double AlphaMaxTheta = 100.0
                untracked bool debug = False
                int32 nUnSharedHitsMin = 2
            }

            string Reco2DAlgoName = 'DTCombinatorialPatternReco'
            string recAlgo = 'DTLinearDriftAlgo'
            PSet recAlgoConfig = { 
                string tTrigMode = 'DTTTrigSyncFromDB'
                double minTime = -3.0
                double driftVelocity = 0.00543
                double hitResolution = 0.02
                untracked bool debug = False
                double maxTime = 420.0
                PSet tTrigModeConfig = { 
                    double vPropWire = 24.4
                    bool doTOFCorrection = False
                    int32 tofCorrType = 0
                    double kFactor = -1.3
                    int32 wirePropCorrType = 0
                    bool doWirePropCorrection = False
                    bool doT0Correction = True
                    untracked bool debug = False
                }

            }

            untracked bool debug = False
            int32 nSharedHitsMax = 2
            int32 nUnSharedHitsMin = 2
            bool AllDTRecHits = True
            int32 segmCleanerMode = 2
        }

    }
    PSet CondDBSetup = { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

    }
    PSet SK_ME1A = { 
        double dPhiFineMax = 0.025
        untracked bool verboseInfo = True
        double chi2Max = 99999.0
        double dPhiMax = 0.025
        double wideSeg = 3.0
        int32 minLayersApart = 2
        double dRPhiFineMax = 3.0
        double dRPhiMax = 8.0
    }
    PSet CSCSegAlgoST = { 
        vstring chamber_types = {
            'ME1/a'
            , 'ME1/b'
            , 'ME1/2'
            , 'ME1/3'
            , 'ME2/1'
            , 'ME2/2'
            , 'ME3/1'
            , 'ME3/2'
            , 'ME4/1'
        }

        string algo_name = 'CSCSegAlgoST'
        vint32 parameters_per_chamber_type = {
            2
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
        }

        VPSet algo_psets = {
            { 
                untracked bool preClustering = True
                untracked int32 minHitsPerSegment = 3
                untracked double yweightPenaltyThreshold = 1.0
                untracked double curvePenalty = 2.0
                untracked double dXclusBoxMax = 4.0
                untracked double hitDropLimit5Hits = 0.8
                untracked double yweightPenalty = 1.5
                untracked bool BrutePruning = False
                untracked double curvePenaltyThreshold = 0.85
                untracked double hitDropLimit4Hits = 0.6
                untracked double hitDropLimit6Hits = 0.3333
                untracked int32 maxRecHitsInCluster = 20
                untracked bool CSCDebug = False
                untracked bool onlyBestSegment = False
                untracked bool Pruning = False
                untracked double dYclusBoxMax = 8.0
            }

            , { 
                untracked bool preClustering = True
                untracked int32 minHitsPerSegment = 3
                untracked double yweightPenaltyThreshold = 1.0
                untracked double curvePenalty = 2.0
                untracked double dXclusBoxMax = 4.0
                untracked double hitDropLimit5Hits = 0.8
                untracked double yweightPenalty = 1.5
                untracked bool BrutePruning = False
                untracked double curvePenaltyThreshold = 0.85
                untracked double hitDropLimit4Hits = 0.6
                untracked double hitDropLimit6Hits = 0.3333
                untracked int32 maxRecHitsInCluster = 24
                untracked bool CSCDebug = False
                untracked bool onlyBestSegment = False
                untracked bool Pruning = False
                untracked double dYclusBoxMax = 8.0
            }

        }

    }
    untracked PSet maxEvents = { 
        untracked int32 input = -1
    }
    PSet TC_ME1A = { 
        double dPhiFineMax = 0.013
        untracked bool verboseInfo = True
        int32 SegmentSorting = 1
        double chi2Max = 6000.0
        double dPhiMax = 0.00198
        double chi2ndfProbMin = 0.0001
        int32 minLayersApart = 2
        double dRPhiFineMax = 3.0
        double dRPhiMax = 0.6
    }
    PSet DF_ME1A = { 
        untracked bool preClustering = False
        double maxRatioResidualPrune = 3.0
        double dPhiFineMax = 0.025
        double chi2Max = 5000.0
        double dXclusBoxMax = 8.0
        double tanThetaMax = 1.2
        double tanPhiMax = 0.5
        int32 minHitsPerSegment = 3
        int32 minHitsForPreClustering = 30
        int32 minLayersApart = 2
        double dRPhiFineMax = 8.0
        int32 nHitsPerClusterIsShower = 20
        untracked bool CSCSegmentDebug = False
        untracked bool Pruning = False
        double dYclusBoxMax = 8.0
    }
    PSet CSCSegAlgoSK = { 
        vstring chamber_types = {
            'ME1/a'
            , 'ME1/b'
            , 'ME1/2'
            , 'ME1/3'
            , 'ME2/1'
            , 'ME2/2'
            , 'ME3/1'
            , 'ME3/2'
            , 'ME4/1'
        }

        string algo_name = 'CSCSegAlgoSK'
        vint32 parameters_per_chamber_type = {
            2
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
        }

        VPSet algo_psets = {
            { 
                double dPhiFineMax = 0.025
                untracked bool verboseInfo = True
                double chi2Max = 99999.0
                double dPhiMax = 0.003
                double wideSeg = 3.0
                int32 minLayersApart = 2
                double dRPhiFineMax = 8.0
                double dRPhiMax = 8.0
            }

            , { 
                double dPhiFineMax = 0.025
                untracked bool verboseInfo = True
                double chi2Max = 99999.0
                double dPhiMax = 0.025
                double wideSeg = 3.0
                int32 minLayersApart = 2
                double dRPhiFineMax = 3.0
                double dRPhiMax = 8.0
            }

        }

    }
    PSet DF_ME1234_1 = { 
        untracked bool preClustering = False
        double maxRatioResidualPrune = 3.0
        double dPhiFineMax = 0.025
        double chi2Max = 5000.0
        double dXclusBoxMax = 8.0
        double tanThetaMax = 1.2
        double tanPhiMax = 0.5
        int32 minHitsPerSegment = 3
        int32 minHitsForPreClustering = 10
        int32 minLayersApart = 2
        double dRPhiFineMax = 8.0
        int32 nHitsPerClusterIsShower = 20
        untracked bool CSCSegmentDebug = False
        untracked bool Pruning = False
        double dYclusBoxMax = 8.0
    }
    PSet DF_ME1234_2 = { 
        untracked bool preClustering = False
        double maxRatioResidualPrune = 3.0
        double dPhiFineMax = 0.025
        double chi2Max = 5000.0
        double dXclusBoxMax = 8.0
        double tanThetaMax = 2.0
        double tanPhiMax = 0.8
        int32 minHitsPerSegment = 3
        int32 minHitsForPreClustering = 10
        int32 minLayersApart = 2
        double dRPhiFineMax = 12.0
        int32 nHitsPerClusterIsShower = 20
        untracked bool CSCSegmentDebug = False
        untracked bool Pruning = False
        double dYclusBoxMax = 12.0
    }
    PSet DTLinearDriftAlgo_CosmicData = { 
        PSet recAlgoConfig = { 
            string tTrigMode = 'DTTTrigSyncFromDB'
            double minTime = -3.0
            double driftVelocity = 0.00543
            double hitResolution = 0.05
            untracked bool debug = False
            double maxTime = 420.0
            PSet tTrigModeConfig = { 
                double vPropWire = 24.4
                bool doTOFCorrection = False
                int32 tofCorrType = 0
                double kFactor = -0.7
                int32 wirePropCorrType = 0
                bool doWirePropCorrection = False
                bool doT0Correction = True
                untracked bool debug = False
            }

        }

        string recAlgo = 'DTLinearDriftAlgo'
    }
    PSet CSCSegAlgoTC = { 
        vstring chamber_types = {
            'ME1/a'
            , 'ME1/b'
            , 'ME1/2'
            , 'ME1/3'
            , 'ME2/1'
            , 'ME2/2'
            , 'ME3/1'
            , 'ME3/2'
            , 'ME4/1'
        }

        string algo_name = 'CSCSegAlgoTC'
        vint32 parameters_per_chamber_type = {
            2
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
            , 1
        }

        VPSet algo_psets = {
            { 
                double dPhiFineMax = 0.02
                untracked bool verboseInfo = True
                int32 SegmentSorting = 1
                double chi2Max = 6000.0
                double dPhiMax = 0.003
                double chi2ndfProbMin = 0.0001
                int32 minLayersApart = 2
                double dRPhiFineMax = 6.0
                double dRPhiMax = 1.2
            }

            , { 
                double dPhiFineMax = 0.013
                untracked bool verboseInfo = True
                int32 SegmentSorting = 1
                double chi2Max = 6000.0
                double dPhiMax = 0.00198
                double chi2ndfProbMin = 0.0001
                int32 minLayersApart = 2
                double dRPhiFineMax = 3.0
                double dRPhiMax = 0.6
            }

        }

    }
}

