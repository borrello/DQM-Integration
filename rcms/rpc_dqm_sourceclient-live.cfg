process DQM = {
    source = EventStreamHttpReader { 
        untracked string SelectHLTOutput = 'out4DQM'
        string sourceURL = 'http://srv-c2d05-14.cms:22100/urn:xdaq-application:lid=30'
        untracked string consumerPriority = 'normal'
        int32 max_event_size = 7000000
        untracked string consumerName = 'DQM Source'
        int32 max_queue_depth = 5
        untracked double maxEventRequestRate = 25.0
        untracked PSet SelectEvents = { 
            vstring SelectEvents = {
                '*DQM'
            }

        }

        untracked int32 headerRetryInterval = 3
    }
    module rpcRecHits = RPCRecHitProducer { 
        PSet recAlgoConfig = { 
        }

        string recAlgo = 'RPCRecHitStandardAlgo'
        InputTag rpcDigiLabel = rpcunpacker
    }
    module rpcdigidqm = RPCMonitorDigi { 
        untracked string moduleLogName = 'DigiModule'
        untracked bool dqmexpert = True
        untracked int32 DigiEventsInterval = 100
        untracked bool MergeDifferentRuns = False
        untracked bool dqmsuperexpert = False
        untracked bool DigiDQMSaveRootFile = False
        untracked bool dqmshifter = True
        untracked string RootFileNameDigi = 'RPCMonitorDigi.root'
    }
    module dqmSaver = DQMFileSaver { 
        untracked int32 saveByTime = -1
        untracked string producer = 'DQM'
        untracked int32 saveByEvent = -1
        untracked int32 forceRunNumber = -1
        untracked int32 saveByRun = 1
        untracked string workflow = ''
        untracked bool saveAtJobEnd = True
        untracked string convention = 'Online'
        untracked int32 saveByMinute = -1
        untracked string dirName = '/cms/mon/data/dropbox'
        untracked int32 saveByLumiSection = -1
    }
    module dqmEnv = DQMEventInfo { 
        untracked string subSystemFolder = 'RPC'
        untracked double eventRateWindow = 0.5
        untracked string eventInfoFolder = 'EventInfo'
    }
    module rpcunpacker = RPCUnpackingModule { 
        untracked InputTag InputLabel = source
    }
    module qTesterRPC = QualityTester { 
        untracked FileInPath qtList = 'DQM/RPCMonitorClient/test/RPCQualityTests.xml'
        untracked int32 QualityTestPrescaler = 10
    }
    module rpcEventSummary = RPCEventSummary { 
        untracked string EventInfoPath = 'RPC/EventInfo'
        untracked int32 PrescaleFactor = 100
        untracked string RPCPrefixDir = 'RPC/RecHits'
    }
    sequence rpcClient = {dqmEnv,rpcEventSummary,dqmSaver}
    sequence rpcDigi = {rpcunpacker,rpcRecHits,rpcdigidqm}
    path p = {rpcDigi,rpcClient}
    service = DQM { 
        untracked string filter = ''
        untracked double publishFrequency = 5.0
        untracked string collectorHost = 'srv-c2d05-19'
        untracked int32 collectorPort = 9090
        untracked bool debug = False
    }
    service = DQMStore { 
        untracked string referenceFileName = ''
        untracked int32 verbose = 0
    }
    es_module  = MuonNumberingInitialization { 
    }
    es_module  = RPCGeometryESModule { 
        untracked bool compatibiltyWith11 = True
    }
    es_source RPCCabling = PoolDBESSource { 
        PSet DBParameters = { 
            untracked int32 messageLevel = 0
            untracked string authenticationPath = '/nfshome0/hltpro/cmssw/cfg/'
        }

        string timetype = 'runnumber'
        VPSet toGet = {
            { 
                string record = 'RPCEMapRcd'
                string tag = 'RPCEMap_v2'
            }

        }

        string connect = 'frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_20X_RPC'
        untracked bool siteLocalConfig = False
    }
    es_source  = XMLIdealGeometryESSource { 
        vstring geomXMLFiles = {
            'Geometry/CMSCommonData/data/normal/cmsextent.xml'
            , 'Geometry/CMSCommonData/data/cms.xml'
            , 'Geometry/CMSCommonData/data/cmsMother.xml'
            , 'Geometry/CMSCommonData/data/muonBase.xml'
            , 'Geometry/CMSCommonData/data/cmsMuon.xml'
            , 'Geometry/CMSCommonData/data/beampipe.xml'
            , 'Geometry/CMSCommonData/data/cmsBeam.xml'
            , 'Geometry/CMSCommonData/data/mgnt.xml'
            , 'Geometry/CMSCommonData/data/muonMagnet.xml'
            , 'Geometry/CMSCommonData/data/cavern.xml'
            , 'Geometry/CMSCommonData/data/materials.xml'
            , 'Geometry/CMSCommonData/data/rotations.xml'
            , 'Geometry/CMSCommonData/data/muonMB.xml'
            , 'Geometry/MuonCommonData/data/mbCommon.xml'
            , 'Geometry/MuonCommonData/data/mb1.xml'
            , 'Geometry/MuonCommonData/data/mb2.xml'
            , 'Geometry/MuonCommonData/data/mb3.xml'
            , 'Geometry/MuonCommonData/data/mb4.xml'
            , 'Geometry/DTGeometryBuilder/data/dtSpecsFilter.xml'
            , 'Geometry/MuonCommonData/data/mf.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecs.xml'
            , 'Geometry/CSCGeometryBuilder/data/cscSpecsFilter.xml'
            , 'Geometry/RPCGeometryBuilder/data/RPCSpecs.xml'
            , 'Geometry/MuonCommonData/data/muonNumbering.xml'
            , 'Geometry/MuonCommonData/data/muonYoke.xml'
            , 'Geometry/MuonSimData/data/muonSens.xml'
        }

        string rootNodeName = 'cms:OCMS'
    }
    untracked PSet maxEvents = { 
        untracked int32 input = -1
    }
    PSet CondDBSetup = { 
        PSet DBParameters = { 
            untracked string authenticationPath = '.'
            untracked bool enableReadOnlySessionOnUpdateConnection = False
            untracked int32 idleConnectionCleanupPeriod = 10
            untracked int32 messageLevel = 0
            untracked bool enablePoolAutomaticCleanUp = False
            untracked bool enableConnectionSharing = True
            untracked int32 connectionRetrialTimeOut = 60
            untracked int32 connectionTimeOut = 60
            untracked int32 connectionRetrialPeriod = 10
        }

    }
}

