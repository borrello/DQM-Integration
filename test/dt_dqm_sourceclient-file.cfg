process DTDQM = {

     
      source = NewEventStreamFileReader {
        untracked vstring fileNames = {
            "file:/data1/lookarea/GlobalAug07.00017220.0001.A.storageManager.0.0000.dat"
        }

     untracked PSet maxEvents = {untracked int32 input = -1}

#    service = Tracer { untracked string indention = "$$"}
    
    service = DaqMonitorROOTBackEnd{ }

    service = DQMShipMonitoring{
      untracked uint32 period = 25
    }

    include "DQMServices/Examples/test/dqm_monitorDaemon.cfi"

    replace MonitorDaemon.UpdateDelay = 500
    replace MonitorDaemon.maxAttempts2Reconnect = 99999
    replace MonitorDaemon.NameAsSource = "DT"
    # official DQMCollector
    replace MonitorDaemon.DestinationAddress = "srv-c2d05-16"

    #### BEGIN DQM Online Environment #####
    # use include file for dqmEnv dqmSaver
    include "DQMServices/Components/test/dqm_onlineEnv.cfi"
    # put your subsystem name here:
    # DT, Ecal, Hcal, SiStrip, Pixel, RPC, CSC, L1T
    # (this goes into the filename)
    replace dqmSaver.fileName = "DT"
    replace dqmSaver.dirName       = "/cms/mon/data/dropbox"
    # (this goes into the foldername)
    replace dqmEnv.subSystemFolder = "DT"

    # optionally change fileSaving  conditions
    # replace dqmSaver.prescaleLS =   1
    # replace dqmSaver.prescaleTime = -1 # in minutes
    # replace dqmSaver.prescaleEvt =  -1
    replace dqmSaver.saveAtRunEnd = true
    # replace dqmSaver.saveAtJobEnd = false
    # will add switch to select histograms to be saved soon


    include "DQM/Integration/test/dtReco.cff"

    module dtPS1qTester = QualityTester {
	untracked string qtList = "dtPS1QT.xml"
	untracked int32 prescaleFactor = 1
    }
    
    module dtPS5qTester = QualityTester {
	untracked string qtList = "dtPS5QT.xml"
	untracked int32 prescaleFactor = 5
    }


    service = DTDataIntegrityTask {
	untracked bool debug = false
	untracked int32 timeBoxLowerBound = 0
	untracked int32 timeBoxUpperBound = 10000
    }
    
    module dataIntegrityTest = DTDataIntegrityTest {
	untracked bool debug = false
	untracked string folderRoot = ""
	untracked int32 nTimeBin = 9
	untracked int32 diagnosticPrescale = 1
	untracked bool doTimeHisto = false
    }
    
    module dtTriggerMonitor = DTLocalTriggerTask {
	untracked bool debug = false
	untracked string dcc_label = "muonDTTFDigis"
	untracked string ros_label = "dtunpacker"
	untracked string seg_label = "dt4DSegments"
	untracked int32 ResetCycle = 10000
	untracked bool process_dcc = true
	untracked bool process_seg = true
	untracked bool process_ros = false 
	untracked bool localrun = true
    }
    
    module triggerTest = DTLocalTriggerTest{
	untracked bool dataFromDDU = false
	untracked int32 diagnosticPrescale = 1
	untracked string folderRoot = ""
    }
    
    module dtDigiMonitor = DTDigiTask{
	int32 defaultTtrig = 2700
	int32 defaultTmax = 500
	bool performPerWireT0Calibration = true
	int32 inTimeHitsLowerBound = 500
	int32 inTimeHitsUpperBound = 500
	
	untracked int32 maxTDCHitsPerChamber = 30000
	untracked int32 ResetCycle = 10000
	untracked bool debug = false
	untracked bool readDB = true
	untracked bool localrun = true
	untracked int32 tdcRescale = 1
	untracked int32 timeBoxGranularity = 4
	untracked bool checkNoisyChannels = true
	untracked bool enableMonitorDaemon = false
    }

    module tTrigCalibrationTest = DTtTrigCalibrationTest{
	untracked int32 diagnosticPrescale = 5
	untracked string tTrigTestName = "tTrigOffSet"
	untracked string histoTag = "TimeBox"
	untracked string folderRoot = ""
	untracked int32 BadSLpercentual = 10
    }
	
    module dtResolutionAnalysisMonitor = DTResolutionAnalysisTask {
	untracked bool debug = false
	string recHits4DLabel = "dt4DSegments"
	string recHitLabel = "dt1DRecHits"
	untracked int32 ResetCycle = 10000
    }

    module resolutionTest = DTResolutionTest{
      	untracked bool debug = true
        untracked string folderRoot = ""
	untracked string histoTag = "hResDist"	
        #Names of the quality tests: they must match those specified in "qtList"
	untracked string resDistributionTestName = "ResidualsDistributionGaussianTest"
	untracked string meanTestName = "ResidualsMeanInRange"
	untracked string sigmaTestName = "ResidualsSigmaInRange"
	untracked int32 diagnosticPrescale = 5
    }

    module dtEfficiencyMonitor = DTEfficiencyTask {
	untracked bool debug = false
	string recHits4DLabel = "dt4DSegments"
	string recHitLabel = "dt1DRecHits"
	untracked int32 ResetCycle = 10000
    }

    module efficiencyTest = DTEfficiencyTest{
	untracked bool debug = true
	#Names of the quality tests: they must match those specified in "qtList"
	untracked string EfficiencyTestName = "EfficiencyInRange"
	untracked string UnassEfficiencyTestName = "UnassEfficiencyInRange"
        untracked string folderRoot = ""
	untracked int32 diagnosticPrescale = 5
	untracked int32 BadSLpercentual = 10
    }

    module dtChamberEfficiencyMonitor = DTChamberEfficiencyTask {
	untracked bool debug = false
	string recHits4DLabel = "dt4DSegments"
	int32 minHitsSegment = 5
	double minChi2NormSegment = 20.
	double minCloseDist = 20.
	untracked int32 ResetCycle = 10000
    }

    module chamberEfficiencyTest = DTChamberEfficiencyTest{
	untracked bool debug = true
	#Names of the quality tests: they must match those specified in "qtList"
	untracked string XEfficiencyTestName = "ChEfficiencyInRangeX"
	untracked string YEfficiencyTestName = "ChEfficiencyInRangeY"
	untracked string folderRoot = ""
	untracked int32 diagnosticPrescale = 1
    }


    module deadChannelTest = DTDeadChannelTest{
	#Names of the quality tests: they must match those specified in "qtList"
	untracked string EfficiencyTestName = "OccupancyDiffInRange"
	untracked string folderRoot = ""
	untracked int32 diagnosticPrescale = 5
    }
	
    module noiseTest = DTNoiseTest {
        untracked bool debug = true
        untracked int32 HzThreshold = 300
        untracked string meanTestName = "NoiseMeanInRange"
        untracked string folderRoot = ""
        untracked string folderTag = "Occupancies"
        untracked string histoTag = "OccupancyNoise_perCh"
	untracked int32 diagnosticPrescale = 5
    }

    module dtSegmentAnalysisMonitor = DTSegmentAnalysisTask {
	untracked bool debug = false
	string recHits4DLabel = "dt4DSegments"
	untracked bool localrun = true
	untracked bool checkNoisyChannels = true
    }

#    module dtSegmentTest = DTSegmentAnalysisTest {
#	untracked int32 diagnosticPrescale = 5
#	untracked double chi2Threshold = 5
#	untracked string histoTag = "TimeBox"
#	untracked string folderRoot = ""
#	untracked int32 BadChpercentual = 10
#	untracked int32 badSegmPercentual = 30
#    }

    path dqmmodules     = { dqmEnv & dqmSaver }
    path reco = {dtunpacker & dt1DRecHits & dt2DSegments & dt4DSegments & CosmicMuonSeed & cosmicMuons}

    path dtDQMTask      = { dtDigiMonitor & dtResolutionAnalysisMonitor & dtEfficiencyMonitor & dtChamberEfficiencyMonitor & dtTriggerMonitor & dtSegmentAnalysisMonitor }
    path dtDQMPS1Test   = { dataIntegrityTest & triggerTest & chamberEfficiencyTest & dtPS1qTester }
    path dtDQMPS5Test   = { tTrigCalibrationTest & resolutionTest & efficiencyTest & deadChannelTest & noiseTest & dtPS5qTester }

}
