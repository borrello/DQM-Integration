process DTDQM = {

     
  source = PoolSource { 
    untracked vstring fileNames = {
      'file:/data1/sistrip/gen_sim_digi_raw_1k_Cosmics_200pre9.root'
    }
  }
//   source = NewEventStreamFileReader {
//       untracked vstring fileNames = {
//           "file:/data1/lookarea/GlobalAug07.00017220.0001.A.storageManager.0.0000.dat"
//       }
//   }
replace PoolSource.fileNames = {
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/0C6B6B01-8FEF-DC11-B009-001617E30D40.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/1010C607-8FEF-DC11-AF98-001617DBD230.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/104D2601-8FEF-DC11-B7FA-001617E30F48.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/1050FE83-86EF-DC11-8576-000423D6B358.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/1AFAB307-8FEF-DC11-A82B-001617DBD5AC.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/305C8509-8FEF-DC11-8200-001617E30D4A.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/36B1D409-8FEF-DC11-B25E-001617E30CE8.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/3A4B4703-8FEF-DC11-BCA4-001617DBD316.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/3CBC9104-8FEF-DC11-ABED-000423D6B42C.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/50CDAF07-8FEF-DC11-81AB-001617E30F58.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/56435F8A-86EF-DC11-AE71-000423D9870C.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/5ABD8906-8FEF-DC11-974C-001617DBD5B2.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/5CF22D08-8FEF-DC11-A4F0-001617E30CA4.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/5E1D9D07-8FEF-DC11-AB43-001617DBD556.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/6231738B-86EF-DC11-A0A5-000423D9853C.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/66F74603-8FEF-DC11-954D-000423D9853C.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/6ACE8B06-8FEF-DC11-8B87-000423D6AF24.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/6E98B98B-86EF-DC11-936D-000423D6BA18.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/70618F05-8FEF-DC11-BF88-000423D986A8.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/7826648A-86EF-DC11-BEDB-000423D986A8.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/8867A305-8FEF-DC11-B5E2-001617DF785A.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/8C4FC907-8FEF-DC11-91B2-001617E30E28.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/A613D891-86EF-DC11-B234-000423D9939C.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/A8E07F08-8FEF-DC11-B4F7-001617DBCF1E.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/AA951F02-8FEF-DC11-B3E5-000423D6CA42.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/B2C5D905-8FEF-DC11-93B4-001617C3B614.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/C22CBC06-8FEF-DC11-A273-001617C3B78C.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/C8B5A407-8FEF-DC11-A598-001617E30D52.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/F0ABF600-8FEF-DC11-8C40-001617C3B73A.root',
'/store/data/GlobalMar08/A/000/000/000/RAW/0000/F48E0803-8FEF-DC11-B159-000423DD2F34.root'
}
    
  untracked PSet maxEvents = {untracked int32 input = 30000}


  include "DQMServices/Core/data/DQM.cfg"

  # official DQMCollector
  replace DQM.collectorHost = "localhost" //srv-c2d05-16"
  replace DQM.collectorPort = 9090

  ################# BEGIN DQM Online Environment #######################
  include "DQMServices/Components/data/DQMEnvironment.cfi"
  replace dqmSaver.convention       = "Online"
  replace dqmSaver.dirName          = "." ///cms/mon/data/dropbox"
  replace dqmSaver.producer         = "Playback"
  replace dqmEnv.subSystemFolder    = "DT"

  // replace dqmSaver.saveByLumiSection =  1
  // replace dqmSaver.saveByMinute      = -1
  // replace dqmSaver.saveByEvent       = -1
  replace dqmSaver.saveByRun         =  1
  replace dqmSaver.saveAtJobEnd      = true


  include "DQM/Integration/test/dtReco.cff"

  service = MessageLogger {
    untracked vstring destinations = { "cout" }
    untracked PSet cout             = { untracked string threshold = "WARNING" }	
  }


  module dtqTester = QualityTester {
    untracked FileInPath qtList = "DQM/DTMonitorClient/test/QualityTests.xml"
    untracked int32 prescaleFactor = 1
  }
    

  service = DTDataIntegrityTask {
    untracked bool debug = false
    untracked int32 timeBoxLowerBound = 0
    untracked int32 timeBoxUpperBound = 10000
    untracked bool doTimeHisto = true
    untracked int32 resetCycle = 1000
    untracked int32 TBhistoGranularity = 1
    untracked bool getSCInfo = true
  }
    
  module dataIntegrityTest = DTDataIntegrityTest {
    untracked bool debug = false
    untracked string folderRoot = ""
    untracked int32 nTimeBin = 9
    untracked int32 diagnosticPrescale = 1
    untracked bool doTimeHisto = false
  }
    
  module dtTriggerMonitor = DTLocalTriggerTask {
    untracked bool debug = false
    untracked string dcc_label = "muonDTTFDigis"
    untracked string ros_label = "dtunpacker"
    untracked string seg_label = "dt4DSegments"
    untracked int32 ResetCycle = 10000
    untracked bool process_dcc = true
    untracked bool process_seg = true
    untracked bool process_ros = true
    untracked bool localrun = true
  }
    
  module triggerTest = DTLocalTriggerTest{
    untracked bool dataFromDDU = true
    untracked int32 diagnosticPrescale = 1
    untracked string folderRoot = ""
  }
    
  module dtDigiMonitor = DTDigiTask{
    int32 defaultTtrig = 2700
    int32 defaultTmax = 500
    bool performPerWireT0Calibration = true
    int32 inTimeHitsLowerBound = 500
    int32 inTimeHitsUpperBound = 500
	
    untracked int32 maxTDCHitsPerChamber = 30000
    untracked int32 ResetCycle = 10000
    untracked bool debug = false
    untracked bool readDB = true
    untracked bool localrun = true
    untracked int32 tdcRescale = 1
    untracked int32 timeBoxGranularity = 4
    untracked bool checkNoisyChannels = true
    untracked bool enableMonitorDaemon = false
  }

  module dtResolutionAnalysisMonitor = DTResolutionAnalysisTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    string recHitLabel = "dt1DRecHits"
    untracked int32 ResetCycle = 10000
  }

  module resolutionTest = DTResolutionTest{
    untracked bool debug = false
    untracked string folderRoot = ""
    untracked string histoTag = "hResDist"	
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string resDistributionTestName = "ResidualsDistributionGaussianTest"
    untracked string meanTestName = "ResidualsMeanInRange"
    untracked string sigmaTestName = "ResidualsSigmaInRange"
    untracked int32 diagnosticPrescale = 1
  }

  module dtEfficiencyMonitor = DTEfficiencyTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    string recHitLabel = "dt1DRecHits"
    untracked int32 ResetCycle = 10000
  }

  module efficiencyTest = DTEfficiencyTest{
    untracked bool debug = false
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string EfficiencyTestName = "EfficiencyInRange"
    untracked string UnassEfficiencyTestName = "UnassEfficiencyInRange"
    untracked string folderRoot = ""
    untracked int32 diagnosticPrescale = 1
    untracked int32 BadSLpercentual = 10
  }

  module dtChamberEfficiencyMonitor = DTChamberEfficiencyTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    int32 minHitsSegment = 5
    double minChi2NormSegment = 20.
    double minCloseDist = 20.
    untracked int32 ResetCycle = 10000
  }

  module chamberEfficiencyTest = DTChamberEfficiencyTest{
    untracked bool debug = false
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string XEfficiencyTestName = "ChEfficiencyInRangeX"
    untracked string YEfficiencyTestName = "ChEfficiencyInRangeY"
    untracked string folderRoot = ""
    untracked int32 diagnosticPrescale = 1
  }


  module deadChannelTest = DTDeadChannelTest{
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string EfficiencyTestName = "OccupancyDiffInRange"
    untracked string folderRoot = ""
    untracked int32 diagnosticPrescale = 1
  }
	
  module noiseTest = DTNoiseTest {
    untracked bool debug = false
    untracked int32 HzThreshold = 300
    untracked string meanTestName = "NoiseMeanInRange"
    untracked string folderRoot = ""
    untracked string folderTag = "Occupancies"
    untracked string histoTag = "OccupancyNoise_perCh"
    untracked int32 diagnosticPrescale = 1
  }

  module dtSegmentAnalysisMonitor = DTSegmentAnalysisTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    untracked bool localrun = true
    untracked bool checkNoisyChannels = true
  }


  path dqmmodules     = { dqmEnv & dqmSaver }
  path reco = {dtunpacker & dt1DRecHits & dt2DSegments & dt4DSegments }

  path dtDQMTask      = { dtDigiMonitor & dtResolutionAnalysisMonitor & dtEfficiencyMonitor & dtChamberEfficiencyMonitor & dtTriggerMonitor & dtSegmentAnalysisMonitor }
  path dtDQMTest   = { dataIntegrityTest & triggerTest & chamberEfficiencyTest & resolutionTest & efficiencyTest & deadChannelTest & noiseTest & dtqTester }

}
