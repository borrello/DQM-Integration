process DTDQM = {


  source = EventStreamHttpReader{
    string sourceURL = "http://srv-c2c07-19.cms:11100/urn:xdaq-application:service=storagemanager"
    # string sourceURL = "http://cmsdisk1.cms:11100/urn:xdaq-application:service=storagemanager"
    # string sourceURL = "http://cmsmondev:50082/urn:xdaq-application:lid=29"
    int32 max_event_size = 7000000
    int32 max_queue_depth = 5
    untracked string consumerName = "DT DQM Source"
    untracked string consumerPriority = "normal"
    untracked int32 headerRetryInterval = 3
    untracked double maxEventRequestRate = 10
    untracked PSet SelectEvents = { vstring SelectEvents={"PhysicsPath"} }
    # untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
  }

  untracked PSet maxEvents = {untracked int32 input = -1}

  include "DQMServices/Core/data/DQM.cfg"

  # official DQMCollector
  replace DQM.collectorHost = "srv-c2d05-19"
  replace DQM.collectorPort = 9090

  #### BEGIN DQM Online Environment #####
  # use include file for dqmEnv dqmSaver
  include "DQMServices/Components/test/dqm_onlineEnv.cfi"
  # put your subsystem name here:
  # DT, Ecal, Hcal, SiStrip, Pixel, RPC, CSC, L1T
  # (this goes into the filename)
  replace dqmSaver.fileName = "DT"
  # replace dqmSaver.isPlayback = false
  replace dqmSaver.dirName       = "/cms/mon/data/dropbox"
  # (this goes into the foldername)
  replace dqmEnv.subSystemFolder = "DT"

  # optionally change fileSaving  conditions
  replace dqmSaver.prescaleLS =   -1
  # replace dqmSaver.prescaleTime = -1 # in minutes
  # replace dqmSaver.prescaleEvt =  -1
  replace dqmSaver.saveAtRunEnd = true
  # replace dqmSaver.saveAtJobEnd = false
  # will add switch to select histograms to be saved soon


  module dtunpacker = DTUnpackingModule {
    string dataType = "DDU"
    untracked bool fedbyType = true
    untracked bool useStandardFEDid = true
    PSet readOutParameters  = {
      untracked bool localDAQ = false
      untracked bool performDataIntegrityMonitor = true
      untracked bool debug = false
      PSet rosParameters = {
	untracked bool localDAQ = false
	untracked bool readingDDU = true
	untracked bool writeSC = true
	untracked bool readDDUIDfromDDU = true
	untracked bool performDataIntegrityMonitor = true
	untracked bool debug = false
      }
    }
  }

  # DataBase
  es_source DTMapping = PoolDBESSource {
    //string connect = "oracle://orcon/CMS_COND_ON_20X_DT" 
    //string connect = "oracle://cms_orcoff/CMS_COND_ON_20X_DT"
    //string connect = "frontier://Frontier/CMS_COND_20X_DT" 
    //string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_20X_DT"
    string connect = "frontier://(serverurl=http://frontier2.cms:8000/FrontierOnProd)(proxyurl=http://localhost:3128)(retrieve-ziplevel=0)/CMS_COND_20X_DT"
    PSet DBParameters = {
      untracked int32 messageLevel = 0
    }

    string timetype = "runnumber"
    VPSet toGet = {
      { string record = "DTReadOutMappingRcd"
	string tag = "map_GRUMM_maskFix" },
      { string record = "DTT0Rcd"
	string tag = "t0_GRUMM_hlt" }
    }
  }

  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "Geometry/DTGeometry/data/dtGeometry.cfi"
  include "Geometry/CSCGeometry/data/cscGeometry.cfi"
  include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

  module dtqTester = QualityTester {
    untracked FileInPath qtList = "DQM/DTMonitorClient/test/QualityTests.xml"
    untracked int32 prescaleFactor = 1
  }


  service = DTDataIntegrityTask {
    untracked bool debug = false
    untracked int32 timeBoxLowerBound = 0
    untracked int32 timeBoxUpperBound = 10000
    untracked bool doTimeHisto = true
    untracked int32 resetCycle = 1000
    untracked int32 TBhistoGranularity = 1
    untracked bool getSCInfo = true
  }
    
  module dataIntegrityTest = DTDataIntegrityTest {
    untracked bool debug = false
    untracked bool writeHisto = false
    untracked string folderRoot = ""
    untracked int32 nTimeBin = 9
    untracked int32 diagnosticPrescale = 1
    untracked bool doTimeHisto = false
  }
    
  module dtTriggerMonitor = DTLocalTriggerTask {
    untracked bool debug = false
    untracked string dcc_label = "muonDTTFDigis"
    untracked string ros_label = "dtunpacker"
    untracked string seg_label = "dt4DSegments"
    untracked int32 ResetCycle = 10000
    untracked bool process_dcc = true
    untracked bool process_seg = false
    untracked bool process_ros = false
    untracked bool localrun = true
  }
    
  module triggerTest = DTLocalTriggerTest{
    untracked bool dataFromDDU = true
    untracked int32 diagnosticPrescale = 1
    untracked string folderRoot = ""
  }
    
  module dtDigiMonitor = DTDigiTask{
    int32 defaultTtrig = 2700
    int32 defaultTmax = 500
    bool performPerWireT0Calibration = true
    int32 inTimeHitsLowerBound = 500
    int32 inTimeHitsUpperBound = 500
	
    untracked int32 maxTDCHitsPerChamber = 30000
    untracked int32 ResetCycle = 10000
    untracked bool debug = false
    untracked bool readDB = false
    untracked bool localrun = true
    untracked int32 tdcRescale = 1
    untracked int32 timeBoxGranularity = 4
    untracked bool checkNoisyChannels = false
    untracked bool enableMonitorDaemon = false
  }

  path dqmmodules     = { dqmEnv & dqmSaver }
  path unpacking = {dtunpacker}

  path dtDQMTask      = { dtDigiMonitor & dtTriggerMonitor }
  path dtDQMTest   = { dataIntegrityTest & triggerTest & dtqTester }

}


