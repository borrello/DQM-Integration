process DTDQM = {

     
  source = EventStreamHttpReader{
    string sourceURL = "http://srv-c2c07-19.cms:11100/urn:xdaq-application:service=storagemanager"
    # string sourceURL = "http://cmsdisk1.cms:11100/urn:xdaq-application:service=storagemanager"
    # string sourceURL = "http://cmsmondev:50082/urn:xdaq-application:lid=29"
    int32 max_event_size = 7000000
    int32 max_queue_depth = 5
    untracked string consumerName = "DT DQM Source"
    untracked string consumerPriority = "normal"
    untracked int32 headerRetryInterval = 3
    untracked double maxEventRequestRate = 10
    untracked PSet SelectEvents = { vstring SelectEvents={"PhysicsPath"} }
    # untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
  }

  untracked PSet maxEvents = {untracked int32 input = -1}

  include "DQMServices/Core/data/DQM.cfg"

  # official DQMCollector
  replace DQM.collectorHost = "srv-c2d05-19"
  replace DQM.collectorPort = 9090

  #### BEGIN DQM Online Environment #####
  # use include file for dqmEnv dqmSaver
  include "DQMServices/Components/test/dqm_onlineEnv.cfi"
  # put your subsystem name here:
  # DT, Ecal, Hcal, SiStrip, Pixel, RPC, CSC, L1T
  # (this goes into the filename)
  replace dqmSaver.fileName = "DT"
  # replace dqmSaver.isPlayback = false
  replace dqmSaver.dirName       = "/cms/mon/data/dropbox"
  # (this goes into the foldername)
  replace dqmEnv.subSystemFolder = "DT"

  # optionally change fileSaving  conditions
  replace dqmSaver.prescaleLS =   -1
  # replace dqmSaver.prescaleTime = -1 # in minutes
  # replace dqmSaver.prescaleEvt =  -1
  replace dqmSaver.saveAtRunEnd = true
  # replace dqmSaver.saveAtJobEnd = false
  # will add switch to select histograms to be saved soon


  include "DQM/Integration/test/dtReco.cff"

  module dtqTester = QualityTester {
    untracked FileInPath qtList = "DQM/DTMonitorClient/test/QualityTests.xml"
    untracked int32 prescaleFactor = 1
  }


  service = DTDataIntegrityTask {
    untracked bool debug = false
    untracked int32 timeBoxLowerBound = 0
    untracked int32 timeBoxUpperBound = 10000
    untracked bool doTimeHisto = true
    untracked int32 resetCycle = 1000
    untracked int32 TBhistoGranularity = 1
    untracked bool getSCInfo = true
  }
    
  module dataIntegrityTest = DTDataIntegrityTest {
    untracked bool debug = false
    untracked bool writeHisto = false
    untracked string folderRoot = ""
    untracked int32 nTimeBin = 9
    untracked int32 diagnosticPrescale = 1
    untracked bool doTimeHisto = false
  }
    
  module dtTriggerMonitor = DTLocalTriggerTask {
    untracked bool debug = false
    untracked string dcc_label = "muonDTTFDigis"
    untracked string ros_label = "dtunpacker"
    untracked string seg_label = "dt4DSegments"
    untracked int32 ResetCycle = 10000
    untracked bool process_dcc = true
    untracked bool process_seg = true
    untracked bool process_ros = false
    untracked bool localrun = true
  }
    
  module triggerTest = DTLocalTriggerTest{
    untracked bool dataFromDDU = true
    untracked int32 diagnosticPrescale = 1
    untracked string folderRoot = ""
  }
    
  module dtDigiMonitor = DTDigiTask{
    int32 defaultTtrig = 2700
    int32 defaultTmax = 500
    bool performPerWireT0Calibration = true
    int32 inTimeHitsLowerBound = 500
    int32 inTimeHitsUpperBound = 500
	
    untracked int32 maxTDCHitsPerChamber = 30000
    untracked int32 ResetCycle = 10000
    untracked bool debug = false
    untracked bool readDB = false
    untracked bool localrun = true
    untracked int32 tdcRescale = 1
    untracked int32 timeBoxGranularity = 4
    untracked bool checkNoisyChannels = true
    untracked bool enableMonitorDaemon = false
  }
	
  module dtResolutionAnalysisMonitor = DTResolutionAnalysisTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    string recHitLabel = "dt1DRecHits"
    untracked int32 ResetCycle = 10000
  }

  module resolutionTest = DTResolutionTest{
    untracked bool debug = false
    untracked string folderRoot = ""
    untracked string histoTag = "hResDist"	
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string resDistributionTestName = "ResidualsDistributionGaussianTest"
    untracked string meanTestName = "ResidualsMeanInRange"
    untracked string sigmaTestName = "ResidualsSigmaInRange"
    untracked int32 diagnosticPrescale = 1
  }

  module dtEfficiencyMonitor = DTEfficiencyTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    string recHitLabel = "dt1DRecHits"
    untracked int32 ResetCycle = 10000
  }

  module efficiencyTest = DTEfficiencyTest{
    untracked bool debug = false
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string EfficiencyTestName = "EfficiencyInRange"
    untracked string UnassEfficiencyTestName = "UnassEfficiencyInRange"
    untracked string folderRoot = ""
    untracked int32 diagnosticPrescale = 1
    untracked int32 BadSLpercentual = 10
  }

  module dtChamberEfficiencyMonitor = DTChamberEfficiencyTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    int32 minHitsSegment = 5
    double minChi2NormSegment = 20.
    double minCloseDist = 20.
    untracked int32 ResetCycle = 10000
  }

  module chamberEfficiencyTest = DTChamberEfficiencyTest{
    untracked bool debug = false
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string XEfficiencyTestName = "ChEfficiencyInRangeX"
    untracked string YEfficiencyTestName = "ChEfficiencyInRangeY"
    untracked string folderRoot = ""
    untracked int32 diagnosticPrescale = 1
  }


  module deadChannelTest = DTDeadChannelTest{
    #Names of the quality tests: they must match those specified in "qtList"
    untracked string EfficiencyTestName = "OccupancyDiffInRange"
    untracked string folderRoot = ""
    untracked int32 diagnosticPrescale = 1
  }
	
  module noiseTest = DTNoiseTest {
    untracked bool debug = false
    untracked int32 HzThreshold = 300
    untracked string meanTestName = "NoiseMeanInRange"
    untracked string folderRoot = ""
    untracked string folderTag = "Occupancies"
    untracked string histoTag = "OccupancyNoise_perCh"
    untracked int32 diagnosticPrescale = 1
  }

  module dtSegmentAnalysisMonitor = DTSegmentAnalysisTask {
    untracked bool debug = false
    string recHits4DLabel = "dt4DSegments"
    untracked bool localrun = true
    untracked bool checkNoisyChannels = true
  }

  path dqmmodules     = { dqmEnv & dqmSaver }
  path reco = {dtunpacker & dt1DRecHits & dt2DSegments & dt4DSegments}

  path dtDQMTask      = { dtDigiMonitor & dtResolutionAnalysisMonitor & dtEfficiencyMonitor & dtChamberEfficiencyMonitor & dtTriggerMonitor & dtSegmentAnalysisMonitor }
  path dtDQMTest   = { dataIntegrityTest & triggerTest & chamberEfficiencyTest & resolutionTest & efficiencyTest & deadChannelTest & noiseTest & dtqTester }

}
