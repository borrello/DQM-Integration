process SIPIXELDQMLIVE = {

  # MessageLogger service
    service = MessageLogger {
        untracked vstring destinations = { "cout" }
        untracked PSet cout = { untracked string threshold = "ERROR" }
        untracked vstring debugModules   = { "siPixelDigis",
	                                     "SiPixelRawDataErrorSource",
					     "SiPixelDigiSource",
                                             "siPixelEDAClient"}
    }

    #----------------------------
    #### Event Source
    #-----------------------------
    #include "DQM/Integration/test/inputsource.cfi"
    #replace EventStreamHttpReader.consumerName = "Pixel DQM Consumer"
    source = PoolSource
    {
      untracked vstring fileNames	    = 
      #{'file:digis.root'}
      #{"file:/afs/cern.ch/user/a/andrewdc/public/digis.root"}
      #{'file:/afs/cern.ch/user/m/merkelp/scratch0/PhysicsData_511_digis.root'}
      {'rfio:/castor/cern.ch/user/c/chiochia/cmssw/Muon_FullValidation_150pre3.root'}
      #{'rfio:/castor/cern.ch/user/g/genta/Validation/CMSSW_2_1_X_2008-04-17-0200/Muon_FullValidation.root'}
      #{'rfio:/castor/cern.ch/user/c/chiochia/cmssw/QCD_210_FEVTSIM_2008_04_17.root'}
      #{'rfio:/castor/cern.ch/user/c/chiochia/cmssw/mu_pt10_210_PixelOnly.root'}
      #{'rfio:/castor/cern.ch/cms/store/data/GlobalMar08/A/000/000/000/RAW/0000/045A3B89-9BEF-DC11-AC9E-000423D6CAF2.root'}
      #{'rfio:/castor/cern.ch/cms/store/data/CRUZET2/Cosmics/RAW/v1/000/046/873/04D28BCA-1F39-DD11-A6C1-001617C3B65A.root'}
     untracked uint32  debugVebosity = 1
      untracked bool	debugFlag     = true
    }
    untracked PSet maxEvents = {untracked int32 input = -1}

    #----------------------------
    #### DQM Environment
    #-----------------------------
    include "DQMServices/Core/data/DQM.cfg"
    # replace DQMStore.referenceFileName = "/home/dqmdevlocal/reference/pixel_reference.root"

    include "DQMServices/Components/data/DQMEnvironment.cfi"

    #----------------------------
    #### DQM Live Environment
    #-----------------------------
    include "DQM/Integration/test/environment.cfi"
    replace dqmEnv.subSystemFolder    = "Pixel"
    #-----------------------------



  #=========================================================================================
    service = AdaptorConfig {}
  #=========================================================================================

  ### Magnetic field: force mag field to be 0.0 tesla
  #include "Configuration/GlobalRuns/data/ForceZeroTeslaField.cff"
  include "MagneticField/Engine/data/uniformMagneticField.cfi"
  replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
  es_prefer = UniformMagneticFieldESProducer{}



  # Geometry and Cabling
  include "Configuration/StandardSequences/data/FrontierConditions_GlobalTag.cff"
  replace GlobalTag.globaltag = "CRUZET2_V7HLT::All"
  replace GlobalTag.connect = "frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_20X_GLOBALTAG"
  es_prefer GlobalTag = PoolDBESSource {}
    
  # es_source siPixelCond = poolDBESSource from "CalibTracker/Configuration/data/Common/PoolDBESSource.cfi"
  # replace siPixelCond.toGet = {
  #      { string record = "SiPixelFedCablingMapRcd"  string tag = "SiPixelFedCablingMap_v13"} ,
  #      { string record = "SiPixelLorentzAngleRcd"     string tag = "SiPixelLorentzAngle_0T"} ,
  #      { string record = "SiPixelGainCalibrationOfflineRcd" string tag = "SiPixelGainCalibration_TBuffer_const"},
  #      { string record = "SiPixelGainCalibrationForHLTRcd" string tag = "SiPixelGainCalibration_TBuffer_hlt_const"}
  #  }
    #for oracle access in p5 uncomment
  #  replace siPixelCond.connect="oracle://cms_orcon_prod/CMS_COND_20X_PIXEL"
  #  replace siPixelCond.DBParameters.authenticationPath="/nfshome0/xiezhen/conddb"




  #include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  #include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
  #include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  
  # RawToDigi:
    include "EventFilter/SiPixelRawToDigi/data/SiPixelRawToDigi.cfi"
    replace siPixelDigis.InputLabel = "source"
    replace siPixelDigis.IncludeErrors = true
	
	
	
  # SiPixel DQM Modules:
    # SiPixelMonitorRawData
    	include "DQM/SiPixelMonitorRawData/data/SiPixelMonitorRawData.cfi"
        replace SiPixelRawDataErrorSource.saveFile = false
	replace SiPixelRawDataErrorSource.isPIB = false
	replace SiPixelRawDataErrorSource.slowDown = false

    # SiPixelMonitorDigi
    	include "DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi"
        replace SiPixelDigiSource.saveFile = false
	replace SiPixelDigiSource.isPIB = false
	replace SiPixelDigiSource.slowDown = false
	
  ################ The Client (SiPixelEDAClient) ################
   module sipixelEDAClient = SiPixelEDAClient {
     untracked int32  SummaryCreationFrequency = 1
     untracked int32  StaticUpdateFrequency = 1
   }
  # End Modules Configuration

    module qTester = QualityTester {
      untracked FileInPath qtList = "DQM/SiPixelMonitorClient/test/sipixel_qualitytest_config.xml"
      untracked bool getQualityTestsFromFile = true
      untracked int32 QualityTestPrescaler = 1
    }
  #=========================================================================================

   service = ModuleWebRegistry { }
   #service = LockService { untracked vstring labels = { "source" } }
   
######################## Scheduling
    sequence DIGIreco = {
      siPixelDigis
    }
    sequence RAWmonitor = {
      SiPixelRawDataErrorSource
    }
    sequence DIGImonitor = {
      SiPixelDigiSource
    }
    sequence DQMmodules = {
#      qTester,
      dqmEnv,
      dqmSaver
    }
    
  # End Schedule
  #=========================================================================================
  path p = {
            DIGIreco,
	    DQMmodules,
	    RAWmonitor,
	    DIGImonitor,
	    sipixelEDAClient
	   }

}
