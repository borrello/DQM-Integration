process MONITOR = {    

    block CondDBSetup = {
	PSet DBParameters = {
	    untracked string authenticationPath="."
	    untracked int32 messageLevel=0
	    untracked bool loadBlobStreamer = false
	    untracked int32 connectionTimeOut = 600
	    untracked int32 connectionRetrialPeriod = 30
	    untracked int32 connectionRetrialTimeOut = 180
	    untracked bool enableConnectionSharing = false
	    untracked bool enableReadOnlySessionOnUpdateConnection = false
	    untracked bool enablePoolAutomaticCleanUp = false
	} 
    }

    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

    source = PoolSource {
	untracked vstring fileNames = {
	    #'file:/home/iguana/GlobalRun/GlobalJun07.00012411.0001.Express.test.0.0000.root'
	    'file:/data1/lookarea/GlobalSep07.00020561.0001.A.storageManager.0.0000.root'
	}
    }

#      source = NewEventStreamFileReader {
#   	untracked vstring fileNames = {
#   	    "file:/data1/lookarea/GlobalAug07.00017153.0001.A.storageManager.0.0000.dat",
#   	    "file:/data1/lookarea/GlobalAug07.00017153.0002.A.storageManager.0.0000.dat",
#   	    "file:/data1/lookarea/GlobalAug07.00017153.0003.A.storageManager.0.0000.dat"
#   	}
#      }


    module dtunpacker = DTUnpackingModule {
	untracked int32 eventScanning = 1000
	string dataType = "DDU"
	untracked bool debugMode = false
	untracked bool performDataIntegrityMonitor = true
	untracked bool isRaw = false
	untracked bool writeSC = true
	untracked bool globalDAQ = true
	untracked int32 dduID = 770
    }

    
    module muonDTTFDigis = DTTFFEDReader {}
    
    service = DaqMonitorROOTBackEnd{ }
    
    service = MonitorDaemon{
	# if true, will automatically start DQM thread in background
	# (default: false)
	untracked bool AutoInstantiate = true
	untracked string DestinationAddress = "srv-c2d05-19.cms"
	untracked int32 SendPort = 9090
	untracked int32 UpdateDelay = 5000
	untracked string NameAsSource = "DT"
    }
    
    service = DQMShipMonitoring{
	// event-period for shipping monitoring to collector (default: 25)
	untracked uint32 period = 5
    }
    
    
    service = MessageLogger {
	untracked vstring destinations = { "cout" }
	untracked vstring debugModules = { "*" }
	untracked PSet cout = {
	    untracked string threshold = "WARNING"
	    untracked bool noLineBreaks = true
	    untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }

    es_source DTMapping = PoolDBESSource {
	string timetype = "runnumber"
	string connect = "oracle://orcon/CMS_COND_DT"
	untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"
	untracked bool siteLocalConfig = false
	string record = "DTReadOutMappingRcd"
	string tag = "DTChannelsMap"
	PSet DBParameters = {
	    untracked string authenticationPath="."
	    untracked int32 messageLevel=0
	    untracked bool loadBlobStreamer = false
	    untracked int32 connectionTimeOut = 600
	    untracked int32 connectionRetrialPeriod = 30
	    untracked int32 connectionRetrialTimeOut = 180
	    untracked bool enableConnectionSharing = false
	    untracked bool enableReadOnlySessionOnUpdateConnection = false
	    untracked bool enablePoolAutomaticCleanUp = false
	} 
	VPSet toGet = {
	    { string record = "DTReadOutMappingRcd"
		string tag = "GRESDTChannelsMap2" },
	    { string record = "DTT0Rcd"
		string tag = "t0_SecTestYB0" },
	    { string record = "DTTtrigRcd"
		string tag = "GREStTrig" },
	    { string record = "DTStatusFlagRcd"
		string tag = "GRESnoise" }
	}
    }

    include "RecoLocalMuon/DTRecHit/data/dt1DRecHits_LinearDrift_CosmicData.cfi"
    replace DTLinearDriftAlgo_CosmicData.recAlgoConfig.hitResolution = 0.05
    replace DTLinearDriftAlgo_CosmicData.recAlgoConfig.tTrigModeConfig.kFactor = -1.00
    include "RecoLocalMuon/DTSegment/data/dt2DSegments_CombPatternReco2D_LinearDrift_CosmicData.cfi"
    replace DTCombinatorialPatternReco2DAlgo_LinearDrift_CosmicData.Reco2DAlgoConfig.segmCleanerMode = 2
    replace DTCombinatorialPatternReco2DAlgo_LinearDrift_CosmicData.Reco2DAlgoConfig.MaxAllowedHits = 30
    include "RecoLocalMuon/DTSegment/data/dt4DSegments_CombPatternReco4D_LinearDrift_CosmicData.cfi"
    replace DTCombinatorialPatternReco4DAlgo_LinearDrift_CosmicData.Reco4DAlgoConfig.segmCleanerMode = 2


    # DQM Sources
    include "DQM/DTMonitorModule/data/dtDataIntegrityTask.cfi"
    
    include "DQM/DTMonitorModule/data/dtDigiTask.cfi"
    include "DQM/DTMonitorModule/data/dtTriggerTask.cfi"
    replace triggerMonitor.dcc_label = muonDTTFDigis
    include "DQM/DTMonitorModule/data/dtSegmentTask.cfi"
    include "DQM/DTMonitorModule/data/dtResolutionTask.cfi"
    include "DQM/DTMonitorModule/data/dtEfficiencyTask.cfi"
    include "DQM/DTMonitorModule/data/dtChamberEfficiencyTask.cfi"
    
    
    module qTester = QualityTester {}


    # DQM Clients
    include "DQM/DTMonitorClient/data/dttTrigCalibrationTest.cfi"
    include "DQM/DTMonitorClient/data/dtResolutionTest.cfi"
    include "DQM/DTMonitorClient/data/dtEfficiencyTest.cfi"
    include "DQM/DTMonitorClient/data/dtChamberEfficiencyTest.cfi"
    include "DQM/DTMonitorClient/data/dtDataIntegrityTest.cfi"    
    include "DQM/DTMonitorClient/data/dtDeadChannelTest.cfi"
    include "DQM/DTMonitorClient/data/dtNoiseTest.cfi"
    include "DQM/DTMonitorClient/data/dtLocalTriggerTest.cfi"
    
    
    
    sequence reco = {
	dtunpacker & 
	dt1DRecHits & 
	dt2DSegments & 
	dt4DSegments 
    }

    sequence sources = {
	digiMonitor & 
	#triggerMonitor & 
	dtSegmentAnalysisMonitor & 
	dtResolutionAnalysisMonitor & 
	dtEfficiencyMonitor & 
	dtChamberEfficiencyMonitor
    }

    sequence clients = {
	qTester & 
	dataIntegrityTest & 
	tTrigCalibrationTest & 
	resolutionTest & 
	efficiencyTest & 
	chamberEfficiencyTest & 
	noiseTest & 
	triggerTest
    }

    path p = {reco & sources }#& clients}
    
}


