process SIPIXELDQM = {

  #=========================================================================================
  # Sources
    untracked PSet maxEvents = {untracked int32 input = -1}
    // SM Event Source
    source = EventStreamHttpReader
    {
        string sourceURL = "http://cmsdisk1.cms:11100/urn:xdaq-application:service=storagemanager"
        int32 max_event_size = 7000000
        int32 max_queue_depth = 5

        untracked string consumerName = "Pixel DQM Consumer"
        untracked string consumerPriority = "normal"
        untracked int32 headerRetryInterval = 3  // seconds
        untracked double maxEventRequestRate = 2.5  // hertz
        untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
    }

  # End Sources
  #=========================================================================================

  # MessageLogger service
 	 include "FWCore/MessageLogger/data/MessageLogger.cfi"

  #=========================================================================================
    service = AdaptorConfig {}
  #=========================================================================================
  # Cabling
        include "CondCore/DBCommon/data/CondDBCommon.cfi"
        replace CondDBCommon.connect = "sqlite_file:cabling.db"
        replace CondDBCommon.timetype = "runnumber"
        replace CondDBCommon.DBParameters.messageLevel = 1
        replace CondDBCommon.DBParameters.authenticationPath="."
        es_source = PoolDBESSource {
          using CondDBCommon
          VPSet toGet={{string record="SiPixelFedCablingMapRcd" string tag="SiPixelFedCablingMap_v9"}}
        }
  
  #=========================================================================================
  # Geometry
	# Tracker SimGeometryXML
  	include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
  	# include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  	# include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
  	# include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"

  	# Tracker Geometry Builder
  	include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  	# Tracker Numbering Builder
  	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

   	# magn. field
   	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # End Geometry
  #=========================================================================================

  # Reco Modules:
        include "EventFilter/SiPixelRawToDigi/data/SiPixelRawToDigi.cfi"
        replace siPixelDigis.InputLabel = "source"
        #replace siPixelDigis.InputLabel = "siPixelRawData"
        replace siPixelDigis.Timing = true 
        replace siPixelDigis.IncludeErrors = true
        #replace siPixelDigis.CheckPixelOrder = true

  #=========================================================================================
  # SiPixel DQM Modules:
    # SiPixelMonitorRawData
    	include "DQM/SiPixelMonitorRawData/data/SiPixelMonitorRawData.cfi"

    # SiPixelMonitorDigi
    	include "DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi"

  ################ The Client (SiPixelEDAClient) ################
   module sipixelEDAClient = SiPixelEDAClient {
     untracked int32  CollationtionFlag = 0
     untracked int32  FileSaveFrequency = 50
     untracked int32  StaticUpdateFrequency = 10
     untracked string OutputFilePath = "."     
   }
  # End Modules Configuration
  #=========================================================================================
  
  # DQM services
  	service = DaqMonitorROOTBackEnd{}
	service = DQMShipMonitoring{ untracked uint32 period = 1000 }

    # DQM Online Environment
 #### PUT THIS MODULE INTO YOUR PATH FOR OPERATION AT P5
    module dqmEnv = DQMEventInfo {
	# define folder to store event info (default: EventInfo)
	untracked string eventInfoFolder = "EventInfo"
        untracked string subSystemFolder = "Pixel"
    }
    
    # DQM Online File saver module
 #### PUT THIS MODULE INTO YOUR PATH FOR OPERATION AT P5
    module dqmSaver = DQMFileSaver {
        # subsystem name (appears in filename)
        # default is: filename is taken from SourceName
        # FIXME         (toplevel of me-dir-tree) fixme
        # put your Subsystem Name here:
        # DT, Ecal, Hcal, SiStrip, Pixel, RPC, CSC, L1T
        untracked string fileName = "Pixel"
        # directory Name (default is ".")
        # for online use "/data1/dropbox"
        untracked string dirName = "/data1/dropbox"
        //# FIXME should be implemented in dbe::save first
        //untracked string environment = "Online"
        # Save file every N lumi sections (-1: disabled)
        # untracked int32 prescaleLS = 1
        # Save file every N events (-1: disabled)
        untracked int32 prescaleEvt = -1
        # Save file every N minutes (-1: disabled)
        untracked int32 prescaleTime = -1
        # Save at end of run, runnumber in filename (default: true)
        untracked bool saveAtRunEnd = true
        # Save at end of job, no runnumber in filename (default: false)
        untracked bool saveAtJobEnd = false
    }

  #=========================================================================================

  # tracer service - very verbose - useful for debugging only
#  service = Tracer { untracked string indention = "$$"}

   service = ModuleWebRegistry { }

   service = LockService { untracked vstring labels = { "source" } }

######################## Scheduling
    sequence RAWmonitor = {
      siPixelDigis,
      SiPixelRawDataErrorSource
    }
    sequence DIGImonitor = {
      SiPixelDigiSource
    }
    sequence DQMmodules = {
      dqmEnv,
      dqmSaver
    }
    
  # End Schedule
  #=========================================================================================
  path p = {RAWmonitor,DIGImonitor,sipixelEDAClient,DQMmodules}

}
