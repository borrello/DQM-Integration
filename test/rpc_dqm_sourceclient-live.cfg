process DQM={
    
    untracked PSet maxEvents = {untracked int32 input = -1}
   	source = EventStreamHttpReader{
       # string sourceURL = "http://srv-c2c07-19.cms:11100/urn:xdaq-application:service=storagemanager"
	string sourceURL = "http://srv-c2d05-14.cms:22100/urn:xdaq-application:lid=30"
	#       string sourceURL = "http://cmsmondev:50082/urn:xdaq-application:lid=29"
	#       string sourceURL = "http://cmsdisk1.cms:11100/urn:xdaq-application:service=storagemanager"
       int32 max_event_size = 7000000
       int32 max_queue_depth = 5
       untracked string consumerName = "RPC DQM Source"
       untracked string consumerPriority = "normal"
       untracked int32 headerRetryInterval = 3
       untracked double maxEventRequestRate = 10
       untracked PSet SelectEvents = { vstring SelectEvents={"*DQM"} }
        #       untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
     }

    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

###############    Raw To Digi:   #########################
    include "CondCore/DBCommon/data/CondDBSetup.cfi"
    es_source RPCCabling = PoolDBESSource {
    #  using CondDBSetup
      string timetype = "runnumber"
      string connect ="frontier://(proxyurl=http://localhost:3128)(serverurl=http://frontier1.cms:8000/FrontierOnProd)(serverurl=http://frontier2.cms:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_20X_RPC"
      PSet DBParameters = {
	  untracked int32 messageLevel = 0
	  untracked string authenticationPath = "/nfshome0/hltpro/cmssw/cfg/"
      }
      VPSet toGet = {
	{ string record = "RPCEMapRcd" string tag = "RPCEMap_v2" }
      }
      untracked bool siteLocalConfig = false
    }

#################    Data Quality Monitoring:   #########################
   	include "DQMServices/Core/data/DQM.cfg"
	replace DQMStore.verbose = 0
	replace DQM.collectorHost = "srv-c2d05-19"
	

################# BEGIN DQM Online Environment #######################
   include "DQMServices/Components/data/DQMEnvironment.cfi"
   replace dqmSaver.convention       = "Online"
   replace dqmSaver.dirName          = "/cms/mon/data/dropbox"
   replace dqmSaver.producer         = "DQM"
   replace dqmEnv.subSystemFolder    = "RPC"

   // replace dqmSaver.saveByLumiSection =  1
   // replace dqmSaver.saveByMinute      = -1
   // replace dqmSaver.saveByEvent       = -1
   replace dqmSaver.saveByRun         =  1
   replace dqmSaver.saveAtJobEnd      = true

   module rpcunpacker = RPCUnpackingModule{
         untracked InputTag InputLabel = source
         }

#################### RPC DQM ##############################
    include "DQM/RPCMonitorDigi/data/RPCDigiMonitoring.cfi"    
    replace rpcdigidqm.DigiEventsInterval = 100 
    replace rpcdigidqm.dqmshifter =true   	    	
    replace rpcdigidqm.dqmexpert =true		
    replace rpcdigidqm.dqmsuperexpert =false 
    replace rpcdigidqm.DigiDQMSaveRootFile = false


#################   QTest module  #########################
# run the quality tests as defined in QualityTests.xml    
module qTesterRPC = QualityTester {
	untracked int32 QualityTestPrescaler = 10
	untracked FileInPath qtList = "DQM/RPCMonitorClient/test/RPCQualityTests.xml"
}
	


################### RPC event Summary #######################
include "DQM/RPCMonitorClient/data/RPCEventSummary.cfi"
replace rpcEventSummary.EventInfoPath = "RPC/EventInfo"
replace rpcEventSummary.RPCPrefixDir = "RPC/RecHits"


###################  Logger    ##########################    

    service = MessageLogger {
	untracked vstring destinations = { 
	    "detailedInfo" , "critical" , "cout"
	}
	untracked vstring debugModules = { "*" }
	untracked PSet critical = {untracked string threshold = "ERROR"   }
	untracked PSet detailedInfo = {untracked string threshold = "INFO"    } 
	untracked PSet cout = {
          untracked string threshold = "WARNING"
          untracked bool noLineBreaks = true
	  untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }	


sequence rpcDigi ={rpcRecHits,rpcdigidqm }
sequence rpcClient ={qTesterRPC,dqmEnv,rpcEventSummary,dqmSaver}

     path p ={rpcDigi, rpcClient}

} 
