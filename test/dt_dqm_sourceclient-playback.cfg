process MONITOR = {    

    block CondDBSetup = {
	PSet DBParameters = {
	    untracked string authenticationPath="."
	    untracked int32 messageLevel=0
	    untracked bool loadBlobStreamer = false
	    untracked int32 connectionTimeOut = 600
	    untracked int32 connectionRetrialPeriod = 30
	    untracked int32 connectionRetrialTimeOut = 180
	    untracked bool enableConnectionSharing = false
	    untracked bool enableReadOnlySessionOnUpdateConnection = false
	    untracked bool enablePoolAutomaticCleanUp = false
	} 
    }

    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

#     source = NewEventStreamFileReader {
#  	untracked vstring fileNames = {
#  	    "file:/data1/lookarea/GlobalAug07.00017153.0001.A.storageManager.0.0000.dat",
#  	    "file:/data1/lookarea/GlobalAug07.00017153.0002.A.storageManager.0.0000.dat",
#  	    "file:/data1/lookarea/GlobalAug07.00017153.0003.A.storageManager.0.0000.dat",
#  	}
#     }

     source = EventStreamHttpReader{
       string sourceURL = "http://cmsmon:50082/urn:xdaq-application:lid=29"
       int32 max_event_size = 7000000
       int32 max_queue_depth = 5
       untracked string consumerName = "DT DQM Source"
       untracked string consumerPriority = "normal"
       untracked int32 headerRetryInterval = 3
       untracked double maxEventRequestRate = 2.5
       untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
     }

#      source = EventStreamHttpReader {
#  	string sourceURL = "http://cmsdisk1.cms:48500/urn:xdaq-application:service=storagemanager"
#  	int32 max_event_size = 7000000
#  	int32 max_queue_depth = 5
#  	untracked string consumerName = "DQM Standalone Consumer"
#  	untracked string consumerPriority = "normal"
#  	untracked int32 headerRetryInterval = 3
#  	untracked double maxEventRequestRate = 10
#  	untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
#      }


    module dtunpacker = DTUnpackingModule {
	untracked int32 eventScanning = 1000
	string dataType = "DDU"
	untracked bool debugMode = false
	untracked bool performDataIntegrityMonitor = true
	untracked bool isRaw = false
	untracked bool writeSC = true
	untracked bool globalDAQ = true
	untracked int32 dduID = 770
    }

    es_source roMapping = PoolDBESSource {
        using CondDBSetup
        string connect = "oracle://orcon/CMS_COND_DT"
        untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"
        string timetype = "runnumber"
        VPSet toGet = {{
		string record = "DTReadOutMappingRcd"
		string tag = "DTChannelsMap" 
            }}
    }
    
    module muonDTTFDigis = DTTFFEDReader {}
    
    service = DaqMonitorROOTBackEnd{ }
    
    service = MonitorDaemon{
	# if true, will automatically start DQM thread in background
	# (default: false)
	untracked bool AutoInstantiate = true
	untracked string DestinationAddress = "srv-c2d05-19.cms"
	untracked int32 SendPort = 9090
	untracked int32 UpdateDelay = 5000
	untracked string NameAsSource = "DT"
    }
    
    service = DQMShipMonitoring{
	// event-period for shipping monitoring to collector (default: 25)
	untracked uint32 period = 5
    }
    
    
    service = MessageLogger {
	untracked vstring destinations = { "cout" }
	untracked vstring debugModules = { "*" }
	untracked PSet cout = {
	    untracked string threshold = "WARNING"
	    untracked bool noLineBreaks = true
	    untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }

    # DT DQM modules
    service = DTDataIntegrityTask{
	untracked bool debug = false
	untracked int32 TBhistoGranularity = 1 
	untracked int32 timeBoxLowerBound = 0
	untracked int32 timeBoxUpperBound = 10000
	untracked string outputFile = "/data1/dropbox/GREA-DT.root"
	untracked int32 saveResultsFrequency = 100000
	untracked bool writeHisto = true
	untracked bool getSCInfo = true
    }
    
    module digiMonitor = DTDigiTask{
	untracked bool debug = true
	untracked string outputFile = "/data1/dropbox/GREA-DT.root"
	untracked bool readDB = false
	untracked bool localrun = true
	untracked bool localNoise = false
	int32 defaultTtrig = 2700
	int32 defaultTmax = 500
	bool performPerWireT0Calibration = false
	untracked int32 tdcRescale = 1
	untracked int32 timeBoxGranularity = 4
	int32 inTimeHitsLowerBound = 500
	int32 inTimeHitsUpperBound = 500
	untracked bool checkNoisyChannels = false
	untracked bool writeHisto = true
	untracked int32 maxTDCHits = 150
    }
    
    module triggerMonitor = DTLocalTriggerTask {
	untracked bool debug = true
	untracked string dcc_label = "muonDTTFDigis"
	untracked string ros_label = "dtunpacker"
	untracked string seg_label = "dt4DSegments"
	untracked bool process_dcc = true
	untracked bool process_seg = false
	untracked bool process_ros = true 
	untracked bool localrun = true
	untracked bool writeHisto = true
    }
    
    path p = {muonDTTFDigis &  dtunpacker & digiMonitor & triggerMonitor }
    
}


