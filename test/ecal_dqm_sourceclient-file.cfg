process ECALDQM = { 

#include "EventFilter/EcalTBRawToDigi/data/EcalUnpackerData.cfi"

include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerMapping.cfi"
include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerData.cfi"

#     replace ecalEBunpacker.FEDs = {643}
#     replace ecalEBunpacker.orderedFedList = {643}
#     replace ecalEBunpacker.orderedDCCIdList = {41}

     module ecalUncalibHit2 = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

     replace ecalUncalibHit2.MinAmplBarrel = 12.
     replace ecalUncalibHit2.MinAmplEndcap = 16.

     replace ecalUncalibHit2.EBdigiCollection = ecalEBunpacker:ebDigis
     replace ecalUncalibHit2.EEdigiCollection = ecalEBunpacker:eeDigis

     module ecalUncalibHit = ecalWeightUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalWeightUncalibRecHit.cfi"

     replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:ebDigis
     replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:eeDigis

include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"

     replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
     replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE

include "DQM/EcalBarrelMonitorModule/data/EcalBarrelMonitorModule.cfi"

     replace ecalBarrelMonitorModule.enableMonitorDaemon = true
     replace ecalBarrelMonitorModule.enableCleanup = false

include "DQM/EcalBarrelMonitorTasks/data/EcalBarrelMonitorTasks.cfi"

     replace ecalBarrelTimingTask.EcalUncalibratedRecHitCollection = ecalUncalibHit2:EcalUncalibRecHitsEB

include "DQM/EcalBarrelMonitorTasks/data/disableCleanup.cff"

include "SimCalorimetry/EcalTrigPrimProducers/data/ecalTriggerPrimitiveDigis.cff"
include "Geometry/EcalMapping/data/EcalMapping.cfi"

    replace ecalTriggerPrimitiveDigis.Label = "ecalEBunpacker"
    replace ecalTriggerPrimitiveDigis.InstanceEB = "ebDigis"
    replace ecalTriggerPrimitiveDigis.InstanceEE = "eeDigis"
    replace ecalTriggerPrimitiveDigis.BarrelOnly = true

    replace EcalTrigPrimESProducer.DatabaseFileEB = "TPG_EB_MIPs.txt"
    replace EcalTrigPrimESProducer.DatabaseFileEE = "TPG_EE.txt"

    replace ecalBarrelTriggerTowerTask.EcalTrigPrimDigiCollectionReal = ecalEBunpacker:EBTT

include "DQM/EcalBarrelMonitorClient/data/EcalBarrelMonitorClient.cfi"

     replace ecalBarrelMonitorClient.maskFile = "maskfile-EB.dat"
     replace ecalBarrelMonitorClient.location = "P5"

     replace ecalBarrelMonitorClient.enabledClients = { "Integrity",
                                                        "PedestalOnline",
                                                        "Pedestal", "TestPulse",
                                                        "Laser", "Timing",
                                                        "Cosmic",
                                                        "TriggerTower" }

     replace ecalBarrelMonitorClient.enableMonitorDaemon = false
     replace ecalBarrelMonitorClient.enableStateMachine = true
     replace ecalBarrelMonitorClient.prefixME = ""
     replace ecalBarrelMonitorClient.enableServer = false
#     replace ecalBarrelMonitorClient.superModules = { 32 }

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     module dqmInfo = DQMEventInfo{
       untracked bool enableMonitorDaemon = false
       untracked string subSystemFolder = "EcalBarrel"
     }

     module dqmSaver = DQMFileSaver{
       untracked string dirName = "."
       untracked string fileName = "EcalBarrel"
     }

     module dqmQTest = QualityTester{
       untracked int32 prescaleFactor = 1
       untracked bool getQualityTestsFromFile = true
       untracked string qtList = "EcalBarrelQualityTests.xml"
       untracked string reportThreshold = "red"
     }

     sequence ecalBarrelDataSequence = { preScaler,
                                         dqmInfo,
                                         dqmQTest,
                                         dqmSaver,
                                         ecalEBunpacker,
                                         ecalUncalibHit,
                                         ecalUncalibHit2,
                                         ecalRecHit }

     sequence ecalBarrelMonitorSequence = { ecalBarrelMonitorModule,
                                            ecalBarrelMonitorClient }

     path p = { ecalBarrelDataSequence, ecalBarrelMonitorSequence }

     endpath q = { ecalTriggerPrimitiveDigis, ecalBarrelCosmicTasksSequence }

     untracked PSet maxEvents = {untracked int32 input = -1}

     source = NewEventStreamFileReader {
        untracked vstring fileNames = {
            "file:/data1/lookarea/GlobalAug07.00017220.0001.A.storageManager.0.0000.dat"
        }
     }

include "CondCore/DBCommon/data/CondDBSetup.cfi"

      es_source ecalConditions = PoolDBESSource{
        using CondDBSetup

        VPSet toGet = {
            { string record = "EcalIntercalibConstantsRcd"
              string tag = "EcalIntercalibConstants_CosmGain200" },
            { string record = "EcalPedestalsRcd"
              string tag = "EcalPedestals_online" },
            { string record = "EcalADCToGeVConstantRcd"
              string tag = "EcalADCToGeVConstant_CosmGain200" },
            { string record = "EcalGainRatiosRcd"
              string tag = "EcalGainRatios_trivial" },
            { string record = "EcalWeightXtalGroupsRcd"
              string tag = "EcalWeightXtalGroups_trivial" },
            { string record = "EcalTBWeightsRcd"
              string tag = "EcalTBWeights_trivial" },
            { string record = "EcalLaserAlphasRcd"
              string tag = "EcalLaserAlphas_trivial" },
            { string record = "EcalLaserAPDPNRatiosRcd"
              string tag = "EcalLaserAPDPNRatios_trivial" },
            { string record = "EcalLaserAPDPNRatiosRefRcd"
              string tag = "EcalLaserAPDPNRatiosRef_trivial" }
        }
#        string connect = "oracle://orcon/CMS_COND_ON_170_ECAL"
        string connect = "frontier://(serverurl=http://frontier1.cms:8000/FrontierOn)(serverurl=http://frontier2.cms:8000/FrontierOn)(retrieve-ziplevel=0)/CMS_COND_ON_170_ECAL"
        untracked bool siteLocalConfig = false
        untracked uint32 authenticationMethod = 1
        string timetype = "runnumber"
        untracked uint32 messagelevel = 0
      }

include "CalibCalorimetry/EcalLaserCorrection/data/ecalLaserCorrectionService.cfi"

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi",
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiGainSwitch",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalRawToDigiDev",
                                        "EcalRawToDigiDevTriggerType",
                                        "EcalRawToDigiDevTpg",
                                        "EcalRawToDigiDevNumTowerBlocks",
                                        "EcalRawToDigiDevTowerId",
                                        "EcalRawToDigiDevTowerSize",
                                        "EcalRawToDigiDevChId",
                                        "EcalRawToDigiDevGainZero",
                                        "EcalRawToDigiDevGainSwitch",
                                        "EcalRawToDigiDevDccBlockSize",
                                        "EcalRawToDigiDevMemBlock",
                                        "EcalRawToDigiDevMemTowerId",
                                        "EcalRawToDigiDevMemChId",
                                        "EcalRawToDigiDevMemGain",
                                        "EcalRawToDigiDevTCC",
                                        "EcalRawToDigiDevSRP",
                                        "EcalBarrelMonitor"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                        = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService             = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi                = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg             = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks  = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId         = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainSwitch      = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize    = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDev               = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTriggerType    = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTpg            = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevNumTowerBlocks = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTowerId        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTowerSize      = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevChId           = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevGainZero       = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevGainSwitch     = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevDccBlockSize   = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemBlock       = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemTowerId     = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemChId        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemGain        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTCC            = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevSRP            = { untracked int32 limit = 1000 }
         untracked PSet EcalBarrelMonitor              = { untracked int32 limit = 0 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

     service = DQMShipMonitoring{
       untracked uint32 period = 5
     }

include "DQMServices/Examples/test/dqm_monitorDaemon.cfi"

     replace MonitorDaemon.UpdateDelay = 500
     replace MonitorDaemon.maxAttempts2Reconnect = 99999
     replace MonitorDaemon.NameAsSource = "EB"

# if the DQMCollector is running on localhost
#     replace MonitorDaemon.DestinationAddress = "localhost"
# official DQMCollector for GREA
     replace MonitorDaemon.DestinationAddress = "srv-c2d05-19"

}
